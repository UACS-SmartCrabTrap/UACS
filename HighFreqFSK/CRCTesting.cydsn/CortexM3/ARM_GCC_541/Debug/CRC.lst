ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLktsif.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CRC.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CRC_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	CRC_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	CRC_Enable, %function
  25              	CRC_Enable:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\CRC.c"
   1:Generated_Source\PSoC5/CRC.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/CRC.c **** * File Name: CRC.c
   3:Generated_Source\PSoC5/CRC.c **** * Version 2.40
   4:Generated_Source\PSoC5/CRC.c **** *
   5:Generated_Source\PSoC5/CRC.c **** * Description:
   6:Generated_Source\PSoC5/CRC.c **** *  This file provides the source code to the API for the CRC component
   7:Generated_Source\PSoC5/CRC.c **** *
   8:Generated_Source\PSoC5/CRC.c **** * Note:
   9:Generated_Source\PSoC5/CRC.c **** *  None
  10:Generated_Source\PSoC5/CRC.c **** *
  11:Generated_Source\PSoC5/CRC.c **** ********************************************************************************
  12:Generated_Source\PSoC5/CRC.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/CRC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/CRC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/CRC.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/CRC.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/CRC.c **** 
  18:Generated_Source\PSoC5/CRC.c **** #include "CRC.h"
  19:Generated_Source\PSoC5/CRC.c **** 
  20:Generated_Source\PSoC5/CRC.c **** uint8 CRC_initVar = 0u;
  21:Generated_Source\PSoC5/CRC.c **** 
  22:Generated_Source\PSoC5/CRC.c **** CRC_BACKUP_STRUCT CRC_backup =
  23:Generated_Source\PSoC5/CRC.c **** {
  24:Generated_Source\PSoC5/CRC.c ****     0x00u, /* enableState; */
  25:Generated_Source\PSoC5/CRC.c **** 
  26:Generated_Source\PSoC5/CRC.c ****     /* Save D0 and D1 registers are none-retention for Panther ES1 */
  27:Generated_Source\PSoC5/CRC.c ****     #if (CY_UDB_V0)
  28:Generated_Source\PSoC5/CRC.c **** 
  29:Generated_Source\PSoC5/CRC.c ****         #if(CRC_CRC_SIZE <= 32u)
  30:Generated_Source\PSoC5/CRC.c ****             CRC_DEFAULT_POLYNOM, /* polynomial; */
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLktsif.s 			page 2


  31:Generated_Source\PSoC5/CRC.c **** 
  32:Generated_Source\PSoC5/CRC.c ****         #else
  33:Generated_Source\PSoC5/CRC.c ****             CRC_DEFAULT_POLYNOM_UPPER, /* polynomialUpper; */
  34:Generated_Source\PSoC5/CRC.c ****             CRC_DEFAULT_POLYNOM_LOWER,  /* polynomialLower; */
  35:Generated_Source\PSoC5/CRC.c **** 
  36:Generated_Source\PSoC5/CRC.c ****         #endif  /* End (CRC_CRC_SIZE <= 32u) */
  37:Generated_Source\PSoC5/CRC.c **** 
  38:Generated_Source\PSoC5/CRC.c ****     #endif  /* End (CY_UDB_V0) */
  39:Generated_Source\PSoC5/CRC.c **** };
  40:Generated_Source\PSoC5/CRC.c **** 
  41:Generated_Source\PSoC5/CRC.c **** 
  42:Generated_Source\PSoC5/CRC.c **** /*******************************************************************************
  43:Generated_Source\PSoC5/CRC.c **** * Function Name: CRC_Init
  44:Generated_Source\PSoC5/CRC.c **** ********************************************************************************
  45:Generated_Source\PSoC5/CRC.c **** *
  46:Generated_Source\PSoC5/CRC.c **** * Summary:
  47:Generated_Source\PSoC5/CRC.c **** *  Initializes seed and polynomial registers with initial values.
  48:Generated_Source\PSoC5/CRC.c **** *
  49:Generated_Source\PSoC5/CRC.c **** * Parameters:
  50:Generated_Source\PSoC5/CRC.c **** *  void
  51:Generated_Source\PSoC5/CRC.c **** *
  52:Generated_Source\PSoC5/CRC.c **** * Return:
  53:Generated_Source\PSoC5/CRC.c **** *  void
  54:Generated_Source\PSoC5/CRC.c **** *
  55:Generated_Source\PSoC5/CRC.c **** *******************************************************************************/
  56:Generated_Source\PSoC5/CRC.c **** void CRC_Init(void) 
  57:Generated_Source\PSoC5/CRC.c **** {
  58:Generated_Source\PSoC5/CRC.c ****     /* Writes seed value and ponynom value provided for customizer */
  59:Generated_Source\PSoC5/CRC.c ****     #if (CRC_CRC_SIZE <= 32u)
  60:Generated_Source\PSoC5/CRC.c ****         CRC_WritePolynomial(CRC_DEFAULT_POLYNOM);
  61:Generated_Source\PSoC5/CRC.c ****         CRC_WriteSeed(CRC_DEFAULT_SEED);
  62:Generated_Source\PSoC5/CRC.c ****         CRC_ResetSeedInit(CRC_DEFAULT_SEED);
  63:Generated_Source\PSoC5/CRC.c **** 
  64:Generated_Source\PSoC5/CRC.c ****     #else
  65:Generated_Source\PSoC5/CRC.c ****         CRC_WritePolynomialUpper(CRC_DEFAULT_POLYNOM_UPPER);
  66:Generated_Source\PSoC5/CRC.c ****         CRC_WritePolynomialLower(CRC_DEFAULT_POLYNOM_LOWER);
  67:Generated_Source\PSoC5/CRC.c ****         CRC_WriteSeedUpper(CRC_DEFAULT_SEED_UPPER);
  68:Generated_Source\PSoC5/CRC.c ****         CRC_WriteSeedLower(CRC_DEFAULT_SEED_LOWER);
  69:Generated_Source\PSoC5/CRC.c ****         CRC_ResetSeedInitUpper(CRC_DEFAULT_SEED_UPPER);
  70:Generated_Source\PSoC5/CRC.c ****         CRC_ResetSeedInitLower(CRC_DEFAULT_SEED_LOWER);
  71:Generated_Source\PSoC5/CRC.c **** 
  72:Generated_Source\PSoC5/CRC.c ****     #endif  /* End (CRC_CRC_SIZE <= 32u) */
  73:Generated_Source\PSoC5/CRC.c **** }
  74:Generated_Source\PSoC5/CRC.c **** 
  75:Generated_Source\PSoC5/CRC.c **** 
  76:Generated_Source\PSoC5/CRC.c **** /*******************************************************************************
  77:Generated_Source\PSoC5/CRC.c **** * Function Name: CRC_Enable
  78:Generated_Source\PSoC5/CRC.c **** ********************************************************************************
  79:Generated_Source\PSoC5/CRC.c **** *
  80:Generated_Source\PSoC5/CRC.c **** * Summary:
  81:Generated_Source\PSoC5/CRC.c **** *  Starts CRC computation on rising edge of input clock.
  82:Generated_Source\PSoC5/CRC.c **** *
  83:Generated_Source\PSoC5/CRC.c **** * Parameters:
  84:Generated_Source\PSoC5/CRC.c **** *  void
  85:Generated_Source\PSoC5/CRC.c **** *
  86:Generated_Source\PSoC5/CRC.c **** * Return:
  87:Generated_Source\PSoC5/CRC.c **** *  void
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLktsif.s 			page 3


  88:Generated_Source\PSoC5/CRC.c **** *
  89:Generated_Source\PSoC5/CRC.c **** *******************************************************************************/
  90:Generated_Source\PSoC5/CRC.c **** void CRC_Enable(void) 
  91:Generated_Source\PSoC5/CRC.c **** {
  28              		.loc 1 91 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  92:Generated_Source\PSoC5/CRC.c ****     CRC_CONTROL_REG |= CRC_CTRL_ENABLE;
  33              		.loc 1 92 0
  34 0000 024A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F00103 		orr	r3, r3, #1
  37 0008 1370     		strb	r3, [r2]
  38 000a 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 000c 72640040 		.word	1073767538
  43              		.cfi_endproc
  44              	.LFE1:
  45              		.size	CRC_Enable, .-CRC_Enable
  46              		.section	.text.CRC_Stop,"ax",%progbits
  47              		.align	2
  48              		.global	CRC_Stop
  49              		.thumb
  50              		.thumb_func
  51              		.type	CRC_Stop, %function
  52              	CRC_Stop:
  53              	.LFB3:
  93:Generated_Source\PSoC5/CRC.c **** }
  94:Generated_Source\PSoC5/CRC.c **** 
  95:Generated_Source\PSoC5/CRC.c **** 
  96:Generated_Source\PSoC5/CRC.c **** /*******************************************************************************
  97:Generated_Source\PSoC5/CRC.c **** * Function Name: CRC_Start
  98:Generated_Source\PSoC5/CRC.c **** ********************************************************************************
  99:Generated_Source\PSoC5/CRC.c **** *
 100:Generated_Source\PSoC5/CRC.c **** * Summary:
 101:Generated_Source\PSoC5/CRC.c **** *  Initializes seed and polynomial registers with initial values. Computation
 102:Generated_Source\PSoC5/CRC.c **** *  of CRC starts on rising edge of input clock.
 103:Generated_Source\PSoC5/CRC.c **** *
 104:Generated_Source\PSoC5/CRC.c **** * Parameters:
 105:Generated_Source\PSoC5/CRC.c **** *  void
 106:Generated_Source\PSoC5/CRC.c **** *
 107:Generated_Source\PSoC5/CRC.c **** * Return:
 108:Generated_Source\PSoC5/CRC.c **** *  void
 109:Generated_Source\PSoC5/CRC.c **** *
 110:Generated_Source\PSoC5/CRC.c **** * Global variables:
 111:Generated_Source\PSoC5/CRC.c **** *  CRC_initVar: global variable is used to indicate initial
 112:Generated_Source\PSoC5/CRC.c **** *  configuration of this component.  The variable is initialized to zero and set
 113:Generated_Source\PSoC5/CRC.c **** *  to 1 the first time CRC_Start() is called. This allows
 114:Generated_Source\PSoC5/CRC.c **** *  enable/disable component without re-initialization in all subsequent calls
 115:Generated_Source\PSoC5/CRC.c **** *  to the CRC_Start() routine.
 116:Generated_Source\PSoC5/CRC.c **** *
 117:Generated_Source\PSoC5/CRC.c **** *******************************************************************************/
 118:Generated_Source\PSoC5/CRC.c **** void CRC_Start(void) 
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLktsif.s 			page 4


 119:Generated_Source\PSoC5/CRC.c **** {
 120:Generated_Source\PSoC5/CRC.c ****     /* Writes seed value and ponynom value provided from customizer */
 121:Generated_Source\PSoC5/CRC.c ****     if (CRC_initVar == 0u)
 122:Generated_Source\PSoC5/CRC.c ****     {
 123:Generated_Source\PSoC5/CRC.c ****         CRC_Init();
 124:Generated_Source\PSoC5/CRC.c ****         CRC_initVar = 1u;
 125:Generated_Source\PSoC5/CRC.c ****     }
 126:Generated_Source\PSoC5/CRC.c **** 
 127:Generated_Source\PSoC5/CRC.c ****     CRC_Enable();
 128:Generated_Source\PSoC5/CRC.c **** }
 129:Generated_Source\PSoC5/CRC.c **** 
 130:Generated_Source\PSoC5/CRC.c **** 
 131:Generated_Source\PSoC5/CRC.c **** /*******************************************************************************
 132:Generated_Source\PSoC5/CRC.c **** * Function Name: CRC_Stop
 133:Generated_Source\PSoC5/CRC.c **** ********************************************************************************
 134:Generated_Source\PSoC5/CRC.c **** *
 135:Generated_Source\PSoC5/CRC.c **** * Summary:
 136:Generated_Source\PSoC5/CRC.c **** *  Stops CRC computation.
 137:Generated_Source\PSoC5/CRC.c **** *
 138:Generated_Source\PSoC5/CRC.c **** * Parameters:
 139:Generated_Source\PSoC5/CRC.c **** *  void
 140:Generated_Source\PSoC5/CRC.c **** *
 141:Generated_Source\PSoC5/CRC.c **** * Return:
 142:Generated_Source\PSoC5/CRC.c **** *  void
 143:Generated_Source\PSoC5/CRC.c **** *
 144:Generated_Source\PSoC5/CRC.c **** * Reentrant:
 145:Generated_Source\PSoC5/CRC.c **** *  No
 146:Generated_Source\PSoC5/CRC.c **** *
 147:Generated_Source\PSoC5/CRC.c **** *******************************************************************************/
 148:Generated_Source\PSoC5/CRC.c **** void CRC_Stop(void) 
 149:Generated_Source\PSoC5/CRC.c **** {
  54              		.loc 1 149 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
 150:Generated_Source\PSoC5/CRC.c ****     CRC_CONTROL_REG &= ((uint8)~CRC_CTRL_ENABLE);
  59              		.loc 1 150 0
  60 0000 024A     		ldr	r2, .L5
  61 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  62 0004 03F0FE03 		and	r3, r3, #254
  63 0008 1370     		strb	r3, [r2]
  64 000a 7047     		bx	lr
  65              	.L6:
  66              		.align	2
  67              	.L5:
  68 000c 72640040 		.word	1073767538
  69              		.cfi_endproc
  70              	.LFE3:
  71              		.size	CRC_Stop, .-CRC_Stop
  72              		.section	.text.CRC_ResetSeedInit,"ax",%progbits
  73              		.align	2
  74              		.global	CRC_ResetSeedInit
  75              		.thumb
  76              		.thumb_func
  77              		.type	CRC_ResetSeedInit, %function
  78              	CRC_ResetSeedInit:
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLktsif.s 			page 5


  79              	.LFB4:
 151:Generated_Source\PSoC5/CRC.c **** }
 152:Generated_Source\PSoC5/CRC.c **** 
 153:Generated_Source\PSoC5/CRC.c **** 
 154:Generated_Source\PSoC5/CRC.c **** #if (CRC_CRC_SIZE <= 32u) /* 8-32 bits CRC */
 155:Generated_Source\PSoC5/CRC.c ****     /*******************************************************************************
 156:Generated_Source\PSoC5/CRC.c ****     * FUNCTION NAME: CRC_ResetSeedInit
 157:Generated_Source\PSoC5/CRC.c ****     ********************************************************************************
 158:Generated_Source\PSoC5/CRC.c ****     *
 159:Generated_Source\PSoC5/CRC.c ****     * Summary:
 160:Generated_Source\PSoC5/CRC.c ****     *  Increments the CRC by one when API single step mode is used.
 161:Generated_Source\PSoC5/CRC.c ****     *
 162:Generated_Source\PSoC5/CRC.c ****     * Parameters:
 163:Generated_Source\PSoC5/CRC.c ****     *  void
 164:Generated_Source\PSoC5/CRC.c ****     *
 165:Generated_Source\PSoC5/CRC.c ****     * Return:
 166:Generated_Source\PSoC5/CRC.c ****     *  void
 167:Generated_Source\PSoC5/CRC.c ****     *
 168:Generated_Source\PSoC5/CRC.c ****     *******************************************************************************/
 169:Generated_Source\PSoC5/CRC.c ****     void CRC_ResetSeedInit(uint8 seed)
 170:Generated_Source\PSoC5/CRC.c ****                                         
 171:Generated_Source\PSoC5/CRC.c ****     {
  80              		.loc 1 171 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              	.LVL0:
  85 0000 10B5     		push	{r4, lr}
  86              		.cfi_def_cfa_offset 8
  87              		.cfi_offset 4, -8
  88              		.cfi_offset 14, -4
 172:Generated_Source\PSoC5/CRC.c ****          uint8 enableInterrupts;
 173:Generated_Source\PSoC5/CRC.c **** 
 174:Generated_Source\PSoC5/CRC.c ****         /* Mask the Seed to cut unused bits */
 175:Generated_Source\PSoC5/CRC.c ****         #if((0u != (CRC_CRC_SIZE % 8u)) || (CRC_CRC_SIZE == 24u))
 176:Generated_Source\PSoC5/CRC.c ****             seed &= CRC_MASK;
  89              		.loc 1 176 0
  90 0002 00F00F04 		and	r4, r0, #15
  91              	.LVL1:
 177:Generated_Source\PSoC5/CRC.c ****         #endif /* ((0u != (CRC_CRC_SIZE % 8u)) || (CRC_CRC_SIZE == 24u)) */
 178:Generated_Source\PSoC5/CRC.c **** 
 179:Generated_Source\PSoC5/CRC.c ****         /* Change AuxControl reg, need to be safety */
 180:Generated_Source\PSoC5/CRC.c ****         enableInterrupts = CyEnterCriticalSection();
  92              		.loc 1 180 0
  93 0006 FFF7FEFF 		bl	CyEnterCriticalSection
  94              	.LVL2:
 181:Generated_Source\PSoC5/CRC.c **** 
 182:Generated_Source\PSoC5/CRC.c ****         #if (CRC_TIME_MULTIPLEXING_ENABLE)
 183:Generated_Source\PSoC5/CRC.c ****             /* Set FIFOs to single register */
 184:Generated_Source\PSoC5/CRC.c ****             CRC_AUX_CONTROL_A_REG |= CRC_AUXCTRL_FIFO_SINGLE_REG;
 185:Generated_Source\PSoC5/CRC.c **** 
 186:Generated_Source\PSoC5/CRC.c ****             #if(CRC_CRC_SIZE > 16u)       /* 17-32 bits CRC */
 187:Generated_Source\PSoC5/CRC.c ****                 CRC_AUX_CONTROL_B_REG |= CRC_AUXCTRL_FIFO_SINGLE_REG;
 188:Generated_Source\PSoC5/CRC.c ****             #endif  /* End (CRC_CRC_SIZE <= 8u) */
 189:Generated_Source\PSoC5/CRC.c **** 
 190:Generated_Source\PSoC5/CRC.c ****             /* AuxControl reg settings are done */
 191:Generated_Source\PSoC5/CRC.c ****             CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLktsif.s 			page 6


 192:Generated_Source\PSoC5/CRC.c **** 
 193:Generated_Source\PSoC5/CRC.c ****             /* Write Seed COPY */
 194:Generated_Source\PSoC5/CRC.c ****             #if (CRC_CRC_SIZE <= 16u)          /* 16 bits CRC */
 195:Generated_Source\PSoC5/CRC.c ****                 CRC_SEED_COPY_A__A1_REG = HI8(seed);
 196:Generated_Source\PSoC5/CRC.c ****                 CRC_SEED_COPY_A__A0_REG = LO8(seed);
 197:Generated_Source\PSoC5/CRC.c **** 
 198:Generated_Source\PSoC5/CRC.c ****             #elif (CRC_CRC_SIZE <= 24u)        /* 24 bits CRC */
 199:Generated_Source\PSoC5/CRC.c ****                 CRC_SEED_COPY_B__A1_REG = LO8(HI16(seed));
 200:Generated_Source\PSoC5/CRC.c ****                 CRC_SEED_COPY_B__A0_REG = HI8(seed);
 201:Generated_Source\PSoC5/CRC.c ****                 CRC_SEED_COPY_A__A0_REG = LO8(seed);
 202:Generated_Source\PSoC5/CRC.c **** 
 203:Generated_Source\PSoC5/CRC.c ****             #else                                           /* 32 bits CRC */
 204:Generated_Source\PSoC5/CRC.c ****                 CRC_SEED_COPY_B__A1_REG = HI8(HI16(seed));
 205:Generated_Source\PSoC5/CRC.c ****                 CRC_SEED_COPY_A__A1_REG = LO8(HI16(seed));
 206:Generated_Source\PSoC5/CRC.c ****                 CRC_SEED_COPY_B__A0_REG = HI8(seed);
 207:Generated_Source\PSoC5/CRC.c ****                 CRC_SEED_COPY_A__A0_REG = LO8(seed);
 208:Generated_Source\PSoC5/CRC.c ****             #endif  /* End (CRC_CRC_SIZE <= 32u) */
 209:Generated_Source\PSoC5/CRC.c **** 
 210:Generated_Source\PSoC5/CRC.c ****         #else
 211:Generated_Source\PSoC5/CRC.c ****             /* Set FIFOs to single register */
 212:Generated_Source\PSoC5/CRC.c ****             #if (CRC_CRC_SIZE <= 8u)         /* 8 bits CRC */
 213:Generated_Source\PSoC5/CRC.c ****                 CRC_AUX_CONTROL_A_REG |= CRC_AUXCTRL_FIFO_SINGLE_REG;
  95              		.loc 1 213 0
  96 000a 054A     		ldr	r2, .L9
  97 000c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  98 000e 43F00303 		orr	r3, r3, #3
  99 0012 1370     		strb	r3, [r2]
 214:Generated_Source\PSoC5/CRC.c **** 
 215:Generated_Source\PSoC5/CRC.c ****             #elif (CRC_CRC_SIZE <= 16u)      /* 16 bits CRC */
 216:Generated_Source\PSoC5/CRC.c ****                 CRC_AUX_CONTROL_A_REG  |= CRC_AUXCTRL_FIFO_SINGLE_REG;
 217:Generated_Source\PSoC5/CRC.c ****                 CRC_AUX_CONTROL_B_REG  |= CRC_AUXCTRL_FIFO_SINGLE_REG;
 218:Generated_Source\PSoC5/CRC.c **** 
 219:Generated_Source\PSoC5/CRC.c ****             #elif (CRC_CRC_SIZE <= 24u)      /* 24 bits CRC */
 220:Generated_Source\PSoC5/CRC.c ****                 CRC_AUX_CONTROL_A_REG  |= CRC_AUXCTRL_FIFO_SINGLE_REG;
 221:Generated_Source\PSoC5/CRC.c ****                 CRC_AUX_CONTROL_B_REG  |= CRC_AUXCTRL_FIFO_SINGLE_REG;
 222:Generated_Source\PSoC5/CRC.c ****                 CRC_AUX_CONTROL_C_REG  |= CRC_AUXCTRL_FIFO_SINGLE_REG;
 223:Generated_Source\PSoC5/CRC.c **** 
 224:Generated_Source\PSoC5/CRC.c ****             #elif (CRC_CRC_SIZE <= 32u)      /* 32 bits CRC */
 225:Generated_Source\PSoC5/CRC.c ****                 CRC_AUX_CONTROL_A_REG  |= CRC_AUXCTRL_FIFO_SINGLE_REG;
 226:Generated_Source\PSoC5/CRC.c ****                 CRC_AUX_CONTROL_B_REG  |= CRC_AUXCTRL_FIFO_SINGLE_REG;
 227:Generated_Source\PSoC5/CRC.c ****                 CRC_AUX_CONTROL_C_REG  |= CRC_AUXCTRL_FIFO_SINGLE_REG;
 228:Generated_Source\PSoC5/CRC.c ****                 CRC_AUX_CONTROL_D_REG  |= CRC_AUXCTRL_FIFO_SINGLE_REG;
 229:Generated_Source\PSoC5/CRC.c **** 
 230:Generated_Source\PSoC5/CRC.c ****             #endif  /* End (CRC_CRC_SIZE <= 8u) */
 231:Generated_Source\PSoC5/CRC.c **** 
 232:Generated_Source\PSoC5/CRC.c ****             /* AuxControl reg setting are done */
 233:Generated_Source\PSoC5/CRC.c ****             CyExitCriticalSection(enableInterrupts);
 100              		.loc 1 233 0
 101 0014 FFF7FEFF 		bl	CyExitCriticalSection
 102              	.LVL3:
 234:Generated_Source\PSoC5/CRC.c **** 
 235:Generated_Source\PSoC5/CRC.c ****             /* Write Seed COPY */
 236:Generated_Source\PSoC5/CRC.c ****             CY_SET_REG8(CRC_SEED_COPY_PTR, seed);
 103              		.loc 1 236 0
 104 0018 024B     		ldr	r3, .L9+4
 105 001a 1C70     		strb	r4, [r3]
 106 001c 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLktsif.s 			page 7


 107              	.LVL4:
 108              	.L10:
 109 001e 00BF     		.align	2
 110              	.L9:
 111 0020 92640040 		.word	1073767570
 112 0024 42640040 		.word	1073767490
 113              		.cfi_endproc
 114              	.LFE4:
 115              		.size	CRC_ResetSeedInit, .-CRC_ResetSeedInit
 116              		.section	.text.CRC_ReadCRC,"ax",%progbits
 117              		.align	2
 118              		.global	CRC_ReadCRC
 119              		.thumb
 120              		.thumb_func
 121              		.type	CRC_ReadCRC, %function
 122              	CRC_ReadCRC:
 123              	.LFB5:
 237:Generated_Source\PSoC5/CRC.c ****         #endif  /* End (CRC_TIME_MULTIPLEXING_ENABLE) */
 238:Generated_Source\PSoC5/CRC.c ****     }
 239:Generated_Source\PSoC5/CRC.c **** 
 240:Generated_Source\PSoC5/CRC.c **** #else
 241:Generated_Source\PSoC5/CRC.c **** 
 242:Generated_Source\PSoC5/CRC.c ****     /*******************************************************************************
 243:Generated_Source\PSoC5/CRC.c ****     * FUNCTION NAME: CRC_ResetSeedInitUpper
 244:Generated_Source\PSoC5/CRC.c ****     ********************************************************************************
 245:Generated_Source\PSoC5/CRC.c ****     *
 246:Generated_Source\PSoC5/CRC.c ****     * Summary:
 247:Generated_Source\PSoC5/CRC.c ****     *  Increments the CRC by one when API single step mode is used.
 248:Generated_Source\PSoC5/CRC.c ****     *
 249:Generated_Source\PSoC5/CRC.c ****     * Parameters:
 250:Generated_Source\PSoC5/CRC.c ****     *  void
 251:Generated_Source\PSoC5/CRC.c ****     *
 252:Generated_Source\PSoC5/CRC.c ****     * Return:
 253:Generated_Source\PSoC5/CRC.c ****     *  void
 254:Generated_Source\PSoC5/CRC.c ****     *
 255:Generated_Source\PSoC5/CRC.c ****     *******************************************************************************/
 256:Generated_Source\PSoC5/CRC.c ****     void CRC_ResetSeedInitUpper(uint32 seed) 
 257:Generated_Source\PSoC5/CRC.c ****     {
 258:Generated_Source\PSoC5/CRC.c ****         uint8 enableInterrupts;
 259:Generated_Source\PSoC5/CRC.c **** 
 260:Generated_Source\PSoC5/CRC.c ****         /* Mask the Seed Upper half to cut unused bits in case, when CRC size is not byte-aligned o
 261:Generated_Source\PSoC5/CRC.c ****         #if((0u != (CRC_CRC_SIZE % 8u)) || (CRC_CRC_SIZE == 24u))
 262:Generated_Source\PSoC5/CRC.c ****             seed &= CRC_MASK;
 263:Generated_Source\PSoC5/CRC.c ****         #endif /* ((0u != (CRC_CRC_SIZE % 8u)) || (CRC_CRC_SIZE == 24u)) */
 264:Generated_Source\PSoC5/CRC.c **** 
 265:Generated_Source\PSoC5/CRC.c ****         /* Change AuxControl reg, need to be safety */
 266:Generated_Source\PSoC5/CRC.c ****         enableInterrupts = CyEnterCriticalSection();
 267:Generated_Source\PSoC5/CRC.c **** 
 268:Generated_Source\PSoC5/CRC.c ****         /* Set FIFOs to single register */
 269:Generated_Source\PSoC5/CRC.c ****         CRC_AUX_CONTROL_A_REG |= CRC_AUXCTRL_FIFO_SINGLE_REG;
 270:Generated_Source\PSoC5/CRC.c ****         CRC_AUX_CONTROL_B_REG |= CRC_AUXCTRL_FIFO_SINGLE_REG;
 271:Generated_Source\PSoC5/CRC.c ****         CRC_AUX_CONTROL_C_REG |= CRC_AUXCTRL_FIFO_SINGLE_REG;
 272:Generated_Source\PSoC5/CRC.c **** 
 273:Generated_Source\PSoC5/CRC.c ****         #if (CRC_CRC_SIZE > 48u)               /* 49-64 bits CRC */
 274:Generated_Source\PSoC5/CRC.c ****             CRC_AUX_CONTROL_D_REG |= CRC_AUXCTRL_FIFO_SINGLE_REG;
 275:Generated_Source\PSoC5/CRC.c ****         #endif  /* End (CRC_CRC_SIZE <= 8u) */
 276:Generated_Source\PSoC5/CRC.c **** 
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLktsif.s 			page 8


 277:Generated_Source\PSoC5/CRC.c ****         /* AuxControl reg settings are done */
 278:Generated_Source\PSoC5/CRC.c ****         CyExitCriticalSection(enableInterrupts);
 279:Generated_Source\PSoC5/CRC.c **** 
 280:Generated_Source\PSoC5/CRC.c ****         /* Write Seed Upper COPY */
 281:Generated_Source\PSoC5/CRC.c ****         #if (CRC_CRC_SIZE <= 40u)          /* 40 bits CRC */
 282:Generated_Source\PSoC5/CRC.c ****             CRC_SEED_UPPER_COPY_C__A1_REG = LO8(seed);
 283:Generated_Source\PSoC5/CRC.c **** 
 284:Generated_Source\PSoC5/CRC.c ****         #elif (CRC_CRC_SIZE <= 48u)        /* 48 bits CRC */
 285:Generated_Source\PSoC5/CRC.c ****             CRC_SEED_UPPER_COPY_C__A1_REG = HI8(seed);
 286:Generated_Source\PSoC5/CRC.c ****             CRC_SEED_UPPER_COPY_B__A1_REG = LO8(seed);
 287:Generated_Source\PSoC5/CRC.c **** 
 288:Generated_Source\PSoC5/CRC.c ****         #elif (CRC_CRC_SIZE <= 56u)        /* 56 bits CRC */
 289:Generated_Source\PSoC5/CRC.c ****             CRC_SEED_UPPER_COPY_D__A1_REG = LO8(HI16(seed));
 290:Generated_Source\PSoC5/CRC.c ****             CRC_SEED_UPPER_COPY_C__A1_REG = HI8(seed);
 291:Generated_Source\PSoC5/CRC.c ****             CRC_SEED_UPPER_COPY_B__A1_REG = HI8(seed);
 292:Generated_Source\PSoC5/CRC.c **** 
 293:Generated_Source\PSoC5/CRC.c ****         #else                                           /* 64 bits CRC */
 294:Generated_Source\PSoC5/CRC.c ****             CRC_SEED_UPPER_COPY_D__A1_REG = HI8(HI16(seed));
 295:Generated_Source\PSoC5/CRC.c ****             CRC_SEED_UPPER_COPY_C__A1_REG = LO8(HI16(seed));
 296:Generated_Source\PSoC5/CRC.c ****             CRC_SEED_UPPER_COPY_B__A1_REG = HI8(seed);
 297:Generated_Source\PSoC5/CRC.c ****             CRC_SEED_UPPER_COPY_A__A1_REG = LO8(seed);
 298:Generated_Source\PSoC5/CRC.c **** 
 299:Generated_Source\PSoC5/CRC.c ****         #endif  /* End (CRC_CRC_SIZE <= 32u) */
 300:Generated_Source\PSoC5/CRC.c ****     }
 301:Generated_Source\PSoC5/CRC.c **** 
 302:Generated_Source\PSoC5/CRC.c **** 
 303:Generated_Source\PSoC5/CRC.c ****     /*******************************************************************************
 304:Generated_Source\PSoC5/CRC.c ****     * FUNCTION NAME: CRC_ResetSeedInitLower
 305:Generated_Source\PSoC5/CRC.c ****     ********************************************************************************
 306:Generated_Source\PSoC5/CRC.c ****     *
 307:Generated_Source\PSoC5/CRC.c ****     * Summary:
 308:Generated_Source\PSoC5/CRC.c ****     *  Increments the CRC by one when API single step mode is used.
 309:Generated_Source\PSoC5/CRC.c ****     *
 310:Generated_Source\PSoC5/CRC.c ****     * Parameters:
 311:Generated_Source\PSoC5/CRC.c ****     *  void
 312:Generated_Source\PSoC5/CRC.c ****     *
 313:Generated_Source\PSoC5/CRC.c ****     * Return:
 314:Generated_Source\PSoC5/CRC.c ****     *  void
 315:Generated_Source\PSoC5/CRC.c ****     *
 316:Generated_Source\PSoC5/CRC.c ****     *******************************************************************************/
 317:Generated_Source\PSoC5/CRC.c ****     void CRC_ResetSeedInitLower(uint32 seed) 
 318:Generated_Source\PSoC5/CRC.c ****     {
 319:Generated_Source\PSoC5/CRC.c ****         /* Write Seed Lower COPY */
 320:Generated_Source\PSoC5/CRC.c ****         #if (CRC_CRC_SIZE <= 40u)          /* 40 bits CRC */
 321:Generated_Source\PSoC5/CRC.c ****             CRC_SEED_LOWER_COPY_B__A1_REG = HI8(HI16(seed));
 322:Generated_Source\PSoC5/CRC.c ****             CRC_SEED_LOWER_COPY_C__A0_REG = LO8(HI16(seed));
 323:Generated_Source\PSoC5/CRC.c ****             CRC_SEED_LOWER_COPY_B__A0_REG = HI8(seed);
 324:Generated_Source\PSoC5/CRC.c ****             CRC_SEED_LOWER_COPY_A__A0_REG = LO8(seed);
 325:Generated_Source\PSoC5/CRC.c **** 
 326:Generated_Source\PSoC5/CRC.c ****         #elif (CRC_CRC_SIZE <= 48u)        /* 48 bits CRC */
 327:Generated_Source\PSoC5/CRC.c ****             CRC_SEED_LOWER_COPY_A__A1_REG = HI8(HI16(seed));
 328:Generated_Source\PSoC5/CRC.c ****             CRC_SEED_LOWER_COPY_C__A0_REG = LO8(HI16(seed));
 329:Generated_Source\PSoC5/CRC.c ****             CRC_SEED_LOWER_COPY_B__A0_REG = HI8(seed);
 330:Generated_Source\PSoC5/CRC.c ****             CRC_SEED_LOWER_COPY_A__A0_REG = LO8(seed);
 331:Generated_Source\PSoC5/CRC.c **** 
 332:Generated_Source\PSoC5/CRC.c ****         #else                                           /* 64 bits CRC */
 333:Generated_Source\PSoC5/CRC.c ****             CRC_SEED_LOWER_COPY_D__A0_REG = HI8(HI16(seed));
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLktsif.s 			page 9


 334:Generated_Source\PSoC5/CRC.c ****             CRC_SEED_LOWER_COPY_C__A0_REG = LO8(HI16(seed));
 335:Generated_Source\PSoC5/CRC.c ****             CRC_SEED_LOWER_COPY_B__A0_REG = HI8(seed);
 336:Generated_Source\PSoC5/CRC.c ****             CRC_SEED_LOWER_COPY_A__A0_REG = LO8(seed);
 337:Generated_Source\PSoC5/CRC.c **** 
 338:Generated_Source\PSoC5/CRC.c ****         #endif  /* End (CRC_CRC_SIZE <= 32u) */
 339:Generated_Source\PSoC5/CRC.c ****     }
 340:Generated_Source\PSoC5/CRC.c **** #endif  /* End (CRC_CRC_SIZE <= 32u) */
 341:Generated_Source\PSoC5/CRC.c **** 
 342:Generated_Source\PSoC5/CRC.c **** 
 343:Generated_Source\PSoC5/CRC.c **** #if(CRC_CRC_SIZE <= 32u) /* 8-32 bits CRC */
 344:Generated_Source\PSoC5/CRC.c ****     /*******************************************************************************
 345:Generated_Source\PSoC5/CRC.c ****     * Function Name: CRC_ReadCRC
 346:Generated_Source\PSoC5/CRC.c ****     ********************************************************************************
 347:Generated_Source\PSoC5/CRC.c ****     *
 348:Generated_Source\PSoC5/CRC.c ****     * Summary:
 349:Generated_Source\PSoC5/CRC.c ****     *  Reads CRC value.
 350:Generated_Source\PSoC5/CRC.c ****     *
 351:Generated_Source\PSoC5/CRC.c ****     * Parameters:
 352:Generated_Source\PSoC5/CRC.c ****     *  void
 353:Generated_Source\PSoC5/CRC.c ****     *
 354:Generated_Source\PSoC5/CRC.c ****     * Return:
 355:Generated_Source\PSoC5/CRC.c ****     *  Returns CRC value.
 356:Generated_Source\PSoC5/CRC.c ****     *
 357:Generated_Source\PSoC5/CRC.c ****     * Side Effects:
 358:Generated_Source\PSoC5/CRC.c ****     *  The CRC value is cut according to mask = 2^(Resolution) - 1.
 359:Generated_Source\PSoC5/CRC.c ****     *  For example if CRC Resolution is 14 bits the mask value is:
 360:Generated_Source\PSoC5/CRC.c ****     *  mask = 2^(14) - 1 = 0x3FFFu.
 361:Generated_Source\PSoC5/CRC.c ****     *  The seed value = 0xFFFFu is cut:
 362:Generated_Source\PSoC5/CRC.c ****     *  seed & mask = 0xFFFFu & 0x3FFFu = 0x3FFFu.
 363:Generated_Source\PSoC5/CRC.c ****     *
 364:Generated_Source\PSoC5/CRC.c ****     *******************************************************************************/
 365:Generated_Source\PSoC5/CRC.c ****     uint8 CRC_ReadCRC(void) 
 366:Generated_Source\PSoC5/CRC.c ****     {
 124              		.loc 1 366 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              		@ link register save eliminated.
 367:Generated_Source\PSoC5/CRC.c ****         /* Read CRC */
 368:Generated_Source\PSoC5/CRC.c ****         #if (CRC_TIME_MULTIPLEXING_ENABLE)
 369:Generated_Source\PSoC5/CRC.c **** 
 370:Generated_Source\PSoC5/CRC.c ****             uint8 seed;
 371:Generated_Source\PSoC5/CRC.c **** 
 372:Generated_Source\PSoC5/CRC.c ****             #if (CRC_CRC_SIZE <= 16u)          /* 16 bits CRC */
 373:Generated_Source\PSoC5/CRC.c ****                 seed = ((uint16) CRC_SEED_A__A1_REG) << 8u;
 374:Generated_Source\PSoC5/CRC.c ****                 seed |= CRC_SEED_A__A0_REG;
 375:Generated_Source\PSoC5/CRC.c **** 
 376:Generated_Source\PSoC5/CRC.c ****             #elif (CRC_CRC_SIZE <= 24u)        /* 24 bits CRC */
 377:Generated_Source\PSoC5/CRC.c ****                 seed = ((uint32) (CRC_SEED_B__A1_REG)) << 16u;
 378:Generated_Source\PSoC5/CRC.c ****                 seed |= ((uint32) (CRC_SEED_B__A0_REG)) << 8u;
 379:Generated_Source\PSoC5/CRC.c ****                 seed |= CRC_SEED_A__A0_REG;
 380:Generated_Source\PSoC5/CRC.c **** 
 381:Generated_Source\PSoC5/CRC.c ****             #else                                           /* 32 bits CRC */
 382:Generated_Source\PSoC5/CRC.c ****                 seed = ((uint32) CRC_SEED_B__A1_REG) << 24u;
 383:Generated_Source\PSoC5/CRC.c ****                 seed |= ((uint32) CRC_SEED_A__A1_REG) << 16u;
 384:Generated_Source\PSoC5/CRC.c ****                 seed |= ((uint32) CRC_SEED_B__A0_REG) << 8u;
 385:Generated_Source\PSoC5/CRC.c ****                 seed |= CRC_SEED_A__A0_REG;
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLktsif.s 			page 10


 386:Generated_Source\PSoC5/CRC.c **** 
 387:Generated_Source\PSoC5/CRC.c ****             #endif  /* End (CRC_CRC_SIZE <= 8u) */
 388:Generated_Source\PSoC5/CRC.c ****             
 389:Generated_Source\PSoC5/CRC.c ****             #if((0u != (CRC_CRC_SIZE % 8u)) || (CRC_CRC_SIZE == 24u))
 390:Generated_Source\PSoC5/CRC.c ****                 seed &= CRC_MASK;
 391:Generated_Source\PSoC5/CRC.c ****             #endif /* ((0u != (CRC_CRC_SIZE % 8u)) || (CRC_CRC_SIZE == 24u)) */
 392:Generated_Source\PSoC5/CRC.c ****             
 393:Generated_Source\PSoC5/CRC.c ****             return (seed);
 394:Generated_Source\PSoC5/CRC.c **** 
 395:Generated_Source\PSoC5/CRC.c ****         #else
 396:Generated_Source\PSoC5/CRC.c ****             
 397:Generated_Source\PSoC5/CRC.c ****             #if((0u != (CRC_CRC_SIZE % 8u)) || (CRC_CRC_SIZE == 24u))
 398:Generated_Source\PSoC5/CRC.c ****                 return (CY_GET_REG8(CRC_SEED_PTR)  & CRC_MASK);
 129              		.loc 1 398 0
 130 0000 024B     		ldr	r3, .L12
 131 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 399:Generated_Source\PSoC5/CRC.c ****             #else
 400:Generated_Source\PSoC5/CRC.c ****                 return (CY_GET_REG8(CRC_SEED_PTR));
 401:Generated_Source\PSoC5/CRC.c ****             #endif /* ((0u != (CRC_CRC_SIZE % 8u)) || (CRC_CRC_SIZE == 24u)) */
 402:Generated_Source\PSoC5/CRC.c ****             
 403:Generated_Source\PSoC5/CRC.c **** 
 404:Generated_Source\PSoC5/CRC.c ****         #endif  /* End (CRC_TIME_MULTIPLEXING_ENABLE) */
 405:Generated_Source\PSoC5/CRC.c ****     }
 132              		.loc 1 405 0
 133 0004 00F00F00 		and	r0, r0, #15
 134 0008 7047     		bx	lr
 135              	.L13:
 136 000a 00BF     		.align	2
 137              	.L12:
 138 000c 02640040 		.word	1073767426
 139              		.cfi_endproc
 140              	.LFE5:
 141              		.size	CRC_ReadCRC, .-CRC_ReadCRC
 142              		.section	.text.CRC_WriteSeed,"ax",%progbits
 143              		.align	2
 144              		.global	CRC_WriteSeed
 145              		.thumb
 146              		.thumb_func
 147              		.type	CRC_WriteSeed, %function
 148              	CRC_WriteSeed:
 149              	.LFB6:
 406:Generated_Source\PSoC5/CRC.c **** 
 407:Generated_Source\PSoC5/CRC.c **** 
 408:Generated_Source\PSoC5/CRC.c ****     /*******************************************************************************
 409:Generated_Source\PSoC5/CRC.c ****     * Function Name: CRC_WriteSeed
 410:Generated_Source\PSoC5/CRC.c ****     ********************************************************************************
 411:Generated_Source\PSoC5/CRC.c ****     *
 412:Generated_Source\PSoC5/CRC.c ****     * Summary:
 413:Generated_Source\PSoC5/CRC.c ****     *  Writes seed value.
 414:Generated_Source\PSoC5/CRC.c ****     *
 415:Generated_Source\PSoC5/CRC.c ****     * Parameters:
 416:Generated_Source\PSoC5/CRC.c ****     *  seed:  Seed value.
 417:Generated_Source\PSoC5/CRC.c ****     *
 418:Generated_Source\PSoC5/CRC.c ****     * Return:
 419:Generated_Source\PSoC5/CRC.c ****     *  void
 420:Generated_Source\PSoC5/CRC.c ****     *
 421:Generated_Source\PSoC5/CRC.c ****     * Side Effects:
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLktsif.s 			page 11


 422:Generated_Source\PSoC5/CRC.c ****     *  The seed value is cut according to mask = 2^(Resolution) - 1.
 423:Generated_Source\PSoC5/CRC.c ****     *  For example if CRC Resolution is 14 bits the mask value is:
 424:Generated_Source\PSoC5/CRC.c ****     *  mask = 2^(14) - 1 = 0x3FFFu.
 425:Generated_Source\PSoC5/CRC.c ****     *  The seed value = 0xFFFFu is cut:
 426:Generated_Source\PSoC5/CRC.c ****     *  seed & mask = 0xFFFFu & 0x3FFFu = 0x3FFFu.
 427:Generated_Source\PSoC5/CRC.c ****     *
 428:Generated_Source\PSoC5/CRC.c ****     *******************************************************************************/
 429:Generated_Source\PSoC5/CRC.c ****     void CRC_WriteSeed(uint8 seed) 
 430:Generated_Source\PSoC5/CRC.c ****     {
 150              		.loc 1 430 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 155              	.LVL5:
 431:Generated_Source\PSoC5/CRC.c ****         /* Mask the Seed Upper half to cut unused bits in case, when CRC size is not byte-aligned o
 432:Generated_Source\PSoC5/CRC.c ****         #if((0u != (CRC_CRC_SIZE % 8u)) || (CRC_CRC_SIZE == 24u))
 433:Generated_Source\PSoC5/CRC.c ****             seed &= CRC_MASK;
 156              		.loc 1 433 0
 157 0000 00F00F00 		and	r0, r0, #15
 158              	.LVL6:
 434:Generated_Source\PSoC5/CRC.c ****         #endif /* ((0u != (CRC_CRC_SIZE % 8u)) || (CRC_CRC_SIZE == 24u)) */
 435:Generated_Source\PSoC5/CRC.c **** 
 436:Generated_Source\PSoC5/CRC.c ****         /* Writes Seed */
 437:Generated_Source\PSoC5/CRC.c ****         #if (CRC_TIME_MULTIPLEXING_ENABLE)
 438:Generated_Source\PSoC5/CRC.c **** 
 439:Generated_Source\PSoC5/CRC.c ****             #if (CRC_CRC_SIZE <= 16u)          /* 16 bits CRC */
 440:Generated_Source\PSoC5/CRC.c ****                 CRC_SEED_A__A1_REG = HI8(seed);
 441:Generated_Source\PSoC5/CRC.c ****                 CRC_SEED_A__A0_REG = LO8(seed);
 442:Generated_Source\PSoC5/CRC.c **** 
 443:Generated_Source\PSoC5/CRC.c ****             #elif (CRC_CRC_SIZE <= 24u)        /* 24 bits CRC */
 444:Generated_Source\PSoC5/CRC.c ****                 CRC_SEED_B__A1_REG = LO8(HI16(seed));
 445:Generated_Source\PSoC5/CRC.c ****                 CRC_SEED_B__A0_REG = HI8(seed);
 446:Generated_Source\PSoC5/CRC.c ****                 CRC_SEED_A__A0_REG = LO8(seed);
 447:Generated_Source\PSoC5/CRC.c **** 
 448:Generated_Source\PSoC5/CRC.c ****             #else                                           /* 32 bits CRC */
 449:Generated_Source\PSoC5/CRC.c ****                 CRC_SEED_B__A1_REG = HI8(HI16(seed));
 450:Generated_Source\PSoC5/CRC.c ****                 CRC_SEED_A__A1_REG = LO8(HI16(seed));
 451:Generated_Source\PSoC5/CRC.c ****                 CRC_SEED_B__A0_REG = HI8(seed);
 452:Generated_Source\PSoC5/CRC.c ****                 CRC_SEED_A__A0_REG = LO8(seed);
 453:Generated_Source\PSoC5/CRC.c ****             #endif  /* End (CRC_CRC_SIZE <= 32u) */
 454:Generated_Source\PSoC5/CRC.c **** 
 455:Generated_Source\PSoC5/CRC.c ****             /* Resets triggers */
 456:Generated_Source\PSoC5/CRC.c ****             CRC_EXECUTE_DFF_RESET;
 457:Generated_Source\PSoC5/CRC.c **** 
 458:Generated_Source\PSoC5/CRC.c ****         #else
 459:Generated_Source\PSoC5/CRC.c **** 
 460:Generated_Source\PSoC5/CRC.c ****             CY_SET_REG8(CRC_SEED_PTR, seed);
 159              		.loc 1 460 0
 160 0004 014B     		ldr	r3, .L15
 161 0006 1870     		strb	r0, [r3]
 162 0008 7047     		bx	lr
 163              	.L16:
 164 000a 00BF     		.align	2
 165              	.L15:
 166 000c 02640040 		.word	1073767426
 167              		.cfi_endproc
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLktsif.s 			page 12


 168              	.LFE6:
 169              		.size	CRC_WriteSeed, .-CRC_WriteSeed
 170              		.section	.text.CRC_ReadPolynomial,"ax",%progbits
 171              		.align	2
 172              		.global	CRC_ReadPolynomial
 173              		.thumb
 174              		.thumb_func
 175              		.type	CRC_ReadPolynomial, %function
 176              	CRC_ReadPolynomial:
 177              	.LFB7:
 461:Generated_Source\PSoC5/CRC.c **** 
 462:Generated_Source\PSoC5/CRC.c ****         #endif  /* End (CRC_TIME_MULTIPLEXING_ENABLE) */
 463:Generated_Source\PSoC5/CRC.c ****     }
 464:Generated_Source\PSoC5/CRC.c **** 
 465:Generated_Source\PSoC5/CRC.c **** 
 466:Generated_Source\PSoC5/CRC.c ****     /*******************************************************************************
 467:Generated_Source\PSoC5/CRC.c ****     * Function Name: CRC_ReadPolynomial
 468:Generated_Source\PSoC5/CRC.c ****     ********************************************************************************
 469:Generated_Source\PSoC5/CRC.c ****     *
 470:Generated_Source\PSoC5/CRC.c ****     * Summary:
 471:Generated_Source\PSoC5/CRC.c ****     *  Reads CRC polynomial value.
 472:Generated_Source\PSoC5/CRC.c ****     *
 473:Generated_Source\PSoC5/CRC.c ****     * Parameters:
 474:Generated_Source\PSoC5/CRC.c ****     *  void
 475:Generated_Source\PSoC5/CRC.c ****     *
 476:Generated_Source\PSoC5/CRC.c ****     * Return:
 477:Generated_Source\PSoC5/CRC.c ****     *  Returns CRC polynomial value.
 478:Generated_Source\PSoC5/CRC.c ****     *
 479:Generated_Source\PSoC5/CRC.c ****     *******************************************************************************/
 480:Generated_Source\PSoC5/CRC.c ****     uint8 CRC_ReadPolynomial(void)
 481:Generated_Source\PSoC5/CRC.c ****                                                
 482:Generated_Source\PSoC5/CRC.c ****     {
 178              		.loc 1 482 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182              		@ link register save eliminated.
 483:Generated_Source\PSoC5/CRC.c ****         /* Reads polynomial */
 484:Generated_Source\PSoC5/CRC.c ****         #if (CRC_TIME_MULTIPLEXING_ENABLE)
 485:Generated_Source\PSoC5/CRC.c **** 
 486:Generated_Source\PSoC5/CRC.c ****             uint8 polynomial;
 487:Generated_Source\PSoC5/CRC.c **** 
 488:Generated_Source\PSoC5/CRC.c ****             #if (CRC_CRC_SIZE <= 16u)          /* 16 bits CRC */
 489:Generated_Source\PSoC5/CRC.c ****                 polynomial = ((uint16) CRC_POLYNOM_A__D1_REG) << 8u;
 490:Generated_Source\PSoC5/CRC.c ****                 polynomial |= (CRC_POLYNOM_A__D0_REG);
 491:Generated_Source\PSoC5/CRC.c **** 
 492:Generated_Source\PSoC5/CRC.c ****             #elif (CRC_CRC_SIZE <= 24u)        /* 24 bits CRC */
 493:Generated_Source\PSoC5/CRC.c ****                 polynomial = ((uint32) CRC_POLYNOM_B__D1_REG) << 16u;
 494:Generated_Source\PSoC5/CRC.c ****                 polynomial |= ((uint32) CRC_POLYNOM_B__D0_REG) << 8u;
 495:Generated_Source\PSoC5/CRC.c ****                 polynomial |= CRC_POLYNOM_A__D0_REG;
 496:Generated_Source\PSoC5/CRC.c **** 
 497:Generated_Source\PSoC5/CRC.c ****             #else                                           /* 32 bits CRC */
 498:Generated_Source\PSoC5/CRC.c ****                 polynomial = ((uint32) CRC_POLYNOM_B__D1_REG) << 24u;
 499:Generated_Source\PSoC5/CRC.c ****                 polynomial |= ((uint32) CRC_POLYNOM_A__D1_REG) << 16u;
 500:Generated_Source\PSoC5/CRC.c ****                 polynomial |= ((uint32) CRC_POLYNOM_B__D0_REG) << 8u;
 501:Generated_Source\PSoC5/CRC.c ****                 polynomial |= CRC_POLYNOM_A__D0_REG;
 502:Generated_Source\PSoC5/CRC.c **** 
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLktsif.s 			page 13


 503:Generated_Source\PSoC5/CRC.c ****             #endif  /* End (CRC_CRC_SIZE <= 32u) */
 504:Generated_Source\PSoC5/CRC.c **** 
 505:Generated_Source\PSoC5/CRC.c ****             return polynomial;
 506:Generated_Source\PSoC5/CRC.c **** 
 507:Generated_Source\PSoC5/CRC.c ****         #else
 508:Generated_Source\PSoC5/CRC.c **** 
 509:Generated_Source\PSoC5/CRC.c ****             return CY_GET_REG8(CRC_POLYNOM_PTR);
 183              		.loc 1 509 0
 184 0000 014B     		ldr	r3, .L18
 185 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 510:Generated_Source\PSoC5/CRC.c **** 
 511:Generated_Source\PSoC5/CRC.c ****         #endif  /* End (CRC_TIME_MULTIPLEXING_ENABLE) */
 512:Generated_Source\PSoC5/CRC.c ****     }
 186              		.loc 1 512 0
 187 0004 7047     		bx	lr
 188              	.L19:
 189 0006 00BF     		.align	2
 190              	.L18:
 191 0008 22640040 		.word	1073767458
 192              		.cfi_endproc
 193              	.LFE7:
 194              		.size	CRC_ReadPolynomial, .-CRC_ReadPolynomial
 195              		.section	.text.CRC_WritePolynomial,"ax",%progbits
 196              		.align	2
 197              		.global	CRC_WritePolynomial
 198              		.thumb
 199              		.thumb_func
 200              		.type	CRC_WritePolynomial, %function
 201              	CRC_WritePolynomial:
 202              	.LFB8:
 513:Generated_Source\PSoC5/CRC.c **** 
 514:Generated_Source\PSoC5/CRC.c **** 
 515:Generated_Source\PSoC5/CRC.c ****     /*******************************************************************************
 516:Generated_Source\PSoC5/CRC.c ****     * Function Name: CRC_WritePolynomial
 517:Generated_Source\PSoC5/CRC.c ****     ********************************************************************************
 518:Generated_Source\PSoC5/CRC.c ****     *
 519:Generated_Source\PSoC5/CRC.c ****     * Summary:
 520:Generated_Source\PSoC5/CRC.c ****     *  Writes CRC polynomial value.
 521:Generated_Source\PSoC5/CRC.c ****     *
 522:Generated_Source\PSoC5/CRC.c ****     * Parameters:
 523:Generated_Source\PSoC5/CRC.c ****     *  polynomial:  CRC polynomial.
 524:Generated_Source\PSoC5/CRC.c ****     *
 525:Generated_Source\PSoC5/CRC.c ****     * Return:
 526:Generated_Source\PSoC5/CRC.c ****     *  void
 527:Generated_Source\PSoC5/CRC.c ****     *
 528:Generated_Source\PSoC5/CRC.c ****     * Side Effects:
 529:Generated_Source\PSoC5/CRC.c ****     *  The polynomial value is cut according to mask = 2^(Resolution) - 1.
 530:Generated_Source\PSoC5/CRC.c ****     *  For example if CRC Resolution is 14 bits the mask value is:
 531:Generated_Source\PSoC5/CRC.c ****     *  mask = 2^(14) - 1 = 0x3FFFu.
 532:Generated_Source\PSoC5/CRC.c ****     *  The polynomial value = 0xFFFFu is cut:
 533:Generated_Source\PSoC5/CRC.c ****     *  polynomial & mask = 0xFFFFu & 0x3FFFu = 0x3FFFu.
 534:Generated_Source\PSoC5/CRC.c ****     *
 535:Generated_Source\PSoC5/CRC.c ****     *******************************************************************************/
 536:Generated_Source\PSoC5/CRC.c ****     void CRC_WritePolynomial(uint8 polynomial)
 537:Generated_Source\PSoC5/CRC.c ****                                           
 538:Generated_Source\PSoC5/CRC.c ****     {
 203              		.loc 1 538 0
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLktsif.s 			page 14


 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207              		@ link register save eliminated.
 208              	.LVL7:
 539:Generated_Source\PSoC5/CRC.c ****         /* Mask polynomial to cut unused bits in case, when CRC size is not byte-aligned or equal 2
 540:Generated_Source\PSoC5/CRC.c ****         #if((0u != (CRC_CRC_SIZE % 8u)) || (CRC_CRC_SIZE == 24u))
 541:Generated_Source\PSoC5/CRC.c ****             polynomial &= CRC_MASK;
 209              		.loc 1 541 0
 210 0000 00F00F00 		and	r0, r0, #15
 211              	.LVL8:
 542:Generated_Source\PSoC5/CRC.c ****         #endif /* ((0u != (CRC_CRC_SIZE % 8u)) || (CRC_CRC_SIZE == 24u)) */
 543:Generated_Source\PSoC5/CRC.c **** 
 544:Generated_Source\PSoC5/CRC.c ****         /* Write polynomial */
 545:Generated_Source\PSoC5/CRC.c ****         #if (CRC_TIME_MULTIPLEXING_ENABLE)
 546:Generated_Source\PSoC5/CRC.c **** 
 547:Generated_Source\PSoC5/CRC.c ****             #if (CRC_CRC_SIZE <= 16u)          /* 16 bits CRC */
 548:Generated_Source\PSoC5/CRC.c **** 
 549:Generated_Source\PSoC5/CRC.c ****                 CRC_POLYNOM_A__D1_REG = HI8(polynomial);
 550:Generated_Source\PSoC5/CRC.c ****                 CRC_POLYNOM_A__D0_REG = LO8(polynomial);
 551:Generated_Source\PSoC5/CRC.c **** 
 552:Generated_Source\PSoC5/CRC.c ****             #elif (CRC_CRC_SIZE <= 24u)        /* 24 bits CRC */
 553:Generated_Source\PSoC5/CRC.c ****                 CRC_POLYNOM_B__D1_REG = LO8(HI16(polynomial));
 554:Generated_Source\PSoC5/CRC.c ****                 CRC_POLYNOM_B__D0_REG = HI8(polynomial);
 555:Generated_Source\PSoC5/CRC.c ****                 CRC_POLYNOM_A__D0_REG = LO8(polynomial);
 556:Generated_Source\PSoC5/CRC.c **** 
 557:Generated_Source\PSoC5/CRC.c ****             #else                                           /* 32 bits CRC */
 558:Generated_Source\PSoC5/CRC.c ****                 CRC_POLYNOM_B__D1_REG = HI8(HI16(polynomial));
 559:Generated_Source\PSoC5/CRC.c ****                 CRC_POLYNOM_A__D1_REG = LO8(HI16(polynomial));
 560:Generated_Source\PSoC5/CRC.c ****                 CRC_POLYNOM_B__D0_REG = HI8(polynomial);
 561:Generated_Source\PSoC5/CRC.c ****                 CRC_POLYNOM_A__D0_REG = LO8(polynomial);
 562:Generated_Source\PSoC5/CRC.c **** 
 563:Generated_Source\PSoC5/CRC.c ****             #endif  /* End (CRC_CRC_SIZE <= 32u) */
 564:Generated_Source\PSoC5/CRC.c **** 
 565:Generated_Source\PSoC5/CRC.c ****             /* Resets triggers */
 566:Generated_Source\PSoC5/CRC.c ****             CRC_EXECUTE_DFF_RESET;
 567:Generated_Source\PSoC5/CRC.c **** 
 568:Generated_Source\PSoC5/CRC.c ****         #else
 569:Generated_Source\PSoC5/CRC.c **** 
 570:Generated_Source\PSoC5/CRC.c ****             CY_SET_REG8(CRC_POLYNOM_PTR, polynomial);
 212              		.loc 1 570 0
 213 0004 014B     		ldr	r3, .L21
 214 0006 1870     		strb	r0, [r3]
 215 0008 7047     		bx	lr
 216              	.L22:
 217 000a 00BF     		.align	2
 218              	.L21:
 219 000c 22640040 		.word	1073767458
 220              		.cfi_endproc
 221              	.LFE8:
 222              		.size	CRC_WritePolynomial, .-CRC_WritePolynomial
 223              		.section	.text.CRC_Init,"ax",%progbits
 224              		.align	2
 225              		.global	CRC_Init
 226              		.thumb
 227              		.thumb_func
 228              		.type	CRC_Init, %function
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLktsif.s 			page 15


 229              	CRC_Init:
 230              	.LFB0:
  57:Generated_Source\PSoC5/CRC.c ****     /* Writes seed value and ponynom value provided for customizer */
 231              		.loc 1 57 0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235 0000 08B5     		push	{r3, lr}
 236              		.cfi_def_cfa_offset 8
 237              		.cfi_offset 3, -8
 238              		.cfi_offset 14, -4
  60:Generated_Source\PSoC5/CRC.c ****         CRC_WriteSeed(CRC_DEFAULT_SEED);
 239              		.loc 1 60 0
 240 0002 0920     		movs	r0, #9
 241 0004 FFF7FEFF 		bl	CRC_WritePolynomial
 242              	.LVL9:
  61:Generated_Source\PSoC5/CRC.c ****         CRC_ResetSeedInit(CRC_DEFAULT_SEED);
 243              		.loc 1 61 0
 244 0008 0020     		movs	r0, #0
 245 000a FFF7FEFF 		bl	CRC_WriteSeed
 246              	.LVL10:
  62:Generated_Source\PSoC5/CRC.c **** 
 247              		.loc 1 62 0
 248 000e 0020     		movs	r0, #0
 249 0010 FFF7FEFF 		bl	CRC_ResetSeedInit
 250              	.LVL11:
 251 0014 08BD     		pop	{r3, pc}
 252              		.cfi_endproc
 253              	.LFE0:
 254              		.size	CRC_Init, .-CRC_Init
 255 0016 00BF     		.section	.text.CRC_Start,"ax",%progbits
 256              		.align	2
 257              		.global	CRC_Start
 258              		.thumb
 259              		.thumb_func
 260              		.type	CRC_Start, %function
 261              	CRC_Start:
 262              	.LFB2:
 119:Generated_Source\PSoC5/CRC.c ****     /* Writes seed value and ponynom value provided from customizer */
 263              		.loc 1 119 0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267 0000 08B5     		push	{r3, lr}
 268              		.cfi_def_cfa_offset 8
 269              		.cfi_offset 3, -8
 270              		.cfi_offset 14, -4
 121:Generated_Source\PSoC5/CRC.c ****     {
 271              		.loc 1 121 0
 272 0002 054B     		ldr	r3, .L28
 273 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 274 0006 23B9     		cbnz	r3, .L26
 123:Generated_Source\PSoC5/CRC.c ****         CRC_initVar = 1u;
 275              		.loc 1 123 0
 276 0008 FFF7FEFF 		bl	CRC_Init
 277              	.LVL12:
 124:Generated_Source\PSoC5/CRC.c ****     }
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLktsif.s 			page 16


 278              		.loc 1 124 0
 279 000c 0122     		movs	r2, #1
 280 000e 024B     		ldr	r3, .L28
 281 0010 1A70     		strb	r2, [r3]
 282              	.L26:
 127:Generated_Source\PSoC5/CRC.c **** }
 283              		.loc 1 127 0
 284 0012 FFF7FEFF 		bl	CRC_Enable
 285              	.LVL13:
 286 0016 08BD     		pop	{r3, pc}
 287              	.L29:
 288              		.align	2
 289              	.L28:
 290 0018 00000000 		.word	.LANCHOR0
 291              		.cfi_endproc
 292              	.LFE2:
 293              		.size	CRC_Start, .-CRC_Start
 294              		.global	CRC_backup
 295              		.global	CRC_initVar
 296              		.bss
 297              		.align	2
 298              		.set	.LANCHOR0,. + 0
 299              		.type	CRC_initVar, %object
 300              		.size	CRC_initVar, 1
 301              	CRC_initVar:
 302 0000 00       		.space	1
 303 0001 000000   		.space	3
 304              		.type	CRC_backup, %object
 305              		.size	CRC_backup, 1
 306              	CRC_backup:
 307 0004 00       		.space	1
 308              		.text
 309              	.Letext0:
 310              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 311              		.file 3 "Generated_Source\\PSoC5\\CRC.h"
 312              		.file 4 "Generated_Source\\PSoC5\\CyLib.h"
 313              		.section	.debug_info,"",%progbits
 314              	.Ldebug_info0:
 315 0000 55020000 		.4byte	0x255
 316 0004 0400     		.2byte	0x4
 317 0006 00000000 		.4byte	.Ldebug_abbrev0
 318 000a 04       		.byte	0x4
 319 000b 01       		.uleb128 0x1
 320 000c A0000000 		.4byte	.LASF32
 321 0010 0C       		.byte	0xc
 322 0011 3E020000 		.4byte	.LASF33
 323 0015 78010000 		.4byte	.LASF34
 324 0019 00000000 		.4byte	.Ldebug_ranges0+0
 325 001d 00000000 		.4byte	0
 326 0021 00000000 		.4byte	.Ldebug_line0
 327 0025 02       		.uleb128 0x2
 328 0026 01       		.byte	0x1
 329 0027 06       		.byte	0x6
 330 0028 94020000 		.4byte	.LASF0
 331 002c 02       		.uleb128 0x2
 332 002d 01       		.byte	0x1
 333 002e 08       		.byte	0x8
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLktsif.s 			page 17


 334 002f 92000000 		.4byte	.LASF1
 335 0033 02       		.uleb128 0x2
 336 0034 02       		.byte	0x2
 337 0035 05       		.byte	0x5
 338 0036 2F020000 		.4byte	.LASF2
 339 003a 02       		.uleb128 0x2
 340 003b 02       		.byte	0x2
 341 003c 07       		.byte	0x7
 342 003d 2B000000 		.4byte	.LASF3
 343 0041 02       		.uleb128 0x2
 344 0042 04       		.byte	0x4
 345 0043 05       		.byte	0x5
 346 0044 73020000 		.4byte	.LASF4
 347 0048 02       		.uleb128 0x2
 348 0049 04       		.byte	0x4
 349 004a 07       		.byte	0x7
 350 004b 3F010000 		.4byte	.LASF5
 351 004f 02       		.uleb128 0x2
 352 0050 08       		.byte	0x8
 353 0051 05       		.byte	0x5
 354 0052 13020000 		.4byte	.LASF6
 355 0056 02       		.uleb128 0x2
 356 0057 08       		.byte	0x8
 357 0058 07       		.byte	0x7
 358 0059 7B000000 		.4byte	.LASF7
 359 005d 03       		.uleb128 0x3
 360 005e 04       		.byte	0x4
 361 005f 05       		.byte	0x5
 362 0060 696E7400 		.ascii	"int\000"
 363 0064 02       		.uleb128 0x2
 364 0065 04       		.byte	0x4
 365 0066 07       		.byte	0x7
 366 0067 DC010000 		.4byte	.LASF8
 367 006b 04       		.uleb128 0x4
 368 006c 51010000 		.4byte	.LASF12
 369 0070 02       		.byte	0x2
 370 0071 9201     		.2byte	0x192
 371 0073 2C000000 		.4byte	0x2c
 372 0077 02       		.uleb128 0x2
 373 0078 04       		.byte	0x4
 374 0079 04       		.byte	0x4
 375 007a 63000000 		.4byte	.LASF9
 376 007e 02       		.uleb128 0x2
 377 007f 08       		.byte	0x8
 378 0080 04       		.byte	0x4
 379 0081 71010000 		.4byte	.LASF10
 380 0085 02       		.uleb128 0x2
 381 0086 01       		.byte	0x1
 382 0087 08       		.byte	0x8
 383 0088 21020000 		.4byte	.LASF11
 384 008c 04       		.uleb128 0x4
 385 008d 2E010000 		.4byte	.LASF13
 386 0091 02       		.byte	0x2
 387 0092 3C02     		.2byte	0x23c
 388 0094 98000000 		.4byte	0x98
 389 0098 05       		.uleb128 0x5
 390 0099 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLktsif.s 			page 18


 391 009d 02       		.uleb128 0x2
 392 009e 08       		.byte	0x8
 393 009f 04       		.byte	0x4
 394 00a0 88020000 		.4byte	.LASF14
 395 00a4 02       		.uleb128 0x2
 396 00a5 04       		.byte	0x4
 397 00a6 07       		.byte	0x7
 398 00a7 0A020000 		.4byte	.LASF15
 399 00ab 06       		.uleb128 0x6
 400 00ac 01       		.byte	0x1
 401 00ad 03       		.byte	0x3
 402 00ae 2E       		.byte	0x2e
 403 00af C0000000 		.4byte	0xc0
 404 00b3 07       		.uleb128 0x7
 405 00b4 7C020000 		.4byte	.LASF35
 406 00b8 03       		.byte	0x3
 407 00b9 30       		.byte	0x30
 408 00ba 6B000000 		.4byte	0x6b
 409 00be 00       		.byte	0
 410 00bf 00       		.byte	0
 411 00c0 08       		.uleb128 0x8
 412 00c1 69000000 		.4byte	.LASF16
 413 00c5 03       		.byte	0x3
 414 00c6 40       		.byte	0x40
 415 00c7 AB000000 		.4byte	0xab
 416 00cb 09       		.uleb128 0x9
 417 00cc FF010000 		.4byte	.LASF17
 418 00d0 01       		.byte	0x1
 419 00d1 5A       		.byte	0x5a
 420 00d2 00000000 		.4byte	.LFB1
 421 00d6 10000000 		.4byte	.LFE1-.LFB1
 422 00da 01       		.uleb128 0x1
 423 00db 9C       		.byte	0x9c
 424 00dc 09       		.uleb128 0x9
 425 00dd 26020000 		.4byte	.LASF18
 426 00e1 01       		.byte	0x1
 427 00e2 94       		.byte	0x94
 428 00e3 00000000 		.4byte	.LFB3
 429 00e7 10000000 		.4byte	.LFE3-.LFB3
 430 00eb 01       		.uleb128 0x1
 431 00ec 9C       		.byte	0x9c
 432 00ed 0A       		.uleb128 0xa
 433 00ee 51000000 		.4byte	.LASF19
 434 00f2 01       		.byte	0x1
 435 00f3 A9       		.byte	0xa9
 436 00f4 00000000 		.4byte	.LFB4
 437 00f8 28000000 		.4byte	.LFE4-.LFB4
 438 00fc 01       		.uleb128 0x1
 439 00fd 9C       		.byte	0x9c
 440 00fe 33010000 		.4byte	0x133
 441 0102 0B       		.uleb128 0xb
 442 0103 39020000 		.4byte	.LASF21
 443 0107 01       		.byte	0x1
 444 0108 A9       		.byte	0xa9
 445 0109 6B000000 		.4byte	0x6b
 446 010d 00000000 		.4byte	.LLST0
 447 0111 0C       		.uleb128 0xc
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLktsif.s 			page 19


 448 0112 60010000 		.4byte	.LASF36
 449 0116 01       		.byte	0x1
 450 0117 AC       		.byte	0xac
 451 0118 6B000000 		.4byte	0x6b
 452 011c 2A000000 		.4byte	.LLST1
 453 0120 0D       		.uleb128 0xd
 454 0121 0A000000 		.4byte	.LVL2
 455 0125 42020000 		.4byte	0x242
 456 0129 0D       		.uleb128 0xd
 457 012a 18000000 		.4byte	.LVL3
 458 012e 4D020000 		.4byte	0x24d
 459 0132 00       		.byte	0
 460 0133 0E       		.uleb128 0xe
 461 0134 33010000 		.4byte	.LASF22
 462 0138 01       		.byte	0x1
 463 0139 6D01     		.2byte	0x16d
 464 013b 6B000000 		.4byte	0x6b
 465 013f 00000000 		.4byte	.LFB5
 466 0143 10000000 		.4byte	.LFE5-.LFB5
 467 0147 01       		.uleb128 0x1
 468 0148 9C       		.byte	0x9c
 469 0149 0F       		.uleb128 0xf
 470 014a 5B020000 		.4byte	.LASF20
 471 014e 01       		.byte	0x1
 472 014f AD01     		.2byte	0x1ad
 473 0151 00000000 		.4byte	.LFB6
 474 0155 10000000 		.4byte	.LFE6-.LFB6
 475 0159 01       		.uleb128 0x1
 476 015a 9C       		.byte	0x9c
 477 015b 70010000 		.4byte	0x170
 478 015f 10       		.uleb128 0x10
 479 0160 39020000 		.4byte	.LASF21
 480 0164 01       		.byte	0x1
 481 0165 AD01     		.2byte	0x1ad
 482 0167 6B000000 		.4byte	0x6b
 483 016b 3D000000 		.4byte	.LLST2
 484 016f 00       		.byte	0
 485 0170 0E       		.uleb128 0xe
 486 0171 3E000000 		.4byte	.LASF23
 487 0175 01       		.byte	0x1
 488 0176 E001     		.2byte	0x1e0
 489 0178 6B000000 		.4byte	0x6b
 490 017c 00000000 		.4byte	.LFB7
 491 0180 0C000000 		.4byte	.LFE7-.LFB7
 492 0184 01       		.uleb128 0x1
 493 0185 9C       		.byte	0x9c
 494 0186 0F       		.uleb128 0xf
 495 0187 17000000 		.4byte	.LASF24
 496 018b 01       		.byte	0x1
 497 018c 1802     		.2byte	0x218
 498 018e 00000000 		.4byte	.LFB8
 499 0192 10000000 		.4byte	.LFE8-.LFB8
 500 0196 01       		.uleb128 0x1
 501 0197 9C       		.byte	0x9c
 502 0198 AD010000 		.4byte	0x1ad
 503 019c 10       		.uleb128 0x10
 504 019d BA010000 		.4byte	.LASF25
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLktsif.s 			page 20


 505 01a1 01       		.byte	0x1
 506 01a2 1802     		.2byte	0x218
 507 01a4 6B000000 		.4byte	0x6b
 508 01a8 5B000000 		.4byte	.LLST3
 509 01ac 00       		.byte	0
 510 01ad 0A       		.uleb128 0xa
 511 01ae 57010000 		.4byte	.LASF26
 512 01b2 01       		.byte	0x1
 513 01b3 38       		.byte	0x38
 514 01b4 00000000 		.4byte	.LFB0
 515 01b8 16000000 		.4byte	.LFE0-.LFB0
 516 01bc 01       		.uleb128 0x1
 517 01bd 9C       		.byte	0x9c
 518 01be F8010000 		.4byte	0x1f8
 519 01c2 11       		.uleb128 0x11
 520 01c3 08000000 		.4byte	.LVL9
 521 01c7 86010000 		.4byte	0x186
 522 01cb D5010000 		.4byte	0x1d5
 523 01cf 12       		.uleb128 0x12
 524 01d0 01       		.uleb128 0x1
 525 01d1 50       		.byte	0x50
 526 01d2 01       		.uleb128 0x1
 527 01d3 39       		.byte	0x39
 528 01d4 00       		.byte	0
 529 01d5 11       		.uleb128 0x11
 530 01d6 0E000000 		.4byte	.LVL10
 531 01da 49010000 		.4byte	0x149
 532 01de E8010000 		.4byte	0x1e8
 533 01e2 12       		.uleb128 0x12
 534 01e3 01       		.uleb128 0x1
 535 01e4 50       		.byte	0x50
 536 01e5 01       		.uleb128 0x1
 537 01e6 30       		.byte	0x30
 538 01e7 00       		.byte	0
 539 01e8 13       		.uleb128 0x13
 540 01e9 14000000 		.4byte	.LVL11
 541 01ed ED000000 		.4byte	0xed
 542 01f1 12       		.uleb128 0x12
 543 01f2 01       		.uleb128 0x1
 544 01f3 50       		.byte	0x50
 545 01f4 01       		.uleb128 0x1
 546 01f5 30       		.byte	0x30
 547 01f6 00       		.byte	0
 548 01f7 00       		.byte	0
 549 01f8 0A       		.uleb128 0xa
 550 01f9 69020000 		.4byte	.LASF27
 551 01fd 01       		.byte	0x1
 552 01fe 76       		.byte	0x76
 553 01ff 00000000 		.4byte	.LFB2
 554 0203 1C000000 		.4byte	.LFE2-.LFB2
 555 0207 01       		.uleb128 0x1
 556 0208 9C       		.byte	0x9c
 557 0209 20020000 		.4byte	0x220
 558 020d 0D       		.uleb128 0xd
 559 020e 0C000000 		.4byte	.LVL12
 560 0212 AD010000 		.4byte	0x1ad
 561 0216 0D       		.uleb128 0xd
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLktsif.s 			page 21


 562 0217 16000000 		.4byte	.LVL13
 563 021b CB000000 		.4byte	0xcb
 564 021f 00       		.byte	0
 565 0220 14       		.uleb128 0x14
 566 0221 0B000000 		.4byte	.LASF28
 567 0225 01       		.byte	0x1
 568 0226 14       		.byte	0x14
 569 0227 6B000000 		.4byte	0x6b
 570 022b 05       		.uleb128 0x5
 571 022c 03       		.byte	0x3
 572 022d 00000000 		.4byte	CRC_initVar
 573 0231 14       		.uleb128 0x14
 574 0232 00000000 		.4byte	.LASF29
 575 0236 01       		.byte	0x1
 576 0237 16       		.byte	0x16
 577 0238 C0000000 		.4byte	0xc0
 578 023c 05       		.uleb128 0x5
 579 023d 03       		.byte	0x3
 580 023e 00000000 		.4byte	CRC_backup
 581 0242 15       		.uleb128 0x15
 582 0243 C5010000 		.4byte	.LASF30
 583 0247 C5010000 		.4byte	.LASF30
 584 024b 04       		.byte	0x4
 585 024c 7D       		.byte	0x7d
 586 024d 15       		.uleb128 0x15
 587 024e E9010000 		.4byte	.LASF31
 588 0252 E9010000 		.4byte	.LASF31
 589 0256 04       		.byte	0x4
 590 0257 7E       		.byte	0x7e
 591 0258 00       		.byte	0
 592              		.section	.debug_abbrev,"",%progbits
 593              	.Ldebug_abbrev0:
 594 0000 01       		.uleb128 0x1
 595 0001 11       		.uleb128 0x11
 596 0002 01       		.byte	0x1
 597 0003 25       		.uleb128 0x25
 598 0004 0E       		.uleb128 0xe
 599 0005 13       		.uleb128 0x13
 600 0006 0B       		.uleb128 0xb
 601 0007 03       		.uleb128 0x3
 602 0008 0E       		.uleb128 0xe
 603 0009 1B       		.uleb128 0x1b
 604 000a 0E       		.uleb128 0xe
 605 000b 55       		.uleb128 0x55
 606 000c 17       		.uleb128 0x17
 607 000d 11       		.uleb128 0x11
 608 000e 01       		.uleb128 0x1
 609 000f 10       		.uleb128 0x10
 610 0010 17       		.uleb128 0x17
 611 0011 00       		.byte	0
 612 0012 00       		.byte	0
 613 0013 02       		.uleb128 0x2
 614 0014 24       		.uleb128 0x24
 615 0015 00       		.byte	0
 616 0016 0B       		.uleb128 0xb
 617 0017 0B       		.uleb128 0xb
 618 0018 3E       		.uleb128 0x3e
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLktsif.s 			page 22


 619 0019 0B       		.uleb128 0xb
 620 001a 03       		.uleb128 0x3
 621 001b 0E       		.uleb128 0xe
 622 001c 00       		.byte	0
 623 001d 00       		.byte	0
 624 001e 03       		.uleb128 0x3
 625 001f 24       		.uleb128 0x24
 626 0020 00       		.byte	0
 627 0021 0B       		.uleb128 0xb
 628 0022 0B       		.uleb128 0xb
 629 0023 3E       		.uleb128 0x3e
 630 0024 0B       		.uleb128 0xb
 631 0025 03       		.uleb128 0x3
 632 0026 08       		.uleb128 0x8
 633 0027 00       		.byte	0
 634 0028 00       		.byte	0
 635 0029 04       		.uleb128 0x4
 636 002a 16       		.uleb128 0x16
 637 002b 00       		.byte	0
 638 002c 03       		.uleb128 0x3
 639 002d 0E       		.uleb128 0xe
 640 002e 3A       		.uleb128 0x3a
 641 002f 0B       		.uleb128 0xb
 642 0030 3B       		.uleb128 0x3b
 643 0031 05       		.uleb128 0x5
 644 0032 49       		.uleb128 0x49
 645 0033 13       		.uleb128 0x13
 646 0034 00       		.byte	0
 647 0035 00       		.byte	0
 648 0036 05       		.uleb128 0x5
 649 0037 35       		.uleb128 0x35
 650 0038 00       		.byte	0
 651 0039 49       		.uleb128 0x49
 652 003a 13       		.uleb128 0x13
 653 003b 00       		.byte	0
 654 003c 00       		.byte	0
 655 003d 06       		.uleb128 0x6
 656 003e 13       		.uleb128 0x13
 657 003f 01       		.byte	0x1
 658 0040 0B       		.uleb128 0xb
 659 0041 0B       		.uleb128 0xb
 660 0042 3A       		.uleb128 0x3a
 661 0043 0B       		.uleb128 0xb
 662 0044 3B       		.uleb128 0x3b
 663 0045 0B       		.uleb128 0xb
 664 0046 01       		.uleb128 0x1
 665 0047 13       		.uleb128 0x13
 666 0048 00       		.byte	0
 667 0049 00       		.byte	0
 668 004a 07       		.uleb128 0x7
 669 004b 0D       		.uleb128 0xd
 670 004c 00       		.byte	0
 671 004d 03       		.uleb128 0x3
 672 004e 0E       		.uleb128 0xe
 673 004f 3A       		.uleb128 0x3a
 674 0050 0B       		.uleb128 0xb
 675 0051 3B       		.uleb128 0x3b
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLktsif.s 			page 23


 676 0052 0B       		.uleb128 0xb
 677 0053 49       		.uleb128 0x49
 678 0054 13       		.uleb128 0x13
 679 0055 38       		.uleb128 0x38
 680 0056 0B       		.uleb128 0xb
 681 0057 00       		.byte	0
 682 0058 00       		.byte	0
 683 0059 08       		.uleb128 0x8
 684 005a 16       		.uleb128 0x16
 685 005b 00       		.byte	0
 686 005c 03       		.uleb128 0x3
 687 005d 0E       		.uleb128 0xe
 688 005e 3A       		.uleb128 0x3a
 689 005f 0B       		.uleb128 0xb
 690 0060 3B       		.uleb128 0x3b
 691 0061 0B       		.uleb128 0xb
 692 0062 49       		.uleb128 0x49
 693 0063 13       		.uleb128 0x13
 694 0064 00       		.byte	0
 695 0065 00       		.byte	0
 696 0066 09       		.uleb128 0x9
 697 0067 2E       		.uleb128 0x2e
 698 0068 00       		.byte	0
 699 0069 3F       		.uleb128 0x3f
 700 006a 19       		.uleb128 0x19
 701 006b 03       		.uleb128 0x3
 702 006c 0E       		.uleb128 0xe
 703 006d 3A       		.uleb128 0x3a
 704 006e 0B       		.uleb128 0xb
 705 006f 3B       		.uleb128 0x3b
 706 0070 0B       		.uleb128 0xb
 707 0071 27       		.uleb128 0x27
 708 0072 19       		.uleb128 0x19
 709 0073 11       		.uleb128 0x11
 710 0074 01       		.uleb128 0x1
 711 0075 12       		.uleb128 0x12
 712 0076 06       		.uleb128 0x6
 713 0077 40       		.uleb128 0x40
 714 0078 18       		.uleb128 0x18
 715 0079 9742     		.uleb128 0x2117
 716 007b 19       		.uleb128 0x19
 717 007c 00       		.byte	0
 718 007d 00       		.byte	0
 719 007e 0A       		.uleb128 0xa
 720 007f 2E       		.uleb128 0x2e
 721 0080 01       		.byte	0x1
 722 0081 3F       		.uleb128 0x3f
 723 0082 19       		.uleb128 0x19
 724 0083 03       		.uleb128 0x3
 725 0084 0E       		.uleb128 0xe
 726 0085 3A       		.uleb128 0x3a
 727 0086 0B       		.uleb128 0xb
 728 0087 3B       		.uleb128 0x3b
 729 0088 0B       		.uleb128 0xb
 730 0089 27       		.uleb128 0x27
 731 008a 19       		.uleb128 0x19
 732 008b 11       		.uleb128 0x11
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLktsif.s 			page 24


 733 008c 01       		.uleb128 0x1
 734 008d 12       		.uleb128 0x12
 735 008e 06       		.uleb128 0x6
 736 008f 40       		.uleb128 0x40
 737 0090 18       		.uleb128 0x18
 738 0091 9742     		.uleb128 0x2117
 739 0093 19       		.uleb128 0x19
 740 0094 01       		.uleb128 0x1
 741 0095 13       		.uleb128 0x13
 742 0096 00       		.byte	0
 743 0097 00       		.byte	0
 744 0098 0B       		.uleb128 0xb
 745 0099 05       		.uleb128 0x5
 746 009a 00       		.byte	0
 747 009b 03       		.uleb128 0x3
 748 009c 0E       		.uleb128 0xe
 749 009d 3A       		.uleb128 0x3a
 750 009e 0B       		.uleb128 0xb
 751 009f 3B       		.uleb128 0x3b
 752 00a0 0B       		.uleb128 0xb
 753 00a1 49       		.uleb128 0x49
 754 00a2 13       		.uleb128 0x13
 755 00a3 02       		.uleb128 0x2
 756 00a4 17       		.uleb128 0x17
 757 00a5 00       		.byte	0
 758 00a6 00       		.byte	0
 759 00a7 0C       		.uleb128 0xc
 760 00a8 34       		.uleb128 0x34
 761 00a9 00       		.byte	0
 762 00aa 03       		.uleb128 0x3
 763 00ab 0E       		.uleb128 0xe
 764 00ac 3A       		.uleb128 0x3a
 765 00ad 0B       		.uleb128 0xb
 766 00ae 3B       		.uleb128 0x3b
 767 00af 0B       		.uleb128 0xb
 768 00b0 49       		.uleb128 0x49
 769 00b1 13       		.uleb128 0x13
 770 00b2 02       		.uleb128 0x2
 771 00b3 17       		.uleb128 0x17
 772 00b4 00       		.byte	0
 773 00b5 00       		.byte	0
 774 00b6 0D       		.uleb128 0xd
 775 00b7 898201   		.uleb128 0x4109
 776 00ba 00       		.byte	0
 777 00bb 11       		.uleb128 0x11
 778 00bc 01       		.uleb128 0x1
 779 00bd 31       		.uleb128 0x31
 780 00be 13       		.uleb128 0x13
 781 00bf 00       		.byte	0
 782 00c0 00       		.byte	0
 783 00c1 0E       		.uleb128 0xe
 784 00c2 2E       		.uleb128 0x2e
 785 00c3 00       		.byte	0
 786 00c4 3F       		.uleb128 0x3f
 787 00c5 19       		.uleb128 0x19
 788 00c6 03       		.uleb128 0x3
 789 00c7 0E       		.uleb128 0xe
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLktsif.s 			page 25


 790 00c8 3A       		.uleb128 0x3a
 791 00c9 0B       		.uleb128 0xb
 792 00ca 3B       		.uleb128 0x3b
 793 00cb 05       		.uleb128 0x5
 794 00cc 27       		.uleb128 0x27
 795 00cd 19       		.uleb128 0x19
 796 00ce 49       		.uleb128 0x49
 797 00cf 13       		.uleb128 0x13
 798 00d0 11       		.uleb128 0x11
 799 00d1 01       		.uleb128 0x1
 800 00d2 12       		.uleb128 0x12
 801 00d3 06       		.uleb128 0x6
 802 00d4 40       		.uleb128 0x40
 803 00d5 18       		.uleb128 0x18
 804 00d6 9742     		.uleb128 0x2117
 805 00d8 19       		.uleb128 0x19
 806 00d9 00       		.byte	0
 807 00da 00       		.byte	0
 808 00db 0F       		.uleb128 0xf
 809 00dc 2E       		.uleb128 0x2e
 810 00dd 01       		.byte	0x1
 811 00de 3F       		.uleb128 0x3f
 812 00df 19       		.uleb128 0x19
 813 00e0 03       		.uleb128 0x3
 814 00e1 0E       		.uleb128 0xe
 815 00e2 3A       		.uleb128 0x3a
 816 00e3 0B       		.uleb128 0xb
 817 00e4 3B       		.uleb128 0x3b
 818 00e5 05       		.uleb128 0x5
 819 00e6 27       		.uleb128 0x27
 820 00e7 19       		.uleb128 0x19
 821 00e8 11       		.uleb128 0x11
 822 00e9 01       		.uleb128 0x1
 823 00ea 12       		.uleb128 0x12
 824 00eb 06       		.uleb128 0x6
 825 00ec 40       		.uleb128 0x40
 826 00ed 18       		.uleb128 0x18
 827 00ee 9742     		.uleb128 0x2117
 828 00f0 19       		.uleb128 0x19
 829 00f1 01       		.uleb128 0x1
 830 00f2 13       		.uleb128 0x13
 831 00f3 00       		.byte	0
 832 00f4 00       		.byte	0
 833 00f5 10       		.uleb128 0x10
 834 00f6 05       		.uleb128 0x5
 835 00f7 00       		.byte	0
 836 00f8 03       		.uleb128 0x3
 837 00f9 0E       		.uleb128 0xe
 838 00fa 3A       		.uleb128 0x3a
 839 00fb 0B       		.uleb128 0xb
 840 00fc 3B       		.uleb128 0x3b
 841 00fd 05       		.uleb128 0x5
 842 00fe 49       		.uleb128 0x49
 843 00ff 13       		.uleb128 0x13
 844 0100 02       		.uleb128 0x2
 845 0101 17       		.uleb128 0x17
 846 0102 00       		.byte	0
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLktsif.s 			page 26


 847 0103 00       		.byte	0
 848 0104 11       		.uleb128 0x11
 849 0105 898201   		.uleb128 0x4109
 850 0108 01       		.byte	0x1
 851 0109 11       		.uleb128 0x11
 852 010a 01       		.uleb128 0x1
 853 010b 31       		.uleb128 0x31
 854 010c 13       		.uleb128 0x13
 855 010d 01       		.uleb128 0x1
 856 010e 13       		.uleb128 0x13
 857 010f 00       		.byte	0
 858 0110 00       		.byte	0
 859 0111 12       		.uleb128 0x12
 860 0112 8A8201   		.uleb128 0x410a
 861 0115 00       		.byte	0
 862 0116 02       		.uleb128 0x2
 863 0117 18       		.uleb128 0x18
 864 0118 9142     		.uleb128 0x2111
 865 011a 18       		.uleb128 0x18
 866 011b 00       		.byte	0
 867 011c 00       		.byte	0
 868 011d 13       		.uleb128 0x13
 869 011e 898201   		.uleb128 0x4109
 870 0121 01       		.byte	0x1
 871 0122 11       		.uleb128 0x11
 872 0123 01       		.uleb128 0x1
 873 0124 31       		.uleb128 0x31
 874 0125 13       		.uleb128 0x13
 875 0126 00       		.byte	0
 876 0127 00       		.byte	0
 877 0128 14       		.uleb128 0x14
 878 0129 34       		.uleb128 0x34
 879 012a 00       		.byte	0
 880 012b 03       		.uleb128 0x3
 881 012c 0E       		.uleb128 0xe
 882 012d 3A       		.uleb128 0x3a
 883 012e 0B       		.uleb128 0xb
 884 012f 3B       		.uleb128 0x3b
 885 0130 0B       		.uleb128 0xb
 886 0131 49       		.uleb128 0x49
 887 0132 13       		.uleb128 0x13
 888 0133 3F       		.uleb128 0x3f
 889 0134 19       		.uleb128 0x19
 890 0135 02       		.uleb128 0x2
 891 0136 18       		.uleb128 0x18
 892 0137 00       		.byte	0
 893 0138 00       		.byte	0
 894 0139 15       		.uleb128 0x15
 895 013a 2E       		.uleb128 0x2e
 896 013b 00       		.byte	0
 897 013c 3F       		.uleb128 0x3f
 898 013d 19       		.uleb128 0x19
 899 013e 3C       		.uleb128 0x3c
 900 013f 19       		.uleb128 0x19
 901 0140 6E       		.uleb128 0x6e
 902 0141 0E       		.uleb128 0xe
 903 0142 03       		.uleb128 0x3
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLktsif.s 			page 27


 904 0143 0E       		.uleb128 0xe
 905 0144 3A       		.uleb128 0x3a
 906 0145 0B       		.uleb128 0xb
 907 0146 3B       		.uleb128 0x3b
 908 0147 0B       		.uleb128 0xb
 909 0148 00       		.byte	0
 910 0149 00       		.byte	0
 911 014a 00       		.byte	0
 912              		.section	.debug_loc,"",%progbits
 913              	.Ldebug_loc0:
 914              	.LLST0:
 915 0000 00000000 		.4byte	.LVL0
 916 0004 06000000 		.4byte	.LVL1
 917 0008 0100     		.2byte	0x1
 918 000a 50       		.byte	0x50
 919 000b 06000000 		.4byte	.LVL1
 920 000f 1E000000 		.4byte	.LVL4
 921 0013 0100     		.2byte	0x1
 922 0015 54       		.byte	0x54
 923 0016 1E000000 		.4byte	.LVL4
 924 001a 28000000 		.4byte	.LFE4
 925 001e 0200     		.2byte	0x2
 926 0020 73       		.byte	0x73
 927 0021 00       		.sleb128 0
 928 0022 00000000 		.4byte	0
 929 0026 00000000 		.4byte	0
 930              	.LLST1:
 931 002a 0A000000 		.4byte	.LVL2
 932 002e 17000000 		.4byte	.LVL3-1
 933 0032 0100     		.2byte	0x1
 934 0034 50       		.byte	0x50
 935 0035 00000000 		.4byte	0
 936 0039 00000000 		.4byte	0
 937              	.LLST2:
 938 003d 00000000 		.4byte	.LVL5
 939 0041 04000000 		.4byte	.LVL6
 940 0045 0100     		.2byte	0x1
 941 0047 50       		.byte	0x50
 942 0048 04000000 		.4byte	.LVL6
 943 004c 10000000 		.4byte	.LFE6
 944 0050 0100     		.2byte	0x1
 945 0052 50       		.byte	0x50
 946 0053 00000000 		.4byte	0
 947 0057 00000000 		.4byte	0
 948              	.LLST3:
 949 005b 00000000 		.4byte	.LVL7
 950 005f 04000000 		.4byte	.LVL8
 951 0063 0100     		.2byte	0x1
 952 0065 50       		.byte	0x50
 953 0066 04000000 		.4byte	.LVL8
 954 006a 10000000 		.4byte	.LFE8
 955 006e 0100     		.2byte	0x1
 956 0070 50       		.byte	0x50
 957 0071 00000000 		.4byte	0
 958 0075 00000000 		.4byte	0
 959              		.section	.debug_aranges,"",%progbits
 960 0000 5C000000 		.4byte	0x5c
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLktsif.s 			page 28


 961 0004 0200     		.2byte	0x2
 962 0006 00000000 		.4byte	.Ldebug_info0
 963 000a 04       		.byte	0x4
 964 000b 00       		.byte	0
 965 000c 0000     		.2byte	0
 966 000e 0000     		.2byte	0
 967 0010 00000000 		.4byte	.LFB1
 968 0014 10000000 		.4byte	.LFE1-.LFB1
 969 0018 00000000 		.4byte	.LFB3
 970 001c 10000000 		.4byte	.LFE3-.LFB3
 971 0020 00000000 		.4byte	.LFB4
 972 0024 28000000 		.4byte	.LFE4-.LFB4
 973 0028 00000000 		.4byte	.LFB5
 974 002c 10000000 		.4byte	.LFE5-.LFB5
 975 0030 00000000 		.4byte	.LFB6
 976 0034 10000000 		.4byte	.LFE6-.LFB6
 977 0038 00000000 		.4byte	.LFB7
 978 003c 0C000000 		.4byte	.LFE7-.LFB7
 979 0040 00000000 		.4byte	.LFB8
 980 0044 10000000 		.4byte	.LFE8-.LFB8
 981 0048 00000000 		.4byte	.LFB0
 982 004c 16000000 		.4byte	.LFE0-.LFB0
 983 0050 00000000 		.4byte	.LFB2
 984 0054 1C000000 		.4byte	.LFE2-.LFB2
 985 0058 00000000 		.4byte	0
 986 005c 00000000 		.4byte	0
 987              		.section	.debug_ranges,"",%progbits
 988              	.Ldebug_ranges0:
 989 0000 00000000 		.4byte	.LFB1
 990 0004 10000000 		.4byte	.LFE1
 991 0008 00000000 		.4byte	.LFB3
 992 000c 10000000 		.4byte	.LFE3
 993 0010 00000000 		.4byte	.LFB4
 994 0014 28000000 		.4byte	.LFE4
 995 0018 00000000 		.4byte	.LFB5
 996 001c 10000000 		.4byte	.LFE5
 997 0020 00000000 		.4byte	.LFB6
 998 0024 10000000 		.4byte	.LFE6
 999 0028 00000000 		.4byte	.LFB7
 1000 002c 0C000000 		.4byte	.LFE7
 1001 0030 00000000 		.4byte	.LFB8
 1002 0034 10000000 		.4byte	.LFE8
 1003 0038 00000000 		.4byte	.LFB0
 1004 003c 16000000 		.4byte	.LFE0
 1005 0040 00000000 		.4byte	.LFB2
 1006 0044 1C000000 		.4byte	.LFE2
 1007 0048 00000000 		.4byte	0
 1008 004c 00000000 		.4byte	0
 1009              		.section	.debug_line,"",%progbits
 1010              	.Ldebug_line0:
 1011 0000 0B010000 		.section	.debug_str,"MS",%progbits,1
 1011      02005400 
 1011      00000201 
 1011      FB0E0D00 
 1011      01010101 
 1012              	.LASF29:
 1013 0000 4352435F 		.ascii	"CRC_backup\000"
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLktsif.s 			page 29


 1013      6261636B 
 1013      757000
 1014              	.LASF28:
 1015 000b 4352435F 		.ascii	"CRC_initVar\000"
 1015      696E6974 
 1015      56617200 
 1016              	.LASF24:
 1017 0017 4352435F 		.ascii	"CRC_WritePolynomial\000"
 1017      57726974 
 1017      65506F6C 
 1017      796E6F6D 
 1017      69616C00 
 1018              	.LASF3:
 1019 002b 73686F72 		.ascii	"short unsigned int\000"
 1019      7420756E 
 1019      7369676E 
 1019      65642069 
 1019      6E7400
 1020              	.LASF23:
 1021 003e 4352435F 		.ascii	"CRC_ReadPolynomial\000"
 1021      52656164 
 1021      506F6C79 
 1021      6E6F6D69 
 1021      616C00
 1022              	.LASF19:
 1023 0051 4352435F 		.ascii	"CRC_ResetSeedInit\000"
 1023      52657365 
 1023      74536565 
 1023      64496E69 
 1023      7400
 1024              	.LASF9:
 1025 0063 666C6F61 		.ascii	"float\000"
 1025      7400
 1026              	.LASF16:
 1027 0069 4352435F 		.ascii	"CRC_BACKUP_STRUCT\000"
 1027      4241434B 
 1027      55505F53 
 1027      54525543 
 1027      5400
 1028              	.LASF7:
 1029 007b 6C6F6E67 		.ascii	"long long unsigned int\000"
 1029      206C6F6E 
 1029      6720756E 
 1029      7369676E 
 1029      65642069 
 1030              	.LASF1:
 1031 0092 756E7369 		.ascii	"unsigned char\000"
 1031      676E6564 
 1031      20636861 
 1031      7200
 1032              	.LASF32:
 1033 00a0 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1033      43313120 
 1033      352E342E 
 1033      31203230 
 1033      31363036 
 1034 00d3 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLktsif.s 			page 30


 1034      20726576 
 1034      6973696F 
 1034      6E203233 
 1034      37373135 
 1035 0106 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1035      66756E63 
 1035      74696F6E 
 1035      2D736563 
 1035      74696F6E 
 1036              	.LASF13:
 1037 012e 72656738 		.ascii	"reg8\000"
 1037      00
 1038              	.LASF22:
 1039 0133 4352435F 		.ascii	"CRC_ReadCRC\000"
 1039      52656164 
 1039      43524300 
 1040              	.LASF5:
 1041 013f 6C6F6E67 		.ascii	"long unsigned int\000"
 1041      20756E73 
 1041      69676E65 
 1041      6420696E 
 1041      7400
 1042              	.LASF12:
 1043 0151 75696E74 		.ascii	"uint8\000"
 1043      3800
 1044              	.LASF26:
 1045 0157 4352435F 		.ascii	"CRC_Init\000"
 1045      496E6974 
 1045      00
 1046              	.LASF36:
 1047 0160 656E6162 		.ascii	"enableInterrupts\000"
 1047      6C65496E 
 1047      74657272 
 1047      75707473 
 1047      00
 1048              	.LASF10:
 1049 0171 646F7562 		.ascii	"double\000"
 1049      6C6500
 1050              	.LASF34:
 1051 0178 433A5C55 		.ascii	"C:\\Users\\sdysart\\Documents\\UACS\\UACS\\HighFreq"
 1051      73657273 
 1051      5C736479 
 1051      73617274 
 1051      5C446F63 
 1052 01a5 46534B5C 		.ascii	"FSK\\CRCTesting.cydsn\000"
 1052      43524354 
 1052      65737469 
 1052      6E672E63 
 1052      7964736E 
 1053              	.LASF25:
 1054 01ba 706F6C79 		.ascii	"polynomial\000"
 1054      6E6F6D69 
 1054      616C00
 1055              	.LASF30:
 1056 01c5 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1056      74657243 
 1056      72697469 
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLktsif.s 			page 31


 1056      63616C53 
 1056      65637469 
 1057              	.LASF8:
 1058 01dc 756E7369 		.ascii	"unsigned int\000"
 1058      676E6564 
 1058      20696E74 
 1058      00
 1059              	.LASF31:
 1060 01e9 43794578 		.ascii	"CyExitCriticalSection\000"
 1060      69744372 
 1060      69746963 
 1060      616C5365 
 1060      6374696F 
 1061              	.LASF17:
 1062 01ff 4352435F 		.ascii	"CRC_Enable\000"
 1062      456E6162 
 1062      6C6500
 1063              	.LASF15:
 1064 020a 73697A65 		.ascii	"sizetype\000"
 1064      74797065 
 1064      00
 1065              	.LASF6:
 1066 0213 6C6F6E67 		.ascii	"long long int\000"
 1066      206C6F6E 
 1066      6720696E 
 1066      7400
 1067              	.LASF11:
 1068 0221 63686172 		.ascii	"char\000"
 1068      00
 1069              	.LASF18:
 1070 0226 4352435F 		.ascii	"CRC_Stop\000"
 1070      53746F70 
 1070      00
 1071              	.LASF2:
 1072 022f 73686F72 		.ascii	"short int\000"
 1072      7420696E 
 1072      7400
 1073              	.LASF21:
 1074 0239 73656564 		.ascii	"seed\000"
 1074      00
 1075              	.LASF33:
 1076 023e 47656E65 		.ascii	"Generated_Source\\PSoC5\\CRC.c\000"
 1076      72617465 
 1076      645F536F 
 1076      75726365 
 1076      5C50536F 
 1077              	.LASF20:
 1078 025b 4352435F 		.ascii	"CRC_WriteSeed\000"
 1078      57726974 
 1078      65536565 
 1078      6400
 1079              	.LASF27:
 1080 0269 4352435F 		.ascii	"CRC_Start\000"
 1080      53746172 
 1080      7400
 1081              	.LASF4:
 1082 0273 6C6F6E67 		.ascii	"long int\000"
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLktsif.s 			page 32


 1082      20696E74 
 1082      00
 1083              	.LASF35:
 1084 027c 656E6162 		.ascii	"enableState\000"
 1084      6C655374 
 1084      61746500 
 1085              	.LASF14:
 1086 0288 6C6F6E67 		.ascii	"long double\000"
 1086      20646F75 
 1086      626C6500 
 1087              	.LASF0:
 1088 0294 7369676E 		.ascii	"signed char\000"
 1088      65642063 
 1088      68617200 
 1089              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
