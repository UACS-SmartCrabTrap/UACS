ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.isr_sec,"ax",%progbits
  20              		.align	2
  21              		.global	isr_sec
  22              		.thumb
  23              		.thumb_func
  24              		.type	isr_sec, %function
  25              	isr_sec:
  26              	.LFB69:
  27              		.file 1 "main.c"
   1:main.c        **** /*****************************************************************************
   2:main.c        **** * File Name: main.c
   3:main.c        **** *
   4:main.c        **** * Created: 5/16/18
   5:main.c        **** * Revised: 5/28/18
   6:main.c        **** * Revised by: Stephanie Salazar
   7:main.c        **** *
   8:main.c        **** * Description: 
   9:main.c        **** *  This project communicates via UART in Full duplex mode. The UART has
  10:main.c        **** * receiver(RX) and transmitter(TX)]. The data received by RX is used for
  11:main.c        **** * FSK transmission. 
  12:main.c        **** *
  13:main.c        **** *  This code has been modified from PSoC's UART_Full_Duplex example code.
  14:main.c        **** *  This code example project demonstrates how to communicate between 
  15:main.c        **** *  the PC and UART component in Full duplex mode. The UART has receiver(RX) and 
  16:main.c        **** *  transmitter(TX) part. The data received by RX is looped back to the TX.
  17:main.c        **** *
  18:main.c        **** *******************************************************************************
  19:main.c        **** * Copyright (2017), Cypress Semiconductor Corporation. All rights reserved.
  20:main.c        **** *******************************************************************************
  21:main.c        **** *
  22:main.c        **** * Related Document: 
  23:main.c        **** * CE210741_UART_Full_Duplex_and_printf_Support_with_PSoC_3_4_5LP.pdf
  24:main.c        **** *
  25:main.c        **** * Hardware Dependency: See 
  26:main.c        **** * CE210741_UART_Full_Duplex_and_printf_Support_with_PSoC_3_4_5LP.pdf
  27:main.c        **** *
  28:main.c        **** *******************************************************************************
  29:main.c        **** */
  30:main.c        **** 
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 2


  31:main.c        **** #include <project.h>
  32:main.c        **** #include <stdio.h>
  33:main.c        **** #include "stdlib.h"
  34:main.c        **** 
  35:main.c        **** /***************************************
  36:main.c        **** * UART/TESTING MACRO
  37:main.c        **** ***************************************/
  38:main.c        **** #define UART    DISABLED
  39:main.c        **** 
  40:main.c        **** /* Character LCD String Length */
  41:main.c        **** #define LINE_STR_LENGTH     (20u)
  42:main.c        **** /* Change data size for sending longer data (n-1) */
  43:main.c        **** #define DATA_SIZE           (7u)
  44:main.c        **** /* Change max crabs to correlate with data size 2^(n) - 1 */
  45:main.c        **** #define MAX_CRABS           (15)
  46:main.c        **** /* Error used for user error */
  47:main.c        **** #define ERROR               (333u)
  48:main.c        **** 
  49:main.c        **** /*Definitions*/
  50:main.c        **** #define CLOCK_FREQ 1000000
  51:main.c        **** #define FREQ(x) (CLOCK_FREQ/x)-1
  52:main.c        **** 
  53:main.c        **** /*PWM Frequencies*/
  54:main.c        **** #define ONE_FREQ     42000
  55:main.c        **** #define ZERO_FREQ    37000
  56:main.c        **** #define AUDIBLE_FREQ 12000
  57:main.c        **** 
  58:main.c        **** #define BIT_0_MASK 0x01
  59:main.c        **** #define BIT_1_MASK 0x02
  60:main.c        **** #define BIT_2_MASK 0x04
  61:main.c        **** #define BIT_3_MASK 0x08
  62:main.c        **** #define BIT_4_MASK 0x10
  63:main.c        **** #define BIT_5_MASK 0x20
  64:main.c        **** #define BIT_6_MASK 0x40
  65:main.c        **** #define BIT_7_MASK 0x80
  66:main.c        **** 
  67:main.c        **** #define ZERO              0x0
  68:main.c        **** #define ONE               0x1
  69:main.c        **** #define TRUE              0x1
  70:main.c        **** #define FALSE             0x0
  71:main.c        **** #define ENABLED           1u
  72:main.c        **** #define DISABLED          0u
  73:main.c        **** #define DATA_LENGTH       8
  74:main.c        **** #define DECODE_VALUE      0x01
  75:main.c        **** #define PREFIX_BIT_LENGTH 6
  76:main.c        **** #define PREFIX_MESSAGE    0xFF
  77:main.c        **** #define MAX_DATA_SENDING  3
  78:main.c        **** #define MAX_SLEEP_COUNT   5
  79:main.c        **** #define FiveSecs          5000
  80:main.c        **** #define ON                1
  81:main.c        **** #define OFF               0
  82:main.c        **** 
  83:main.c        **** /*Enumerations*/
  84:main.c        **** enum state{
  85:main.c        ****     Encoding_Byte,
  86:main.c        ****     Data,
  87:main.c        ****     Parity,
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 3


  88:main.c        ****     Decoding_Byte,
  89:main.c        **** };
  90:main.c        **** 
  91:main.c        **** /*Function Prototypes*/
  92:main.c        **** int Byte(unsigned int hex_value, int bT);
  93:main.c        **** int FindParity(void);
  94:main.c        **** void goToSleep(void);
  95:main.c        **** void wakeUp(void);
  96:main.c        **** 
  97:main.c        **** CY_ISR_PROTO(isr_sec); // High F Interrupt
  98:main.c        **** CY_ISR_PROTO(watchDogCheck); //reset watchDog timer before reset
  99:main.c        **** CY_ISR_PROTO(RxIsr); // RX Interrupt
 100:main.c        **** CY_ISR_PROTO(wakeUpIsr); // sleep timer interrupt
 101:main.c        **** CY_ISR_PROTO(RxWakeUp); // sleep timer interrupt from UART
 102:main.c        **** 
 103:main.c        **** /*Global Variables*/
 104:main.c        **** static int error = 0; // flag for input error
 105:main.c        **** static int i = 2; // to iterate through data array
 106:main.c        **** static int sleepCount = 0;
 107:main.c        **** uint16 count;
 108:main.c        **** char8 lineStr[LINE_STR_LENGTH];
 109:main.c        **** char8 data[LINE_STR_LENGTH];
 110:main.c        **** uint8 newDataflag = FALSE;
 111:main.c        **** static int bitTime = 0;
 112:main.c        **** static int currentByte = Encoding_Byte;
 113:main.c        **** static int prefixTime = 0;
 114:main.c        **** static int sendDataCount = 0;
 115:main.c        **** static int ParityFlag = FALSE;
 116:main.c        **** static int maxDataFlag = FALSE;
 117:main.c        **** static int wakeUpData = FALSE;
 118:main.c        **** 
 119:main.c        **** /* UART Global Variables */
 120:main.c        **** uint8 errorStatus = 0u; // No error at beginning
 121:main.c        **** uint8 crabsToSend = 0x1; // Start at 1 for testing
 122:main.c        **** 
 123:main.c        **** 
 124:main.c        **** /*******************************************************************************
 125:main.c        **** * Function Name: main()
 126:main.c        **** *******************************************************************************/
 127:main.c        **** int main()
 128:main.c        **** {
 129:main.c        ****     /*Variable initializations*/
 130:main.c        ****     int bitCase = 0;
 131:main.c        ****     int data_turn = 0;
 132:main.c        **** 
 133:main.c        **** #if(UART == ENABLED)
 134:main.c        ****     isr_rx_StartEx(RxIsr);
 135:main.c        **** #endif /* UART == ENABLED */
 136:main.c        ****     
 137:main.c        ****     /* Enable global interrupts. */
 138:main.c        ****     CyGlobalIntEnable;
 139:main.c        ****     /* Start Watchdog and its check timer */
 140:main.c        ****     CyWdtStart(CYWDT_1024_TICKS, CYWDT_LPMODE_NOCHANGE); // 2.048 - 3.072 s
 141:main.c        ****     checkWatchDogTimer_Start();
 142:main.c        ****     watchDogCheck_StartEx(watchDogCheck);
 143:main.c        ****     
 144:main.c        ****     /*Block initializations*/
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 4


 145:main.c        ****     UART_Start(); 
 146:main.c        ****     LCD_Start();
 147:main.c        ****     PWM_Modulator_Start();
 148:main.c        ****     PWM_Switch_Timer_Start();
 149:main.c        ****     
 150:main.c        ****     /* Start Interrupts */
 151:main.c        ****     isr_sec_StartEx(isr_sec);
 152:main.c        ****     Sleep_ISR_StartEx(wakeUpIsr);
 153:main.c        ****     
 154:main.c        ****     /* Clear LCD line. */
 155:main.c        ****     LCD_Position(0u, 0u);
 156:main.c        ****     LCD_PrintString("                    ");
 157:main.c        **** 
 158:main.c        ****     /* Output string on LCD. */
 159:main.c        ****     LCD_Position(0u, 0u);
 160:main.c        ****     LCD_PrintString("Hello");
 161:main.c        ****     CyDelay(FiveSecs);
 162:main.c        **** 
 163:main.c        ****     for(;;)
 164:main.c        ****     {
 165:main.c        ****         if(errorStatus != 0u)
 166:main.c        ****         {
 167:main.c        ****             /* Clear error status */
 168:main.c        ****             errorStatus = 0u;
 169:main.c        ****         }
 170:main.c        ****         switch(currentByte){
 171:main.c        ****             case Encoding_Byte:
 172:main.c        ****                 bitCase = Byte(PREFIX_MESSAGE, bitTime);
 173:main.c        ****                 break;
 174:main.c        ****             case Data:
 175:main.c        ****                 bitCase = Byte(crabsToSend, bitTime);
 176:main.c        ****                 break;
 177:main.c        ****             case Parity:
 178:main.c        ****                 ParityFlag = TRUE;
 179:main.c        ****                 bitCase = FindParity();
 180:main.c        ****                 break;
 181:main.c        ****             case Decoding_Byte:
 182:main.c        ****                 bitCase = Byte(DECODE_VALUE, bitTime);
 183:main.c        ****                 break;
 184:main.c        ****  
 185:main.c        ****             default:
 186:main.c        ****                 /* Switch data or repeat data depending on sendDataCount */
 187:main.c        ****                 sendDataCount++; // count how many times we send data
 188:main.c        ****                 newDataflag = FALSE; // Turn sending off until new data from UART
 189:main.c        ****                 prefixTime = 0;
 190:main.c        **** #if(UART == ENABLED)
 191:main.c        ****                 data_turn++;
 192:main.c        ****                 if (data_turn == DATA_LENGTH) {
 193:main.c        ****                     data_turn = 0;
 194:main.c        ****                 }
 195:main.c        **** #else 
 196:main.c        ****                 // Restart data if sent MAX_DATA_SENDING
 197:main.c        ****                 if(sendDataCount >= MAX_DATA_SENDING){
 198:main.c        ****                     
 199:main.c        ****                     crabsToSend <<= 1; // Move over data a bit
 200:main.c        ****                     data_turn++;
 201:main.c        ****                     maxDataFlag = TRUE; // flag for extra 2 second delay between new data
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 5


 202:main.c        ****                 }
 203:main.c        ****                 //Once data to be sent can't be contained in a byte, reset to 0x1
 204:main.c        ****                 if (data_turn >= DATA_LENGTH-1) {
 205:main.c        ****                     data_turn = 0;
 206:main.c        ****                     crabsToSend = ONE;
 207:main.c        ****                 }
 208:main.c        ****                 
 209:main.c        ****                 /* Clear LCD line. */
 210:main.c        ****                 LCD_Position(0u, 0u);
 211:main.c        ****                 sprintf(data,"Crabs: %d", crabsToSend);
 212:main.c        ****                 LCD_PrintString("             ");
 213:main.c        **** 
 214:main.c        ****                 /* Output string on LCD. */
 215:main.c        ****                 LCD_Position(0u, 0u);
 216:main.c        ****                 LCD_PrintString(data);
 217:main.c        ****  
 218:main.c        **** #endif /* UART == ENABLED */
 219:main.c        **** 
 220:main.c        ****                 // Turn off PWM and stop timer 
 221:main.c        ****                 PWM_Modulator_Stop();
 222:main.c        ****                 PWM_Switch_Timer_Stop();
 223:main.c        ****                 HighVoltage_Write(0); // Turn High Voltage off while delaying
 224:main.c        ****                 CyDelay(20);
 225:main.c        ****                 SignalBase_Write(0);               
 226:main.c        ****                 
 227:main.c        ****                 if(sendDataCount >= MAX_DATA_SENDING){
 228:main.c        ****                     sendDataCount = 0;
 229:main.c        ****                     SleepTimer_Start();
 230:main.c        ****                     goToSleep();
 231:main.c        ****                     // PSoC Sleep command. To adjust sleep time, change in the hardware
 232:main.c        ****                     CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW);
 233:main.c        ****                 }
 234:main.c        **** 
 235:main.c        **** #if(UART == ENABLED)
 236:main.c        ****                 /* Check if data has been sent 3 time */
 237:main.c        ****                 if(sendDataCount >= MAX_DATA_SENDING){
 238:main.c        ****                     RxWakeUp_StartEx(RxWakeUp); //Start UART interrupt while in sleep mode
 239:main.c        ****                     sendDataCount = 0; // reset for sending new data
 240:main.c        ****                     /* Wait for new data before sending out data */
 241:main.c        ****                     while(newDataflag == FALSE){
 242:main.c        ****                         CyWdtClear(); // Clear watchdog timer while in sleep
 243:main.c        ****                         // PSoC Sleep command. To adjust sleep time, change in the hardware
 244:main.c        ****                         //CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW);
 245:main.c        ****                     }
 246:main.c        ****                     //New Transmission, wake up PSOC
 247:main.c        ****                     RxWakeUp_Stop();
 248:main.c        ****                     SleepTimer_Stop();
 249:main.c        ****                     wakeUp(); 
 250:main.c        ****                 }else{
 251:main.c        ****                     /* Delay 1 s before sending out for MAX_DATA_SENDING times */
 252:main.c        ****                     CyDelay(1000);
 253:main.c        ****                 }
 254:main.c        **** #else 
 255:main.c        ****                 if(maxDataFlag == TRUE){
 256:main.c        ****                     /* Delay in ms and send data after without waiting for UART */
 257:main.c        ****                     while(wakeUpData == FALSE){
 258:main.c        ****                         CyWdtClear(); // Clear watchdog timer while in sleep
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 6


 259:main.c        ****                         // PSoC Sleep command. To adjust sleep time, change in the hardware
 260:main.c        ****                         CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW);
 261:main.c        ****                     }
 262:main.c        ****                     maxDataFlag = FALSE;
 263:main.c        ****                     wakeUpData = FALSE;
 264:main.c        ****                     //New Transmission, wake up PSOC
 265:main.c        ****                     SleepTimer_Stop();
 266:main.c        ****                     wakeUp(); 
 267:main.c        ****                 }else{
 268:main.c        ****                     // Sending data again, pause 1 s in between
 269:main.c        ****                     CyDelay(1000);
 270:main.c        ****                 }
 271:main.c        ****                 
 272:main.c        **** #endif /* UART == ENABLED */
 273:main.c        **** 
 274:main.c        ****                 /* New data: Turn on circuitry and begin transmission */
 275:main.c        ****                 HighVoltage_Write(1);
 276:main.c        ****                 CyDelay(20); // Give voltage booster time to charge up
 277:main.c        ****                 SignalBase_Write(1);
 278:main.c        ****                 /* Reset PWM blocks and bitTime for new transmission */
 279:main.c        ****                 bitTime = 0; 
 280:main.c        ****                 PWM_Modulator_Start();
 281:main.c        ****                 PWM_Switch_Timer_Start();
 282:main.c        ****                 currentByte = Encoding_Byte;
 283:main.c        ****                 break;
 284:main.c        ****          } //end switch(bitTime) 
 285:main.c        ****         
 286:main.c        ****         /* Send out frequency depending on bit is 1 or 0 */
 287:main.c        ****         if(bitCase == ONE){
 288:main.c        ****             SignalBase_Write(1);
 289:main.c        ****             PWM_Modulator_Start();
 290:main.c        ****             PWM_Modulator_WritePeriod(FREQ(ONE_FREQ));
 291:main.c        ****             PWM_Modulator_WriteCompare((FREQ(ONE_FREQ))/2); // Sets pulse width
 292:main.c        ****         }else if(bitCase == ZERO){
 293:main.c        ****             PWM_Modulator_Stop();
 294:main.c        ****             SignalBase_Write(0);
 295:main.c        ****         } // end if statement
 296:main.c        ****     } // end for loop
 297:main.c        **** } // end main
 298:main.c        **** 
 299:main.c        **** /*
 300:main.c        ****  * function: int Byte(unsigned int hex_value, int bT)
 301:main.c        ****  * parameters: hex_value - a byte specifying what data you want to send
 302:main.c        ****  *             bT - the current bit time
 303:main.c        ****  * returns: bitCase - a high or low signal to be sent to an output pin
 304:main.c        ****  * description: This function takes in a hex value and sends it out a bit at a
 305:main.c        ****  *  time as a high or low signal depending on the bit time.
 306:main.c        ****  */
 307:main.c        **** int Byte(unsigned int hex_value, int bT)
 308:main.c        **** {
 309:main.c        ****     int bitCase;
 310:main.c        ****     switch(bT){
 311:main.c        ****         case 0:
 312:main.c        ****             bitCase = (hex_value & BIT_7_MASK) >> 7;
 313:main.c        ****             break;
 314:main.c        ****         case 1:
 315:main.c        ****             bitCase = (hex_value & BIT_6_MASK) >> 6;
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 7


 316:main.c        ****             break; 
 317:main.c        ****         case 2:
 318:main.c        ****             bitCase = (hex_value & BIT_5_MASK) >> 5;
 319:main.c        ****             break; 
 320:main.c        ****         case 3:
 321:main.c        ****             bitCase = (hex_value & BIT_4_MASK) >> 4;
 322:main.c        ****             break;
 323:main.c        ****         case 4:
 324:main.c        ****             bitCase = (hex_value & BIT_3_MASK) >> 3;
 325:main.c        ****             break; 
 326:main.c        ****         case 5:
 327:main.c        ****             bitCase = (hex_value & BIT_2_MASK) >> 2;
 328:main.c        ****             break; 
 329:main.c        ****         case 6:
 330:main.c        ****             bitCase = (hex_value & BIT_1_MASK) >> 1;
 331:main.c        ****             break; 
 332:main.c        ****         case 7:
 333:main.c        ****             bitCase = (hex_value & BIT_0_MASK);
 334:main.c        ****             break;
 335:main.c        ****         default:
 336:main.c        ****             break;
 337:main.c        ****     } //end switch(bT)
 338:main.c        ****     return bitCase;
 339:main.c        **** }//end Byte()
 340:main.c        **** 
 341:main.c        **** 
 342:main.c        **** /*
 343:main.c        ****  * function: void FindParity(void)
 344:main.c        ****  * parameters: void
 345:main.c        ****  * returns: void
 346:main.c        ****  * description: XORs each bit of data to get even or odd parity for
 347:main.c        ****  * error checking
 348:main.c        ****  */
 349:main.c        **** int FindParity()
 350:main.c        **** {
 351:main.c        ****     uint8 bitToCheck = crabsToSend; // store crabsToSend in new variable to manipulate
 352:main.c        ****     int i = 0;
 353:main.c        ****     int parity = (bitToCheck & BIT_0_MASK);
 354:main.c        ****     for(i = 0; i < DATA_LENGTH; i++){
 355:main.c        ****         bitToCheck = bitToCheck >> 1; // shift mask over
 356:main.c        ****         parity = (bitToCheck & BIT_0_MASK) ^ parity; // XOR new bit
 357:main.c        ****     }
 358:main.c        ****     return parity;
 359:main.c        **** }//end FindParity()   
 360:main.c        **** 
 361:main.c        **** /*
 362:main.c        ****  * function: void wakeUp(void)
 363:main.c        ****  * parameters: none
 364:main.c        ****  * returns: none
 365:main.c        ****  * description: wakes up all modules and restores clocks
 366:main.c        ****  *  
 367:main.c        ****  */
 368:main.c        **** 
 369:main.c        **** void wakeUp(void){
 370:main.c        ****     //sleepToggle_Write(OFF);
 371:main.c        ****     //CyPmRestoreClocks();
 372:main.c        **** #if(UART == DISABLED)
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 8


 373:main.c        ****     CyPmRestoreClocks();
 374:main.c        **** #endif /* UART == ENABLED */
 375:main.c        ****     LCD_Wakeup();
 376:main.c        ****     checkWatchDogTimer_Wakeup();
 377:main.c        ****     PWM_Modulator_Wakeup();
 378:main.c        ****     PWM_Switch_Timer_Wakeup(); 
 379:main.c        ****     PWM_Switch_Timer_Start();
 380:main.c        ****     
 381:main.c        **** }//end wakeUp()
 382:main.c        **** 
 383:main.c        **** /*
 384:main.c        ****  * function: void goToSleep(void)
 385:main.c        ****  * parameters: none
 386:main.c        ****  * returns: none
 387:main.c        ****  * description: puts all modules to sleep and save clocks
 388:main.c        ****  *  
 389:main.c        ****  */
 390:main.c        **** void goToSleep(){
 391:main.c        ****     //sleepToggle_Write(ON);
 392:main.c        ****     LCD_Sleep();
 393:main.c        ****     PWM_Modulator_Sleep();
 394:main.c        ****     PWM_Switch_Timer_Sleep();
 395:main.c        ****     checkWatchDogTimer_Sleep();
 396:main.c        ****     UART_Sleep();
 397:main.c        ****     watchDogCheck_ClearPending();
 398:main.c        ****     isr_sec_ClearPending();
 399:main.c        ****     isr_rx_ClearPending();
 400:main.c        ****     CyPmSaveClocks();
 401:main.c        **** 
 402:main.c        **** }//end goToSleep()
 403:main.c        **** 
 404:main.c        **** 
 405:main.c        **** /*******************************************************************************
 406:main.c        **** * Function Name: isr_sec
 407:main.c        **** ********************************************************************************
 408:main.c        **** *
 409:main.c        **** * Summary:
 410:main.c        **** * Interrupt triggered on a 0.1s timer timeout
 411:main.c        ****  * This ISR will activate every half second and keep track of what
 412:main.c        ****  *  current bit we are on within a byte. After every 8th bit, it resets and
 413:main.c        ****  *  moves on to a new byte.
 414:main.c        **** *
 415:main.c        **** * Parameters:
 416:main.c        **** *  None.
 417:main.c        **** *
 418:main.c        **** * Return:
 419:main.c        **** *  None.
 420:main.c        **** *
 421:main.c        **** *******************************************************************************/
 422:main.c        **** CY_ISR(isr_sec)
 423:main.c        **** {
  28              		.loc 1 423 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 424:main.c        ****     bitTime++;
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 9


  33              		.loc 1 424 0
  34 0000 0C4B     		ldr	r3, .L4
  35 0002 1A68     		ldr	r2, [r3]
  36 0004 0132     		adds	r2, r2, #1
  37 0006 1A60     		str	r2, [r3]
 425:main.c        ****     /* Only want to send one bit for parity */
 426:main.c        ****     if(ParityFlag == TRUE){
  38              		.loc 1 426 0
  39 0008 5B68     		ldr	r3, [r3, #4]
  40 000a 012B     		cmp	r3, #1
  41 000c 06D1     		bne	.L2
 427:main.c        ****         bitTime = 0;
  42              		.loc 1 427 0
  43 000e 094B     		ldr	r3, .L4
  44 0010 0021     		movs	r1, #0
  45 0012 1960     		str	r1, [r3]
 428:main.c        ****         currentByte++;
  46              		.loc 1 428 0
  47 0014 9A68     		ldr	r2, [r3, #8]
  48 0016 0132     		adds	r2, r2, #1
  49 0018 9A60     		str	r2, [r3, #8]
 429:main.c        ****         ParityFlag = FALSE;
  50              		.loc 1 429 0
  51 001a 5960     		str	r1, [r3, #4]
  52              	.L2:
 430:main.c        ****     }
 431:main.c        ****     if (bitTime == 8){
  53              		.loc 1 431 0
  54 001c 054B     		ldr	r3, .L4
  55 001e 1B68     		ldr	r3, [r3]
  56 0020 082B     		cmp	r3, #8
  57 0022 05D1     		bne	.L1
 432:main.c        ****         bitTime = 0;
  58              		.loc 1 432 0
  59 0024 034B     		ldr	r3, .L4
  60 0026 0022     		movs	r2, #0
  61 0028 1A60     		str	r2, [r3]
 433:main.c        ****         currentByte++;
  62              		.loc 1 433 0
  63 002a 9A68     		ldr	r2, [r3, #8]
  64 002c 0132     		adds	r2, r2, #1
  65 002e 9A60     		str	r2, [r3, #8]
  66              	.L1:
  67 0030 7047     		bx	lr
  68              	.L5:
  69 0032 00BF     		.align	2
  70              	.L4:
  71 0034 00000000 		.word	.LANCHOR0
  72              		.cfi_endproc
  73              	.LFE69:
  74              		.size	isr_sec, .-isr_sec
  75              		.section	.text.watchDogCheck,"ax",%progbits
  76              		.align	2
  77              		.global	watchDogCheck
  78              		.thumb
  79              		.thumb_func
  80              		.type	watchDogCheck, %function
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 10


  81              	watchDogCheck:
  82              	.LFB71:
 434:main.c        ****     }
 435:main.c        **** }//end CY_ISR(isr_sec)
 436:main.c        **** 
 437:main.c        **** /*******************************************************************************
 438:main.c        **** * Function Name: RxIsr
 439:main.c        **** ********************************************************************************
 440:main.c        **** *
 441:main.c        **** * Summary:
 442:main.c        **** *  Interrupt Service Routine for RX portion of the UART taken from
 443:main.c        **** *  example code and edited for storing data to send
 444:main.c        **** *
 445:main.c        **** * Parameters:
 446:main.c        **** *  None.
 447:main.c        **** *
 448:main.c        **** * Return:
 449:main.c        **** *  None.
 450:main.c        **** *
 451:main.c        **** *******************************************************************************/
 452:main.c        **** CY_ISR(RxIsr)
 453:main.c        **** {
 454:main.c        ****     
 455:main.c        ****     sleepToggle_Write(ON);
 456:main.c        ****     uint8 rxStatus;   
 457:main.c        ****     do
 458:main.c        ****     {
 459:main.c        ****         /* Read receiver status register */
 460:main.c        ****         rxStatus = UART_RXSTATUS_REG;
 461:main.c        **** 
 462:main.c        ****         if((rxStatus & (UART_RX_STS_BREAK      | UART_RX_STS_PAR_ERROR |
 463:main.c        ****                         UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 464:main.c        ****         {
 465:main.c        ****             /* ERROR handling. */
 466:main.c        ****             errorStatus |= rxStatus & ( UART_RX_STS_BREAK      | UART_RX_STS_PAR_ERROR | 
 467:main.c        ****                                         UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN);
 468:main.c        ****         }
 469:main.c        ****         
 470:main.c        ****         if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 471:main.c        ****         {
 472:main.c        ****             newDataflag = TRUE;
 473:main.c        ****             /* Read data from the RX data register */
 474:main.c        ****             //crabsToSend = UART_RXDATA_REG;
 475:main.c        ****             crabsToSend =  UART_GetByte()  ;
 476:main.c        ****             if(errorStatus == 0u)
 477:main.c        ****             {
 478:main.c        ****                 /* Send data backward */
 479:main.c        ****                 UART_TXDATA_REG = crabsToSend;
 480:main.c        ****                 /* Clear LCD line. */
 481:main.c        ****                 LCD_Position(0u, 0u);
 482:main.c        ****                 sprintf(data,"Crabs: %d", crabsToSend);
 483:main.c        ****                 LCD_PrintString("             ");
 484:main.c        ****                 /* Output string on LCD. */
 485:main.c        ****                 LCD_Position(0u, 0u);
 486:main.c        ****                 LCD_PrintString(data);
 487:main.c        **** 
 488:main.c        ****             }else{
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 11


 489:main.c        ****                 isr_rx_SetPending();
 490:main.c        ****                 sprintf(data,"%d", errorStatus);
 491:main.c        ****                 LCD_PrintString(data);
 492:main.c        ****             }
 493:main.c        **** 
 494:main.c        ****         }
 495:main.c        ****     // Read FIFO until empty
 496:main.c        ****     }while((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u);
 497:main.c        ****     
 498:main.c        ****     isr_rx_ClearPending();
 499:main.c        ****     sleepToggle_Write(OFF);
 500:main.c        **** } //end CY_ISR(RxIsr)
 501:main.c        **** 
 502:main.c        **** /*******************************************************************************
 503:main.c        **** * Function Name: watchDogCheck
 504:main.c        **** ********************************************************************************
 505:main.c        **** *
 506:main.c        **** * Summary:
 507:main.c        **** * Reset watchDog timer every 1.4s
 508:main.c        **** * Watchdog should reset system between 2-3s
 509:main.c        **** * Should not get triggered if system experiencing drift 
 510:main.c        **** *
 511:main.c        **** * Parameters:
 512:main.c        **** *  None.
 513:main.c        **** *
 514:main.c        **** * Return:
 515:main.c        **** *  None.
 516:main.c        **** *
 517:main.c        **** *******************************************************************************/
 518:main.c        **** CY_ISR(watchDogCheck){
  83              		.loc 1 518 0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87 0000 08B5     		push	{r3, lr}
  88              		.cfi_def_cfa_offset 8
  89              		.cfi_offset 3, -8
  90              		.cfi_offset 14, -4
 519:main.c        ****     
 520:main.c        ****     CyWdtClear(); 
  91              		.loc 1 520 0
  92 0002 FFF7FEFF 		bl	CyWdtClear
  93              	.LVL0:
  94 0006 08BD     		pop	{r3, pc}
  95              		.cfi_endproc
  96              	.LFE71:
  97              		.size	watchDogCheck, .-watchDogCheck
  98              		.section	.text.RxIsr,"ax",%progbits
  99              		.align	2
 100              		.global	RxIsr
 101              		.thumb
 102              		.thumb_func
 103              		.type	RxIsr, %function
 104              	RxIsr:
 105              	.LFB70:
 453:main.c        ****     
 106              		.loc 1 453 0
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 12


 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 0
 109              		@ frame_needed = 0, uses_anonymous_args = 0
 110 0000 38B5     		push	{r3, r4, r5, lr}
 111              		.cfi_def_cfa_offset 16
 112              		.cfi_offset 3, -16
 113              		.cfi_offset 4, -12
 114              		.cfi_offset 5, -8
 115              		.cfi_offset 14, -4
 455:main.c        ****     uint8 rxStatus;   
 116              		.loc 1 455 0
 117 0002 0120     		movs	r0, #1
 118 0004 FFF7FEFF 		bl	sleepToggle_Write
 119              	.LVL1:
 120              	.L12:
 460:main.c        **** 
 121              		.loc 1 460 0
 122 0008 234B     		ldr	r3, .L14
 123 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 124 000c DBB2     		uxtb	r3, r3
 125              	.LVL2:
 462:main.c        ****                         UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 126              		.loc 1 462 0
 127 000e 13F01E0F 		tst	r3, #30
 128 0012 05D0     		beq	.L9
 466:main.c        ****                                         UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN);
 129              		.loc 1 466 0
 130 0014 2148     		ldr	r0, .L14+4
 131 0016 03F01E02 		and	r2, r3, #30
 132 001a 017B     		ldrb	r1, [r0, #12]	@ zero_extendqisi2
 133 001c 0A43     		orrs	r2, r2, r1
 134 001e 0273     		strb	r2, [r0, #12]
 135              	.L9:
 136 0020 03F02003 		and	r3, r3, #32
 137              	.LVL3:
 470:main.c        ****         {
 138              		.loc 1 470 0
 139 0024 03F0FF04 		and	r4, r3, #255
 140 0028 6BB3     		cbz	r3, .L10
 472:main.c        ****             /* Read data from the RX data register */
 141              		.loc 1 472 0
 142 002a 1C4D     		ldr	r5, .L14+4
 143 002c 0123     		movs	r3, #1
 144 002e 6B73     		strb	r3, [r5, #13]
 475:main.c        ****             if(errorStatus == 0u)
 145              		.loc 1 475 0
 146 0030 FFF7FEFF 		bl	UART_GetByte
 147              	.LVL4:
 148 0034 C0B2     		uxtb	r0, r0
 149 0036 1A4B     		ldr	r3, .L14+8
 150 0038 1870     		strb	r0, [r3]
 476:main.c        ****             {
 151              		.loc 1 476 0
 152 003a 2B7B     		ldrb	r3, [r5, #12]	@ zero_extendqisi2
 153 003c BBB9     		cbnz	r3, .L11
 479:main.c        ****                 /* Clear LCD line. */
 154              		.loc 1 479 0
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 13


 155 003e 194B     		ldr	r3, .L14+12
 156 0040 1870     		strb	r0, [r3]
 481:main.c        ****                 sprintf(data,"Crabs: %d", crabsToSend);
 157              		.loc 1 481 0
 158 0042 0021     		movs	r1, #0
 159 0044 0846     		mov	r0, r1
 160 0046 FFF7FEFF 		bl	LCD_Position
 161              	.LVL5:
 482:main.c        ****                 LCD_PrintString("             ");
 162              		.loc 1 482 0
 163 004a 174D     		ldr	r5, .L14+16
 164 004c 144B     		ldr	r3, .L14+8
 165 004e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 166 0050 1649     		ldr	r1, .L14+20
 167 0052 2846     		mov	r0, r5
 168 0054 FFF7FEFF 		bl	sprintf
 169              	.LVL6:
 483:main.c        ****                 /* Output string on LCD. */
 170              		.loc 1 483 0
 171 0058 1548     		ldr	r0, .L14+24
 172 005a FFF7FEFF 		bl	LCD_PrintString
 173              	.LVL7:
 485:main.c        ****                 LCD_PrintString(data);
 174              		.loc 1 485 0
 175 005e 0021     		movs	r1, #0
 176 0060 0846     		mov	r0, r1
 177 0062 FFF7FEFF 		bl	LCD_Position
 178              	.LVL8:
 486:main.c        **** 
 179              		.loc 1 486 0
 180 0066 2846     		mov	r0, r5
 181 0068 FFF7FEFF 		bl	LCD_PrintString
 182              	.LVL9:
 183 006c 0BE0     		b	.L10
 184              	.L11:
 489:main.c        ****                 sprintf(data,"%d", errorStatus);
 185              		.loc 1 489 0
 186 006e FFF7FEFF 		bl	isr_rx_SetPending
 187              	.LVL10:
 490:main.c        ****                 LCD_PrintString(data);
 188              		.loc 1 490 0
 189 0072 0D4D     		ldr	r5, .L14+16
 190 0074 094B     		ldr	r3, .L14+4
 191 0076 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2
 192 0078 0E49     		ldr	r1, .L14+28
 193 007a 2846     		mov	r0, r5
 194 007c FFF7FEFF 		bl	sprintf
 195              	.LVL11:
 491:main.c        ****             }
 196              		.loc 1 491 0
 197 0080 2846     		mov	r0, r5
 198 0082 FFF7FEFF 		bl	LCD_PrintString
 199              	.LVL12:
 200              	.L10:
 496:main.c        ****     
 201              		.loc 1 496 0
 202 0086 002C     		cmp	r4, #0
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 14


 203 0088 BED1     		bne	.L12
 498:main.c        ****     sleepToggle_Write(OFF);
 204              		.loc 1 498 0
 205 008a FFF7FEFF 		bl	isr_rx_ClearPending
 206              	.LVL13:
 499:main.c        **** } //end CY_ISR(RxIsr)
 207              		.loc 1 499 0
 208 008e 0020     		movs	r0, #0
 209 0090 FFF7FEFF 		bl	sleepToggle_Write
 210              	.LVL14:
 211 0094 38BD     		pop	{r3, r4, r5, pc}
 212              	.L15:
 213 0096 00BF     		.align	2
 214              	.L14:
 215 0098 69640040 		.word	1073767529
 216 009c 00000000 		.word	.LANCHOR0
 217 00a0 00000000 		.word	.LANCHOR1
 218 00a4 45650040 		.word	1073767749
 219 00a8 00000000 		.word	data
 220 00ac 00000000 		.word	.LC0
 221 00b0 0C000000 		.word	.LC1
 222 00b4 1C000000 		.word	.LC2
 223              		.cfi_endproc
 224              	.LFE70:
 225              		.size	RxIsr, .-RxIsr
 226              		.section	.text.wakeUpIsr,"ax",%progbits
 227              		.align	2
 228              		.global	wakeUpIsr
 229              		.thumb
 230              		.thumb_func
 231              		.type	wakeUpIsr, %function
 232              	wakeUpIsr:
 233              	.LFB72:
 521:main.c        **** } //CY_ISR(watchDogCheck)
 522:main.c        **** 
 523:main.c        **** 
 524:main.c        **** /*******************************************************************************
 525:main.c        **** * Function Name: wakeUpIsr
 526:main.c        **** ********************************************************************************
 527:main.c        **** *
 528:main.c        **** * Summary:
 529:main.c        **** * Sleep Timer interrupt to check for new data every 1.024 s
 530:main.c        **** * Also resets watch dog timer when watchDogCheck timer is asleep
 531:main.c        **** *
 532:main.c        **** * Parameters:
 533:main.c        **** *  None.
 534:main.c        **** *
 535:main.c        **** * Return:
 536:main.c        **** *  None.
 537:main.c        **** *
 538:main.c        **** *******************************************************************************/
 539:main.c        **** CY_ISR(wakeUpIsr){
 234              		.loc 1 539 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 15


 239              		.cfi_def_cfa_offset 8
 240              		.cfi_offset 3, -8
 241              		.cfi_offset 14, -4
 540:main.c        ****     SleepTimer_GetStatus(); // Clears the sleep timer interrupt
 242              		.loc 1 540 0
 243 0002 FFF7FEFF 		bl	SleepTimer_GetStatus
 244              	.LVL15:
 541:main.c        ****     CyWdtClear(); // Clear watchdog timer while in sleep
 245              		.loc 1 541 0
 246 0006 FFF7FEFF 		bl	CyWdtClear
 247              	.LVL16:
 542:main.c        ****     sleepCount++;
 248              		.loc 1 542 0
 249 000a 064A     		ldr	r2, .L19
 250 000c 1369     		ldr	r3, [r2, #16]
 251 000e 0133     		adds	r3, r3, #1
 252 0010 1361     		str	r3, [r2, #16]
 543:main.c        ****     if(sleepCount > MAX_SLEEP_COUNT){
 253              		.loc 1 543 0
 254 0012 052B     		cmp	r3, #5
 255 0014 04DD     		ble	.L16
 544:main.c        ****         wakeUpData = TRUE;
 256              		.loc 1 544 0
 257 0016 1346     		mov	r3, r2
 258 0018 0122     		movs	r2, #1
 259 001a 5A61     		str	r2, [r3, #20]
 545:main.c        ****         sleepCount = 0;
 260              		.loc 1 545 0
 261 001c 0022     		movs	r2, #0
 262 001e 1A61     		str	r2, [r3, #16]
 263              	.L16:
 264 0020 08BD     		pop	{r3, pc}
 265              	.L20:
 266 0022 00BF     		.align	2
 267              	.L19:
 268 0024 00000000 		.word	.LANCHOR0
 269              		.cfi_endproc
 270              	.LFE72:
 271              		.size	wakeUpIsr, .-wakeUpIsr
 272              		.section	.text.Byte,"ax",%progbits
 273              		.align	2
 274              		.global	Byte
 275              		.thumb
 276              		.thumb_func
 277              		.type	Byte, %function
 278              	Byte:
 279              	.LFB65:
 308:main.c        ****     int bitCase;
 280              		.loc 1 308 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284              		@ link register save eliminated.
 285              	.LVL17:
 310:main.c        ****         case 0:
 286              		.loc 1 310 0
 287 0000 0729     		cmp	r1, #7
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 16


 288 0002 1CD8     		bhi	.L22
 289 0004 DFE801F0 		tbb	[pc, r1]
 290              	.L24:
 291 0008 04       		.byte	(.L23-.L24)/2
 292 0009 07       		.byte	(.L25-.L24)/2
 293 000a 0A       		.byte	(.L26-.L24)/2
 294 000b 0D       		.byte	(.L27-.L24)/2
 295 000c 10       		.byte	(.L28-.L24)/2
 296 000d 13       		.byte	(.L29-.L24)/2
 297 000e 16       		.byte	(.L30-.L24)/2
 298 000f 19       		.byte	(.L31-.L24)/2
 299              		.p2align 1
 300              	.L23:
 312:main.c        ****             break;
 301              		.loc 1 312 0
 302 0010 C0F3C013 		ubfx	r3, r0, #7, #1
 303              	.LVL18:
 313:main.c        ****         case 1:
 304              		.loc 1 313 0
 305 0014 13E0     		b	.L22
 306              	.LVL19:
 307              	.L25:
 315:main.c        ****             break; 
 308              		.loc 1 315 0
 309 0016 C0F38013 		ubfx	r3, r0, #6, #1
 310              	.LVL20:
 316:main.c        ****         case 2:
 311              		.loc 1 316 0
 312 001a 10E0     		b	.L22
 313              	.LVL21:
 314              	.L26:
 318:main.c        ****             break; 
 315              		.loc 1 318 0
 316 001c C0F34013 		ubfx	r3, r0, #5, #1
 317              	.LVL22:
 319:main.c        ****         case 3:
 318              		.loc 1 319 0
 319 0020 0DE0     		b	.L22
 320              	.LVL23:
 321              	.L27:
 321:main.c        ****             break;
 322              		.loc 1 321 0
 323 0022 C0F30013 		ubfx	r3, r0, #4, #1
 324              	.LVL24:
 322:main.c        ****         case 4:
 325              		.loc 1 322 0
 326 0026 0AE0     		b	.L22
 327              	.LVL25:
 328              	.L28:
 324:main.c        ****             break; 
 329              		.loc 1 324 0
 330 0028 C0F3C003 		ubfx	r3, r0, #3, #1
 331              	.LVL26:
 325:main.c        ****         case 5:
 332              		.loc 1 325 0
 333 002c 07E0     		b	.L22
 334              	.LVL27:
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 17


 335              	.L29:
 327:main.c        ****             break; 
 336              		.loc 1 327 0
 337 002e C0F38003 		ubfx	r3, r0, #2, #1
 338              	.LVL28:
 328:main.c        ****         case 6:
 339              		.loc 1 328 0
 340 0032 04E0     		b	.L22
 341              	.LVL29:
 342              	.L30:
 330:main.c        ****             break; 
 343              		.loc 1 330 0
 344 0034 C0F34003 		ubfx	r3, r0, #1, #1
 345              	.LVL30:
 331:main.c        ****         case 7:
 346              		.loc 1 331 0
 347 0038 01E0     		b	.L22
 348              	.LVL31:
 349              	.L31:
 333:main.c        ****             break;
 350              		.loc 1 333 0
 351 003a 00F00103 		and	r3, r0, #1
 352              	.LVL32:
 353              	.L22:
 339:main.c        **** 
 354              		.loc 1 339 0
 355 003e 1846     		mov	r0, r3
 356              	.LVL33:
 357 0040 7047     		bx	lr
 358              		.cfi_endproc
 359              	.LFE65:
 360              		.size	Byte, .-Byte
 361 0042 00BF     		.section	.text.FindParity,"ax",%progbits
 362              		.align	2
 363              		.global	FindParity
 364              		.thumb
 365              		.thumb_func
 366              		.type	FindParity, %function
 367              	FindParity:
 368              	.LFB66:
 350:main.c        ****     uint8 bitToCheck = crabsToSend; // store crabsToSend in new variable to manipulate
 369              		.loc 1 350 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373              		@ link register save eliminated.
 351:main.c        ****     int i = 0;
 374              		.loc 1 351 0
 375 0000 064B     		ldr	r3, .L35
 376 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 377              	.LVL34:
 353:main.c        ****     for(i = 0; i < DATA_LENGTH; i++){
 378              		.loc 1 353 0
 379 0004 02F00100 		and	r0, r2, #1
 380              	.LVL35:
 354:main.c        ****         bitToCheck = bitToCheck >> 1; // shift mask over
 381              		.loc 1 354 0
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 18


 382 0008 0023     		movs	r3, #0
 383 000a 04E0     		b	.L33
 384              	.LVL36:
 385              	.L34:
 355:main.c        ****         parity = (bitToCheck & BIT_0_MASK) ^ parity; // XOR new bit
 386              		.loc 1 355 0 discriminator 3
 387 000c 5208     		lsrs	r2, r2, #1
 388              	.LVL37:
 356:main.c        ****     }
 389              		.loc 1 356 0 discriminator 3
 390 000e 02F00101 		and	r1, r2, #1
 391 0012 4840     		eors	r0, r0, r1
 392              	.LVL38:
 354:main.c        ****         bitToCheck = bitToCheck >> 1; // shift mask over
 393              		.loc 1 354 0 discriminator 3
 394 0014 0133     		adds	r3, r3, #1
 395              	.LVL39:
 396              	.L33:
 354:main.c        ****         bitToCheck = bitToCheck >> 1; // shift mask over
 397              		.loc 1 354 0 is_stmt 0 discriminator 1
 398 0016 072B     		cmp	r3, #7
 399 0018 F8DD     		ble	.L34
 359:main.c        **** 
 400              		.loc 1 359 0 is_stmt 1
 401 001a 7047     		bx	lr
 402              	.L36:
 403              		.align	2
 404              	.L35:
 405 001c 00000000 		.word	.LANCHOR1
 406              		.cfi_endproc
 407              	.LFE66:
 408              		.size	FindParity, .-FindParity
 409              		.section	.text.wakeUp,"ax",%progbits
 410              		.align	2
 411              		.global	wakeUp
 412              		.thumb
 413              		.thumb_func
 414              		.type	wakeUp, %function
 415              	wakeUp:
 416              	.LFB67:
 369:main.c        ****     //sleepToggle_Write(OFF);
 417              		.loc 1 369 0
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 0
 420              		@ frame_needed = 0, uses_anonymous_args = 0
 421 0000 08B5     		push	{r3, lr}
 422              		.cfi_def_cfa_offset 8
 423              		.cfi_offset 3, -8
 424              		.cfi_offset 14, -4
 373:main.c        **** #endif /* UART == ENABLED */
 425              		.loc 1 373 0
 426 0002 FFF7FEFF 		bl	CyPmRestoreClocks
 427              	.LVL40:
 375:main.c        ****     checkWatchDogTimer_Wakeup();
 428              		.loc 1 375 0
 429 0006 FFF7FEFF 		bl	LCD_Wakeup
 430              	.LVL41:
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 19


 376:main.c        ****     PWM_Modulator_Wakeup();
 431              		.loc 1 376 0
 432 000a FFF7FEFF 		bl	checkWatchDogTimer_Wakeup
 433              	.LVL42:
 377:main.c        ****     PWM_Switch_Timer_Wakeup(); 
 434              		.loc 1 377 0
 435 000e FFF7FEFF 		bl	PWM_Modulator_Wakeup
 436              	.LVL43:
 378:main.c        ****     PWM_Switch_Timer_Start();
 437              		.loc 1 378 0
 438 0012 FFF7FEFF 		bl	PWM_Switch_Timer_Wakeup
 439              	.LVL44:
 379:main.c        ****     
 440              		.loc 1 379 0
 441 0016 FFF7FEFF 		bl	PWM_Switch_Timer_Start
 442              	.LVL45:
 443 001a 08BD     		pop	{r3, pc}
 444              		.cfi_endproc
 445              	.LFE67:
 446              		.size	wakeUp, .-wakeUp
 447              		.section	.text.goToSleep,"ax",%progbits
 448              		.align	2
 449              		.global	goToSleep
 450              		.thumb
 451              		.thumb_func
 452              		.type	goToSleep, %function
 453              	goToSleep:
 454              	.LFB68:
 390:main.c        ****     //sleepToggle_Write(ON);
 455              		.loc 1 390 0
 456              		.cfi_startproc
 457              		@ args = 0, pretend = 0, frame = 0
 458              		@ frame_needed = 0, uses_anonymous_args = 0
 459 0000 08B5     		push	{r3, lr}
 460              		.cfi_def_cfa_offset 8
 461              		.cfi_offset 3, -8
 462              		.cfi_offset 14, -4
 392:main.c        ****     PWM_Modulator_Sleep();
 463              		.loc 1 392 0
 464 0002 FFF7FEFF 		bl	LCD_Sleep
 465              	.LVL46:
 393:main.c        ****     PWM_Switch_Timer_Sleep();
 466              		.loc 1 393 0
 467 0006 FFF7FEFF 		bl	PWM_Modulator_Sleep
 468              	.LVL47:
 394:main.c        ****     checkWatchDogTimer_Sleep();
 469              		.loc 1 394 0
 470 000a FFF7FEFF 		bl	PWM_Switch_Timer_Sleep
 471              	.LVL48:
 395:main.c        ****     UART_Sleep();
 472              		.loc 1 395 0
 473 000e FFF7FEFF 		bl	checkWatchDogTimer_Sleep
 474              	.LVL49:
 396:main.c        ****     watchDogCheck_ClearPending();
 475              		.loc 1 396 0
 476 0012 FFF7FEFF 		bl	UART_Sleep
 477              	.LVL50:
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 20


 397:main.c        ****     isr_sec_ClearPending();
 478              		.loc 1 397 0
 479 0016 FFF7FEFF 		bl	watchDogCheck_ClearPending
 480              	.LVL51:
 398:main.c        ****     isr_rx_ClearPending();
 481              		.loc 1 398 0
 482 001a FFF7FEFF 		bl	isr_sec_ClearPending
 483              	.LVL52:
 399:main.c        ****     CyPmSaveClocks();
 484              		.loc 1 399 0
 485 001e FFF7FEFF 		bl	isr_rx_ClearPending
 486              	.LVL53:
 400:main.c        **** 
 487              		.loc 1 400 0
 488 0022 FFF7FEFF 		bl	CyPmSaveClocks
 489              	.LVL54:
 490 0026 08BD     		pop	{r3, pc}
 491              		.cfi_endproc
 492              	.LFE68:
 493              		.size	goToSleep, .-goToSleep
 494              		.section	.text.main,"ax",%progbits
 495              		.align	2
 496              		.global	main
 497              		.thumb
 498              		.thumb_func
 499              		.type	main, %function
 500              	main:
 501              	.LFB64:
 128:main.c        ****     /*Variable initializations*/
 502              		.loc 1 128 0
 503              		.cfi_startproc
 504              		@ args = 0, pretend = 0, frame = 0
 505              		@ frame_needed = 0, uses_anonymous_args = 0
 506 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 507              		.cfi_def_cfa_offset 24
 508              		.cfi_offset 3, -24
 509              		.cfi_offset 4, -20
 510              		.cfi_offset 5, -16
 511              		.cfi_offset 6, -12
 512              		.cfi_offset 7, -8
 513              		.cfi_offset 14, -4
 514              	.LVL55:
 138:main.c        ****     /* Start Watchdog and its check timer */
 515              		.loc 1 138 0
 516              		.syntax unified
 517              	@ 138 "main.c" 1
 518 0002 62B6     		CPSIE   i
 519              	@ 0 "" 2
 140:main.c        ****     checkWatchDogTimer_Start();
 520              		.loc 1 140 0
 521              		.thumb
 522              		.syntax unified
 523 0004 0021     		movs	r1, #0
 524 0006 0320     		movs	r0, #3
 525 0008 FFF7FEFF 		bl	CyWdtStart
 526              	.LVL56:
 141:main.c        ****     watchDogCheck_StartEx(watchDogCheck);
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 21


 527              		.loc 1 141 0
 528 000c FFF7FEFF 		bl	checkWatchDogTimer_Start
 529              	.LVL57:
 142:main.c        ****     
 530              		.loc 1 142 0
 531 0010 6E48     		ldr	r0, .L62
 532 0012 FFF7FEFF 		bl	watchDogCheck_StartEx
 533              	.LVL58:
 145:main.c        ****     LCD_Start();
 534              		.loc 1 145 0
 535 0016 FFF7FEFF 		bl	UART_Start
 536              	.LVL59:
 146:main.c        ****     PWM_Modulator_Start();
 537              		.loc 1 146 0
 538 001a FFF7FEFF 		bl	LCD_Start
 539              	.LVL60:
 147:main.c        ****     PWM_Switch_Timer_Start();
 540              		.loc 1 147 0
 541 001e FFF7FEFF 		bl	PWM_Modulator_Start
 542              	.LVL61:
 148:main.c        ****     
 543              		.loc 1 148 0
 544 0022 FFF7FEFF 		bl	PWM_Switch_Timer_Start
 545              	.LVL62:
 151:main.c        ****     Sleep_ISR_StartEx(wakeUpIsr);
 546              		.loc 1 151 0
 547 0026 6A48     		ldr	r0, .L62+4
 548 0028 FFF7FEFF 		bl	isr_sec_StartEx
 549              	.LVL63:
 152:main.c        ****     
 550              		.loc 1 152 0
 551 002c 6948     		ldr	r0, .L62+8
 552 002e FFF7FEFF 		bl	Sleep_ISR_StartEx
 553              	.LVL64:
 155:main.c        ****     LCD_PrintString("                    ");
 554              		.loc 1 155 0
 555 0032 0021     		movs	r1, #0
 556 0034 0846     		mov	r0, r1
 557 0036 FFF7FEFF 		bl	LCD_Position
 558              	.LVL65:
 156:main.c        **** 
 559              		.loc 1 156 0
 560 003a 6748     		ldr	r0, .L62+12
 561 003c FFF7FEFF 		bl	LCD_PrintString
 562              	.LVL66:
 159:main.c        ****     LCD_PrintString("Hello");
 563              		.loc 1 159 0
 564 0040 0021     		movs	r1, #0
 565 0042 0846     		mov	r0, r1
 566 0044 FFF7FEFF 		bl	LCD_Position
 567              	.LVL67:
 160:main.c        ****     CyDelay(FiveSecs);
 568              		.loc 1 160 0
 569 0048 6448     		ldr	r0, .L62+16
 570 004a FFF7FEFF 		bl	LCD_PrintString
 571              	.LVL68:
 161:main.c        **** 
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 22


 572              		.loc 1 161 0
 573 004e 41F28830 		movw	r0, #5000
 574 0052 FFF7FEFF 		bl	CyDelay
 575              	.LVL69:
 131:main.c        **** 
 576              		.loc 1 131 0
 577 0056 0025     		movs	r5, #0
 130:main.c        ****     int data_turn = 0;
 578              		.loc 1 130 0
 579 0058 2C46     		mov	r4, r5
 580              	.LVL70:
 581              	.L42:
 165:main.c        ****         {
 582              		.loc 1 165 0
 583 005a 614B     		ldr	r3, .L62+20
 584 005c 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 585 005e 13B1     		cbz	r3, .L43
 168:main.c        ****         }
 586              		.loc 1 168 0
 587 0060 0022     		movs	r2, #0
 588 0062 5F4B     		ldr	r3, .L62+20
 589 0064 1A73     		strb	r2, [r3, #12]
 590              	.L43:
 170:main.c        ****             case Encoding_Byte:
 591              		.loc 1 170 0
 592 0066 5E4B     		ldr	r3, .L62+20
 593 0068 9B68     		ldr	r3, [r3, #8]
 594 006a 032B     		cmp	r3, #3
 595 006c 20D8     		bhi	.L44
 596 006e DFE803F0 		tbb	[pc, r3]
 597              	.L46:
 598 0072 02       		.byte	(.L45-.L46)/2
 599 0073 09       		.byte	(.L47-.L46)/2
 600 0074 11       		.byte	(.L48-.L46)/2
 601 0075 18       		.byte	(.L49-.L46)/2
 602              		.p2align 1
 603              	.L45:
 172:main.c        ****                 break;
 604              		.loc 1 172 0
 605 0076 5A4B     		ldr	r3, .L62+20
 606 0078 1968     		ldr	r1, [r3]
 607 007a FF20     		movs	r0, #255
 608 007c FFF7FEFF 		bl	Byte
 609              	.LVL71:
 610 0080 0446     		mov	r4, r0
 611              	.LVL72:
 173:main.c        ****             case Data:
 612              		.loc 1 173 0
 613 0082 8BE0     		b	.L50
 614              	.LVL73:
 615              	.L47:
 175:main.c        ****                 break;
 616              		.loc 1 175 0
 617 0084 564B     		ldr	r3, .L62+20
 618 0086 1968     		ldr	r1, [r3]
 619 0088 564B     		ldr	r3, .L62+24
 620 008a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 23


 621 008c FFF7FEFF 		bl	Byte
 622              	.LVL74:
 623 0090 0446     		mov	r4, r0
 624              	.LVL75:
 176:main.c        ****             case Parity:
 625              		.loc 1 176 0
 626 0092 83E0     		b	.L50
 627              	.LVL76:
 628              	.L48:
 178:main.c        ****                 bitCase = FindParity();
 629              		.loc 1 178 0
 630 0094 0122     		movs	r2, #1
 631 0096 524B     		ldr	r3, .L62+20
 632 0098 5A60     		str	r2, [r3, #4]
 179:main.c        ****                 break;
 633              		.loc 1 179 0
 634 009a FFF7FEFF 		bl	FindParity
 635              	.LVL77:
 636 009e 0446     		mov	r4, r0
 637              	.LVL78:
 180:main.c        ****             case Decoding_Byte:
 638              		.loc 1 180 0
 639 00a0 7CE0     		b	.L50
 640              	.LVL79:
 641              	.L49:
 182:main.c        ****                 break;
 642              		.loc 1 182 0
 643 00a2 4F4B     		ldr	r3, .L62+20
 644 00a4 1968     		ldr	r1, [r3]
 645 00a6 0120     		movs	r0, #1
 646 00a8 FFF7FEFF 		bl	Byte
 647              	.LVL80:
 648 00ac 0446     		mov	r4, r0
 649              	.LVL81:
 183:main.c        ****  
 650              		.loc 1 183 0
 651 00ae 75E0     		b	.L50
 652              	.LVL82:
 653              	.L44:
 187:main.c        ****                 newDataflag = FALSE; // Turn sending off until new data from UART
 654              		.loc 1 187 0
 655 00b0 4B4A     		ldr	r2, .L62+20
 656 00b2 9369     		ldr	r3, [r2, #24]
 657 00b4 0133     		adds	r3, r3, #1
 658 00b6 9361     		str	r3, [r2, #24]
 188:main.c        ****                 prefixTime = 0;
 659              		.loc 1 188 0
 660 00b8 0021     		movs	r1, #0
 661 00ba 5173     		strb	r1, [r2, #13]
 197:main.c        ****                     
 662              		.loc 1 197 0
 663 00bc 022B     		cmp	r3, #2
 664 00be 07DD     		ble	.L51
 199:main.c        ****                     data_turn++;
 665              		.loc 1 199 0
 666 00c0 484A     		ldr	r2, .L62+24
 667 00c2 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 24


 668 00c4 5B00     		lsls	r3, r3, #1
 669 00c6 1370     		strb	r3, [r2]
 200:main.c        ****                     maxDataFlag = TRUE; // flag for extra 2 second delay between new data
 670              		.loc 1 200 0
 671 00c8 0135     		adds	r5, r5, #1
 672              	.LVL83:
 201:main.c        ****                 }
 673              		.loc 1 201 0
 674 00ca 0122     		movs	r2, #1
 675 00cc 444B     		ldr	r3, .L62+20
 676 00ce DA61     		str	r2, [r3, #28]
 677              	.L51:
 204:main.c        ****                     data_turn = 0;
 678              		.loc 1 204 0
 679 00d0 062D     		cmp	r5, #6
 680 00d2 03DD     		ble	.L52
 681              	.LVL84:
 206:main.c        ****                 }
 682              		.loc 1 206 0
 683 00d4 0122     		movs	r2, #1
 684 00d6 434B     		ldr	r3, .L62+24
 685 00d8 1A70     		strb	r2, [r3]
 205:main.c        ****                     crabsToSend = ONE;
 686              		.loc 1 205 0
 687 00da 0025     		movs	r5, #0
 688              	.LVL85:
 689              	.L52:
 210:main.c        ****                 sprintf(data,"Crabs: %d", crabsToSend);
 690              		.loc 1 210 0
 691 00dc 0021     		movs	r1, #0
 692 00de 0846     		mov	r0, r1
 693 00e0 FFF7FEFF 		bl	LCD_Position
 694              	.LVL86:
 211:main.c        ****                 LCD_PrintString("             ");
 695              		.loc 1 211 0
 696 00e4 404E     		ldr	r6, .L62+28
 697 00e6 3F4B     		ldr	r3, .L62+24
 698 00e8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 699 00ea 4049     		ldr	r1, .L62+32
 700 00ec 3046     		mov	r0, r6
 701 00ee FFF7FEFF 		bl	sprintf
 702              	.LVL87:
 212:main.c        **** 
 703              		.loc 1 212 0
 704 00f2 3F48     		ldr	r0, .L62+36
 705 00f4 FFF7FEFF 		bl	LCD_PrintString
 706              	.LVL88:
 215:main.c        ****                 LCD_PrintString(data);
 707              		.loc 1 215 0
 708 00f8 0021     		movs	r1, #0
 709 00fa 0846     		mov	r0, r1
 710 00fc FFF7FEFF 		bl	LCD_Position
 711              	.LVL89:
 216:main.c        ****  
 712              		.loc 1 216 0
 713 0100 3046     		mov	r0, r6
 714 0102 FFF7FEFF 		bl	LCD_PrintString
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 25


 715              	.LVL90:
 221:main.c        ****                 PWM_Switch_Timer_Stop();
 716              		.loc 1 221 0
 717 0106 FFF7FEFF 		bl	PWM_Modulator_Stop
 718              	.LVL91:
 222:main.c        ****                 HighVoltage_Write(0); // Turn High Voltage off while delaying
 719              		.loc 1 222 0
 720 010a FFF7FEFF 		bl	PWM_Switch_Timer_Stop
 721              	.LVL92:
 223:main.c        ****                 CyDelay(20);
 722              		.loc 1 223 0
 723 010e 0020     		movs	r0, #0
 724 0110 FFF7FEFF 		bl	HighVoltage_Write
 725              	.LVL93:
 224:main.c        ****                 SignalBase_Write(0);               
 726              		.loc 1 224 0
 727 0114 1420     		movs	r0, #20
 728 0116 FFF7FEFF 		bl	CyDelay
 729              	.LVL94:
 225:main.c        ****                 
 730              		.loc 1 225 0
 731 011a 0020     		movs	r0, #0
 732 011c FFF7FEFF 		bl	SignalBase_Write
 733              	.LVL95:
 227:main.c        ****                     sendDataCount = 0;
 734              		.loc 1 227 0
 735 0120 2F4B     		ldr	r3, .L62+20
 736 0122 9B69     		ldr	r3, [r3, #24]
 737 0124 022B     		cmp	r3, #2
 738 0126 0BDD     		ble	.L53
 228:main.c        ****                     SleepTimer_Start();
 739              		.loc 1 228 0
 740 0128 0026     		movs	r6, #0
 741 012a 2D4B     		ldr	r3, .L62+20
 742 012c 9E61     		str	r6, [r3, #24]
 229:main.c        ****                     goToSleep();
 743              		.loc 1 229 0
 744 012e FFF7FEFF 		bl	SleepTimer_Start
 745              	.LVL96:
 230:main.c        ****                     // PSoC Sleep command. To adjust sleep time, change in the hardware
 746              		.loc 1 230 0
 747 0132 FFF7FEFF 		bl	goToSleep
 748              	.LVL97:
 232:main.c        ****                 }
 749              		.loc 1 232 0
 750 0136 4FF40061 		mov	r1, #2048
 751 013a 3046     		mov	r0, r6
 752 013c FFF7FEFF 		bl	CyPmSleep
 753              	.LVL98:
 754              	.L53:
 255:main.c        ****                     /* Delay in ms and send data after without waiting for UART */
 755              		.loc 1 255 0
 756 0140 274B     		ldr	r3, .L62+20
 757 0142 DB69     		ldr	r3, [r3, #28]
 758 0144 012B     		cmp	r3, #1
 759 0146 14D1     		bne	.L60
 760 0148 06E0     		b	.L54
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 26


 761              	.L56:
 258:main.c        ****                         // PSoC Sleep command. To adjust sleep time, change in the hardware
 762              		.loc 1 258 0
 763 014a FFF7FEFF 		bl	CyWdtClear
 764              	.LVL99:
 260:main.c        ****                     }
 765              		.loc 1 260 0
 766 014e 4FF40061 		mov	r1, #2048
 767 0152 0020     		movs	r0, #0
 768 0154 FFF7FEFF 		bl	CyPmSleep
 769              	.LVL100:
 770              	.L54:
 257:main.c        ****                         CyWdtClear(); // Clear watchdog timer while in sleep
 771              		.loc 1 257 0
 772 0158 214B     		ldr	r3, .L62+20
 773 015a 5B69     		ldr	r3, [r3, #20]
 774 015c 002B     		cmp	r3, #0
 775 015e F4D0     		beq	.L56
 262:main.c        ****                     wakeUpData = FALSE;
 776              		.loc 1 262 0
 777 0160 1F4B     		ldr	r3, .L62+20
 778 0162 0022     		movs	r2, #0
 779 0164 DA61     		str	r2, [r3, #28]
 263:main.c        ****                     //New Transmission, wake up PSOC
 780              		.loc 1 263 0
 781 0166 5A61     		str	r2, [r3, #20]
 265:main.c        ****                     wakeUp(); 
 782              		.loc 1 265 0
 783 0168 FFF7FEFF 		bl	SleepTimer_Stop
 784              	.LVL101:
 266:main.c        ****                 }else{
 785              		.loc 1 266 0
 786 016c FFF7FEFF 		bl	wakeUp
 787              	.LVL102:
 788 0170 03E0     		b	.L57
 789              	.L60:
 269:main.c        ****                 }
 790              		.loc 1 269 0
 791 0172 4FF47A70 		mov	r0, #1000
 792 0176 FFF7FEFF 		bl	CyDelay
 793              	.LVL103:
 794              	.L57:
 275:main.c        ****                 CyDelay(20); // Give voltage booster time to charge up
 795              		.loc 1 275 0
 796 017a 0120     		movs	r0, #1
 797 017c FFF7FEFF 		bl	HighVoltage_Write
 798              	.LVL104:
 276:main.c        ****                 SignalBase_Write(1);
 799              		.loc 1 276 0
 800 0180 1420     		movs	r0, #20
 801 0182 FFF7FEFF 		bl	CyDelay
 802              	.LVL105:
 277:main.c        ****                 /* Reset PWM blocks and bitTime for new transmission */
 803              		.loc 1 277 0
 804 0186 0120     		movs	r0, #1
 805 0188 FFF7FEFF 		bl	SignalBase_Write
 806              	.LVL106:
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 27


 279:main.c        ****                 PWM_Modulator_Start();
 807              		.loc 1 279 0
 808 018c 144E     		ldr	r6, .L62+20
 809 018e 0027     		movs	r7, #0
 810 0190 3760     		str	r7, [r6]
 280:main.c        ****                 PWM_Switch_Timer_Start();
 811              		.loc 1 280 0
 812 0192 FFF7FEFF 		bl	PWM_Modulator_Start
 813              	.LVL107:
 281:main.c        ****                 currentByte = Encoding_Byte;
 814              		.loc 1 281 0
 815 0196 FFF7FEFF 		bl	PWM_Switch_Timer_Start
 816              	.LVL108:
 282:main.c        ****                 break;
 817              		.loc 1 282 0
 818 019a B760     		str	r7, [r6, #8]
 819              	.L50:
 287:main.c        ****             SignalBase_Write(1);
 820              		.loc 1 287 0
 821 019c 012C     		cmp	r4, #1
 822 019e 0BD1     		bne	.L58
 288:main.c        ****             PWM_Modulator_Start();
 823              		.loc 1 288 0
 824 01a0 0120     		movs	r0, #1
 825 01a2 FFF7FEFF 		bl	SignalBase_Write
 826              	.LVL109:
 289:main.c        ****             PWM_Modulator_WritePeriod(FREQ(ONE_FREQ));
 827              		.loc 1 289 0
 828 01a6 FFF7FEFF 		bl	PWM_Modulator_Start
 829              	.LVL110:
 290:main.c        ****             PWM_Modulator_WriteCompare((FREQ(ONE_FREQ))/2); // Sets pulse width
 830              		.loc 1 290 0
 831 01aa 1620     		movs	r0, #22
 832 01ac FFF7FEFF 		bl	PWM_Modulator_WritePeriod
 833              	.LVL111:
 291:main.c        ****         }else if(bitCase == ZERO){
 834              		.loc 1 291 0
 835 01b0 0B20     		movs	r0, #11
 836 01b2 FFF7FEFF 		bl	PWM_Modulator_WriteCompare
 837              	.LVL112:
 838 01b6 50E7     		b	.L42
 839              	.L58:
 292:main.c        ****             PWM_Modulator_Stop();
 840              		.loc 1 292 0
 841 01b8 002C     		cmp	r4, #0
 842 01ba 7FF44EAF 		bne	.L42
 293:main.c        ****             SignalBase_Write(0);
 843              		.loc 1 293 0
 844 01be FFF7FEFF 		bl	PWM_Modulator_Stop
 845              	.LVL113:
 294:main.c        ****         } // end if statement
 846              		.loc 1 294 0
 847 01c2 0020     		movs	r0, #0
 848 01c4 FFF7FEFF 		bl	SignalBase_Write
 849              	.LVL114:
 850 01c8 47E7     		b	.L42
 851              	.L63:
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 28


 852 01ca 00BF     		.align	2
 853              	.L62:
 854 01cc 00000000 		.word	watchDogCheck
 855 01d0 00000000 		.word	isr_sec
 856 01d4 00000000 		.word	wakeUpIsr
 857 01d8 20000000 		.word	.LC3
 858 01dc 38000000 		.word	.LC4
 859 01e0 00000000 		.word	.LANCHOR0
 860 01e4 00000000 		.word	.LANCHOR1
 861 01e8 00000000 		.word	data
 862 01ec 00000000 		.word	.LC0
 863 01f0 0C000000 		.word	.LC1
 864              		.cfi_endproc
 865              	.LFE64:
 866              		.size	main, .-main
 867              		.section	.text.RxWakeUp,"ax",%progbits
 868              		.align	2
 869              		.global	RxWakeUp
 870              		.thumb
 871              		.thumb_func
 872              		.type	RxWakeUp, %function
 873              	RxWakeUp:
 874              	.LFB73:
 546:main.c        ****     }
 547:main.c        **** 
 548:main.c        **** } //end CY_ISR(wakeUpIsr)
 549:main.c        **** 
 550:main.c        **** /*******************************************************************************
 551:main.c        **** * Function Name: wakeUpIsr
 552:main.c        **** ********************************************************************************
 553:main.c        **** *
 554:main.c        **** * Summary:
 555:main.c        **** * Sleep Timer interrupt to wake up PSoC from sleep
 556:main.c        **** *
 557:main.c        **** * Parameters:
 558:main.c        **** *  None.
 559:main.c        **** *
 560:main.c        **** * Return:
 561:main.c        **** *  None.
 562:main.c        **** *
 563:main.c        **** *******************************************************************************/
 564:main.c        **** CY_ISR(RxWakeUp){
 875              		.loc 1 564 0
 876              		.cfi_startproc
 877              		@ args = 0, pretend = 0, frame = 0
 878              		@ frame_needed = 0, uses_anonymous_args = 0
 879 0000 08B5     		push	{r3, lr}
 880              		.cfi_def_cfa_offset 8
 881              		.cfi_offset 3, -8
 882              		.cfi_offset 14, -4
 565:main.c        ****     CyPmRestoreClocks();
 883              		.loc 1 565 0
 884 0002 FFF7FEFF 		bl	CyPmRestoreClocks
 885              	.LVL115:
 566:main.c        ****     UART_Wakeup();
 886              		.loc 1 566 0
 887 0006 FFF7FEFF 		bl	UART_Wakeup
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 29


 888              	.LVL116:
 567:main.c        ****     UART_Start();
 889              		.loc 1 567 0
 890 000a FFF7FEFF 		bl	UART_Start
 891              	.LVL117:
 568:main.c        ****     isr_rx_StartEx(RxIsr);
 892              		.loc 1 568 0
 893 000e 0548     		ldr	r0, .L66
 894 0010 FFF7FEFF 		bl	isr_rx_StartEx
 895              	.LVL118:
 569:main.c        ****     RxWakeUp_ClearPending();
 896              		.loc 1 569 0
 897 0014 FFF7FEFF 		bl	RxWakeUp_ClearPending
 898              	.LVL119:
 570:main.c        ****     RxWakeUp_Disable();
 899              		.loc 1 570 0
 900 0018 FFF7FEFF 		bl	RxWakeUp_Disable
 901              	.LVL120:
 571:main.c        ****     isr_rx_SetPending();
 902              		.loc 1 571 0
 903 001c FFF7FEFF 		bl	isr_rx_SetPending
 904              	.LVL121:
 905 0020 08BD     		pop	{r3, pc}
 906              	.L67:
 907 0022 00BF     		.align	2
 908              	.L66:
 909 0024 00000000 		.word	RxIsr
 910              		.cfi_endproc
 911              	.LFE73:
 912              		.size	RxWakeUp, .-RxWakeUp
 913              		.global	crabsToSend
 914              		.global	errorStatus
 915              		.global	newDataflag
 916              		.comm	data,20,4
 917              		.comm	lineStr,20,4
 918              		.comm	count,2,2
 919              		.data
 920              		.set	.LANCHOR1,. + 0
 921              		.type	crabsToSend, %object
 922              		.size	crabsToSend, 1
 923              	crabsToSend:
 924 0000 01       		.byte	1
 925              		.section	.rodata.str1.4,"aMS",%progbits,1
 926              		.align	2
 927              	.LC0:
 928 0000 43726162 		.ascii	"Crabs: %d\000"
 928      733A2025 
 928      6400
 929 000a 0000     		.space	2
 930              	.LC1:
 931 000c 20202020 		.ascii	"             \000"
 931      20202020 
 931      20202020 
 931      2000
 932 001a 0000     		.space	2
 933              	.LC2:
 934 001c 256400   		.ascii	"%d\000"
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 30


 935 001f 00       		.space	1
 936              	.LC3:
 937 0020 20202020 		.ascii	"                    \000"
 937      20202020 
 937      20202020 
 937      20202020 
 937      20202020 
 938 0035 000000   		.space	3
 939              	.LC4:
 940 0038 48656C6C 		.ascii	"Hello\000"
 940      6F00
 941              		.bss
 942              		.align	2
 943              		.set	.LANCHOR0,. + 0
 944              		.type	bitTime, %object
 945              		.size	bitTime, 4
 946              	bitTime:
 947 0000 00000000 		.space	4
 948              		.type	ParityFlag, %object
 949              		.size	ParityFlag, 4
 950              	ParityFlag:
 951 0004 00000000 		.space	4
 952              		.type	currentByte, %object
 953              		.size	currentByte, 4
 954              	currentByte:
 955 0008 00000000 		.space	4
 956              		.type	errorStatus, %object
 957              		.size	errorStatus, 1
 958              	errorStatus:
 959 000c 00       		.space	1
 960              		.type	newDataflag, %object
 961              		.size	newDataflag, 1
 962              	newDataflag:
 963 000d 00       		.space	1
 964 000e 0000     		.space	2
 965              		.type	sleepCount, %object
 966              		.size	sleepCount, 4
 967              	sleepCount:
 968 0010 00000000 		.space	4
 969              		.type	wakeUpData, %object
 970              		.size	wakeUpData, 4
 971              	wakeUpData:
 972 0014 00000000 		.space	4
 973              		.type	sendDataCount, %object
 974              		.size	sendDataCount, 4
 975              	sendDataCount:
 976 0018 00000000 		.space	4
 977              		.type	maxDataFlag, %object
 978              		.size	maxDataFlag, 4
 979              	maxDataFlag:
 980 001c 00000000 		.space	4
 981              		.text
 982              	.Letext0:
 983              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 984              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 985              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 986              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 31


 987              		.file 6 "Generated_Source\\PSoC5/CyLib.h"
 988              		.file 7 "Generated_Source\\PSoC5/sleepToggle.h"
 989              		.file 8 "Generated_Source\\PSoC5/UART.h"
 990              		.file 9 "Generated_Source\\PSoC5/LCD.h"
 991              		.file 10 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4
 992              		.file 11 "Generated_Source\\PSoC5/isr_rx.h"
 993              		.file 12 "Generated_Source\\PSoC5/SleepTimer.h"
 994              		.file 13 "Generated_Source\\PSoC5/cyPm.h"
 995              		.file 14 "Generated_Source\\PSoC5/checkWatchDogTimer.h"
 996              		.file 15 "Generated_Source\\PSoC5/PWM_Modulator.h"
 997              		.file 16 "Generated_Source\\PSoC5/PWM_Switch_Timer.h"
 998              		.file 17 "Generated_Source\\PSoC5/watchDogCheck.h"
 999              		.file 18 "Generated_Source\\PSoC5/isr_sec.h"
 1000              		.file 19 "Generated_Source\\PSoC5/Sleep_ISR.h"
 1001              		.file 20 "Generated_Source\\PSoC5/HighVoltage.h"
 1002              		.file 21 "Generated_Source\\PSoC5/SignalBase.h"
 1003              		.file 22 "Generated_Source\\PSoC5/RxWakeUp.h"
 1004              		.section	.debug_info,"",%progbits
 1005              	.Ldebug_info0:
 1006 0000 680A0000 		.4byte	0xa68
 1007 0004 0400     		.2byte	0x4
 1008 0006 00000000 		.4byte	.Ldebug_abbrev0
 1009 000a 04       		.byte	0x4
 1010 000b 01       		.uleb128 0x1
 1011 000c 42050000 		.4byte	.LASF99
 1012 0010 0C       		.byte	0xc
 1013 0011 5E040000 		.4byte	.LASF100
 1014 0015 71010000 		.4byte	.LASF101
 1015 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1016 001d 00000000 		.4byte	0
 1017 0021 00000000 		.4byte	.Ldebug_line0
 1018 0025 02       		.uleb128 0x2
 1019 0026 01       		.byte	0x1
 1020 0027 06       		.byte	0x6
 1021 0028 DC020000 		.4byte	.LASF0
 1022 002c 02       		.uleb128 0x2
 1023 002d 01       		.byte	0x1
 1024 002e 08       		.byte	0x8
 1025 002f BB020000 		.4byte	.LASF1
 1026 0033 02       		.uleb128 0x2
 1027 0034 02       		.byte	0x2
 1028 0035 05       		.byte	0x5
 1029 0036 A6000000 		.4byte	.LASF2
 1030 003a 02       		.uleb128 0x2
 1031 003b 02       		.byte	0x2
 1032 003c 07       		.byte	0x7
 1033 003d 91030000 		.4byte	.LASF3
 1034 0041 03       		.uleb128 0x3
 1035 0042 D9040000 		.4byte	.LASF9
 1036 0046 02       		.byte	0x2
 1037 0047 3F       		.byte	0x3f
 1038 0048 4C000000 		.4byte	0x4c
 1039 004c 02       		.uleb128 0x2
 1040 004d 04       		.byte	0x4
 1041 004e 05       		.byte	0x5
 1042 004f C6030000 		.4byte	.LASF4
 1043 0053 02       		.uleb128 0x2
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 32


 1044 0054 04       		.byte	0x4
 1045 0055 07       		.byte	0x7
 1046 0056 53030000 		.4byte	.LASF5
 1047 005a 02       		.uleb128 0x2
 1048 005b 08       		.byte	0x8
 1049 005c 05       		.byte	0x5
 1050 005d FB010000 		.4byte	.LASF6
 1051 0061 02       		.uleb128 0x2
 1052 0062 08       		.byte	0x8
 1053 0063 07       		.byte	0x7
 1054 0064 F2020000 		.4byte	.LASF7
 1055 0068 04       		.uleb128 0x4
 1056 0069 04       		.byte	0x4
 1057 006a 05       		.byte	0x5
 1058 006b 696E7400 		.ascii	"int\000"
 1059 006f 02       		.uleb128 0x2
 1060 0070 04       		.byte	0x4
 1061 0071 07       		.byte	0x7
 1062 0072 1B030000 		.4byte	.LASF8
 1063 0076 03       		.uleb128 0x3
 1064 0077 DA030000 		.4byte	.LASF10
 1065 007b 03       		.byte	0x3
 1066 007c 2C       		.byte	0x2c
 1067 007d 41000000 		.4byte	0x41
 1068 0081 05       		.uleb128 0x5
 1069 0082 63010000 		.4byte	.LASF11
 1070 0086 04       		.byte	0x4
 1071 0087 9201     		.2byte	0x192
 1072 0089 2C000000 		.4byte	0x2c
 1073 008d 05       		.uleb128 0x5
 1074 008e 4D010000 		.4byte	.LASF12
 1075 0092 04       		.byte	0x4
 1076 0093 9301     		.2byte	0x193
 1077 0095 3A000000 		.4byte	0x3a
 1078 0099 02       		.uleb128 0x2
 1079 009a 04       		.byte	0x4
 1080 009b 04       		.byte	0x4
 1081 009c DF010000 		.4byte	.LASF13
 1082 00a0 02       		.uleb128 0x2
 1083 00a1 08       		.byte	0x8
 1084 00a2 04       		.byte	0x4
 1085 00a3 94040000 		.4byte	.LASF14
 1086 00a7 05       		.uleb128 0x5
 1087 00a8 11010000 		.4byte	.LASF15
 1088 00ac 04       		.byte	0x4
 1089 00ad A301     		.2byte	0x1a3
 1090 00af B3000000 		.4byte	0xb3
 1091 00b3 02       		.uleb128 0x2
 1092 00b4 01       		.byte	0x1
 1093 00b5 08       		.byte	0x8
 1094 00b6 C1030000 		.4byte	.LASF16
 1095 00ba 05       		.uleb128 0x5
 1096 00bb 65040000 		.4byte	.LASF17
 1097 00bf 04       		.byte	0x4
 1098 00c0 3C02     		.2byte	0x23c
 1099 00c2 C6000000 		.4byte	0xc6
 1100 00c6 06       		.uleb128 0x6
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 33


 1101 00c7 81000000 		.4byte	0x81
 1102 00cb 02       		.uleb128 0x2
 1103 00cc 08       		.byte	0x8
 1104 00cd 04       		.byte	0x4
 1105 00ce A6020000 		.4byte	.LASF18
 1106 00d2 02       		.uleb128 0x2
 1107 00d3 04       		.byte	0x4
 1108 00d4 07       		.byte	0x7
 1109 00d5 C4000000 		.4byte	.LASF19
 1110 00d9 07       		.uleb128 0x7
 1111 00da 8B000000 		.4byte	.LASF102
 1112 00de 01       		.byte	0x1
 1113 00df 2C000000 		.4byte	0x2c
 1114 00e3 01       		.byte	0x1
 1115 00e4 54       		.byte	0x54
 1116 00e5 02010000 		.4byte	0x102
 1117 00e9 08       		.uleb128 0x8
 1118 00ea D1010000 		.4byte	.LASF20
 1119 00ee 00       		.byte	0
 1120 00ef 08       		.uleb128 0x8
 1121 00f0 6E020000 		.4byte	.LASF21
 1122 00f4 01       		.byte	0x1
 1123 00f5 08       		.uleb128 0x8
 1124 00f6 AF030000 		.4byte	.LASF22
 1125 00fa 02       		.byte	0x2
 1126 00fb 08       		.uleb128 0x8
 1127 00fc 86040000 		.4byte	.LASF23
 1128 0100 03       		.byte	0x3
 1129 0101 00       		.byte	0
 1130 0102 09       		.uleb128 0x9
 1131 0103 F5040000 		.4byte	.LASF103
 1132 0107 01       		.byte	0x1
 1133 0108 A601     		.2byte	0x1a6
 1134 010a 00000000 		.4byte	.LFB69
 1135 010e 38000000 		.4byte	.LFE69-.LFB69
 1136 0112 01       		.uleb128 0x1
 1137 0113 9C       		.byte	0x9c
 1138 0114 0A       		.uleb128 0xa
 1139 0115 C3010000 		.4byte	.LASF24
 1140 0119 01       		.byte	0x1
 1141 011a 0602     		.2byte	0x206
 1142 011c 00000000 		.4byte	.LFB71
 1143 0120 08000000 		.4byte	.LFE71-.LFB71
 1144 0124 01       		.uleb128 0x1
 1145 0125 9C       		.byte	0x9c
 1146 0126 34010000 		.4byte	0x134
 1147 012a 0B       		.uleb128 0xb
 1148 012b 06000000 		.4byte	.LVL0
 1149 012f 7C080000 		.4byte	0x87c
 1150 0133 00       		.byte	0
 1151 0134 0A       		.uleb128 0xa
 1152 0135 79030000 		.4byte	.LASF25
 1153 0139 01       		.byte	0x1
 1154 013a C401     		.2byte	0x1c4
 1155 013c 00000000 		.4byte	.LFB70
 1156 0140 B8000000 		.4byte	.LFE70-.LFB70
 1157 0144 01       		.uleb128 0x1
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 34


 1158 0145 9C       		.byte	0x9c
 1159 0146 41020000 		.4byte	0x241
 1160 014a 0C       		.uleb128 0xc
 1161 014b B2020000 		.4byte	.LASF28
 1162 014f 01       		.byte	0x1
 1163 0150 C801     		.2byte	0x1c8
 1164 0152 81000000 		.4byte	0x81
 1165 0156 00000000 		.4byte	.LLST0
 1166 015a 0D       		.uleb128 0xd
 1167 015b 08000000 		.4byte	.LVL1
 1168 015f 87080000 		.4byte	0x887
 1169 0163 6D010000 		.4byte	0x16d
 1170 0167 0E       		.uleb128 0xe
 1171 0168 01       		.uleb128 0x1
 1172 0169 50       		.byte	0x50
 1173 016a 01       		.uleb128 0x1
 1174 016b 31       		.byte	0x31
 1175 016c 00       		.byte	0
 1176 016d 0B       		.uleb128 0xb
 1177 016e 34000000 		.4byte	.LVL4
 1178 0172 92080000 		.4byte	0x892
 1179 0176 0D       		.uleb128 0xd
 1180 0177 4A000000 		.4byte	.LVL5
 1181 017b 9D080000 		.4byte	0x89d
 1182 017f 8E010000 		.4byte	0x18e
 1183 0183 0E       		.uleb128 0xe
 1184 0184 01       		.uleb128 0x1
 1185 0185 50       		.byte	0x50
 1186 0186 01       		.uleb128 0x1
 1187 0187 30       		.byte	0x30
 1188 0188 0E       		.uleb128 0xe
 1189 0189 01       		.uleb128 0x1
 1190 018a 51       		.byte	0x51
 1191 018b 01       		.uleb128 0x1
 1192 018c 30       		.byte	0x30
 1193 018d 00       		.byte	0
 1194 018e 0D       		.uleb128 0xd
 1195 018f 58000000 		.4byte	.LVL6
 1196 0193 A8080000 		.4byte	0x8a8
 1197 0197 AB010000 		.4byte	0x1ab
 1198 019b 0E       		.uleb128 0xe
 1199 019c 01       		.uleb128 0x1
 1200 019d 50       		.byte	0x50
 1201 019e 02       		.uleb128 0x2
 1202 019f 75       		.byte	0x75
 1203 01a0 00       		.sleb128 0
 1204 01a1 0E       		.uleb128 0xe
 1205 01a2 01       		.uleb128 0x1
 1206 01a3 51       		.byte	0x51
 1207 01a4 05       		.uleb128 0x5
 1208 01a5 03       		.byte	0x3
 1209 01a6 00000000 		.4byte	.LC0
 1210 01aa 00       		.byte	0
 1211 01ab 0D       		.uleb128 0xd
 1212 01ac 5E000000 		.4byte	.LVL7
 1213 01b0 B3080000 		.4byte	0x8b3
 1214 01b4 C2010000 		.4byte	0x1c2
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 35


 1215 01b8 0E       		.uleb128 0xe
 1216 01b9 01       		.uleb128 0x1
 1217 01ba 50       		.byte	0x50
 1218 01bb 05       		.uleb128 0x5
 1219 01bc 03       		.byte	0x3
 1220 01bd 0C000000 		.4byte	.LC1
 1221 01c1 00       		.byte	0
 1222 01c2 0D       		.uleb128 0xd
 1223 01c3 66000000 		.4byte	.LVL8
 1224 01c7 9D080000 		.4byte	0x89d
 1225 01cb DA010000 		.4byte	0x1da
 1226 01cf 0E       		.uleb128 0xe
 1227 01d0 01       		.uleb128 0x1
 1228 01d1 50       		.byte	0x50
 1229 01d2 01       		.uleb128 0x1
 1230 01d3 30       		.byte	0x30
 1231 01d4 0E       		.uleb128 0xe
 1232 01d5 01       		.uleb128 0x1
 1233 01d6 51       		.byte	0x51
 1234 01d7 01       		.uleb128 0x1
 1235 01d8 30       		.byte	0x30
 1236 01d9 00       		.byte	0
 1237 01da 0D       		.uleb128 0xd
 1238 01db 6C000000 		.4byte	.LVL9
 1239 01df B3080000 		.4byte	0x8b3
 1240 01e3 EE010000 		.4byte	0x1ee
 1241 01e7 0E       		.uleb128 0xe
 1242 01e8 01       		.uleb128 0x1
 1243 01e9 50       		.byte	0x50
 1244 01ea 02       		.uleb128 0x2
 1245 01eb 75       		.byte	0x75
 1246 01ec 00       		.sleb128 0
 1247 01ed 00       		.byte	0
 1248 01ee 0B       		.uleb128 0xb
 1249 01ef 72000000 		.4byte	.LVL10
 1250 01f3 BE080000 		.4byte	0x8be
 1251 01f7 0D       		.uleb128 0xd
 1252 01f8 80000000 		.4byte	.LVL11
 1253 01fc A8080000 		.4byte	0x8a8
 1254 0200 14020000 		.4byte	0x214
 1255 0204 0E       		.uleb128 0xe
 1256 0205 01       		.uleb128 0x1
 1257 0206 50       		.byte	0x50
 1258 0207 02       		.uleb128 0x2
 1259 0208 75       		.byte	0x75
 1260 0209 00       		.sleb128 0
 1261 020a 0E       		.uleb128 0xe
 1262 020b 01       		.uleb128 0x1
 1263 020c 51       		.byte	0x51
 1264 020d 05       		.uleb128 0x5
 1265 020e 03       		.byte	0x3
 1266 020f 1C000000 		.4byte	.LC2
 1267 0213 00       		.byte	0
 1268 0214 0D       		.uleb128 0xd
 1269 0215 86000000 		.4byte	.LVL12
 1270 0219 B3080000 		.4byte	0x8b3
 1271 021d 28020000 		.4byte	0x228
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 36


 1272 0221 0E       		.uleb128 0xe
 1273 0222 01       		.uleb128 0x1
 1274 0223 50       		.byte	0x50
 1275 0224 02       		.uleb128 0x2
 1276 0225 75       		.byte	0x75
 1277 0226 00       		.sleb128 0
 1278 0227 00       		.byte	0
 1279 0228 0B       		.uleb128 0xb
 1280 0229 8E000000 		.4byte	.LVL13
 1281 022d C9080000 		.4byte	0x8c9
 1282 0231 0F       		.uleb128 0xf
 1283 0232 94000000 		.4byte	.LVL14
 1284 0236 87080000 		.4byte	0x887
 1285 023a 0E       		.uleb128 0xe
 1286 023b 01       		.uleb128 0x1
 1287 023c 50       		.byte	0x50
 1288 023d 01       		.uleb128 0x1
 1289 023e 30       		.byte	0x30
 1290 023f 00       		.byte	0
 1291 0240 00       		.byte	0
 1292 0241 0A       		.uleb128 0xa
 1293 0242 BA000000 		.4byte	.LASF26
 1294 0246 01       		.byte	0x1
 1295 0247 1B02     		.2byte	0x21b
 1296 0249 00000000 		.4byte	.LFB72
 1297 024d 28000000 		.4byte	.LFE72-.LFB72
 1298 0251 01       		.uleb128 0x1
 1299 0252 9C       		.byte	0x9c
 1300 0253 6A020000 		.4byte	0x26a
 1301 0257 0B       		.uleb128 0xb
 1302 0258 06000000 		.4byte	.LVL15
 1303 025c D4080000 		.4byte	0x8d4
 1304 0260 0B       		.uleb128 0xb
 1305 0261 0A000000 		.4byte	.LVL16
 1306 0265 7C080000 		.4byte	0x87c
 1307 0269 00       		.byte	0
 1308 026a 10       		.uleb128 0x10
 1309 026b 17010000 		.4byte	.LASF30
 1310 026f 01       		.byte	0x1
 1311 0270 3301     		.2byte	0x133
 1312 0272 68000000 		.4byte	0x68
 1313 0276 00000000 		.4byte	.LFB65
 1314 027a 42000000 		.4byte	.LFE65-.LFB65
 1315 027e 01       		.uleb128 0x1
 1316 027f 9C       		.byte	0x9c
 1317 0280 B2020000 		.4byte	0x2b2
 1318 0284 11       		.uleb128 0x11
 1319 0285 26010000 		.4byte	.LASF27
 1320 0289 01       		.byte	0x1
 1321 028a 3301     		.2byte	0x133
 1322 028c 6F000000 		.4byte	0x6f
 1323 0290 13000000 		.4byte	.LLST1
 1324 0294 12       		.uleb128 0x12
 1325 0295 625400   		.ascii	"bT\000"
 1326 0298 01       		.byte	0x1
 1327 0299 3301     		.2byte	0x133
 1328 029b 68000000 		.4byte	0x68
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 37


 1329 029f 01       		.uleb128 0x1
 1330 02a0 51       		.byte	0x51
 1331 02a1 0C       		.uleb128 0xc
 1332 02a2 27020000 		.4byte	.LASF29
 1333 02a6 01       		.byte	0x1
 1334 02a7 3501     		.2byte	0x135
 1335 02a9 68000000 		.4byte	0x68
 1336 02ad 34000000 		.4byte	.LLST2
 1337 02b1 00       		.byte	0
 1338 02b2 10       		.uleb128 0x10
 1339 02b3 C9020000 		.4byte	.LASF31
 1340 02b7 01       		.byte	0x1
 1341 02b8 5D01     		.2byte	0x15d
 1342 02ba 68000000 		.4byte	0x68
 1343 02be 00000000 		.4byte	.LFB66
 1344 02c2 20000000 		.4byte	.LFE66-.LFB66
 1345 02c6 01       		.uleb128 0x1
 1346 02c7 9C       		.byte	0x9c
 1347 02c8 F7020000 		.4byte	0x2f7
 1348 02cc 13       		.uleb128 0x13
 1349 02cd F7030000 		.4byte	.LASF32
 1350 02d1 01       		.byte	0x1
 1351 02d2 5F01     		.2byte	0x15f
 1352 02d4 81000000 		.4byte	0x81
 1353 02d8 01       		.uleb128 0x1
 1354 02d9 52       		.byte	0x52
 1355 02da 14       		.uleb128 0x14
 1356 02db 6900     		.ascii	"i\000"
 1357 02dd 01       		.byte	0x1
 1358 02de 6001     		.2byte	0x160
 1359 02e0 68000000 		.4byte	0x68
 1360 02e4 94000000 		.4byte	.LLST3
 1361 02e8 13       		.uleb128 0x13
 1362 02e9 37010000 		.4byte	.LASF33
 1363 02ed 01       		.byte	0x1
 1364 02ee 6101     		.2byte	0x161
 1365 02f0 68000000 		.4byte	0x68
 1366 02f4 01       		.uleb128 0x1
 1367 02f5 50       		.byte	0x50
 1368 02f6 00       		.byte	0
 1369 02f7 0A       		.uleb128 0xa
 1370 02f8 30010000 		.4byte	.LASF34
 1371 02fc 01       		.byte	0x1
 1372 02fd 7101     		.2byte	0x171
 1373 02ff 00000000 		.4byte	.LFB67
 1374 0303 1C000000 		.4byte	.LFE67-.LFB67
 1375 0307 01       		.uleb128 0x1
 1376 0308 9C       		.byte	0x9c
 1377 0309 44030000 		.4byte	0x344
 1378 030d 0B       		.uleb128 0xb
 1379 030e 06000000 		.4byte	.LVL40
 1380 0312 DF080000 		.4byte	0x8df
 1381 0316 0B       		.uleb128 0xb
 1382 0317 0A000000 		.4byte	.LVL41
 1383 031b EA080000 		.4byte	0x8ea
 1384 031f 0B       		.uleb128 0xb
 1385 0320 0E000000 		.4byte	.LVL42
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 38


 1386 0324 F5080000 		.4byte	0x8f5
 1387 0328 0B       		.uleb128 0xb
 1388 0329 12000000 		.4byte	.LVL43
 1389 032d 00090000 		.4byte	0x900
 1390 0331 0B       		.uleb128 0xb
 1391 0332 16000000 		.4byte	.LVL44
 1392 0336 0B090000 		.4byte	0x90b
 1393 033a 0B       		.uleb128 0xb
 1394 033b 1A000000 		.4byte	.LVL45
 1395 033f 16090000 		.4byte	0x916
 1396 0343 00       		.byte	0
 1397 0344 0A       		.uleb128 0xa
 1398 0345 B0000000 		.4byte	.LASF35
 1399 0349 01       		.byte	0x1
 1400 034a 8601     		.2byte	0x186
 1401 034c 00000000 		.4byte	.LFB68
 1402 0350 28000000 		.4byte	.LFE68-.LFB68
 1403 0354 01       		.uleb128 0x1
 1404 0355 9C       		.byte	0x9c
 1405 0356 AC030000 		.4byte	0x3ac
 1406 035a 0B       		.uleb128 0xb
 1407 035b 06000000 		.4byte	.LVL46
 1408 035f 21090000 		.4byte	0x921
 1409 0363 0B       		.uleb128 0xb
 1410 0364 0A000000 		.4byte	.LVL47
 1411 0368 2C090000 		.4byte	0x92c
 1412 036c 0B       		.uleb128 0xb
 1413 036d 0E000000 		.4byte	.LVL48
 1414 0371 37090000 		.4byte	0x937
 1415 0375 0B       		.uleb128 0xb
 1416 0376 12000000 		.4byte	.LVL49
 1417 037a 42090000 		.4byte	0x942
 1418 037e 0B       		.uleb128 0xb
 1419 037f 16000000 		.4byte	.LVL50
 1420 0383 4D090000 		.4byte	0x94d
 1421 0387 0B       		.uleb128 0xb
 1422 0388 1A000000 		.4byte	.LVL51
 1423 038c 58090000 		.4byte	0x958
 1424 0390 0B       		.uleb128 0xb
 1425 0391 1E000000 		.4byte	.LVL52
 1426 0395 63090000 		.4byte	0x963
 1427 0399 0B       		.uleb128 0xb
 1428 039a 22000000 		.4byte	.LVL53
 1429 039e C9080000 		.4byte	0x8c9
 1430 03a2 0B       		.uleb128 0xb
 1431 03a3 26000000 		.4byte	.LVL54
 1432 03a7 6E090000 		.4byte	0x96e
 1433 03ab 00       		.byte	0
 1434 03ac 15       		.uleb128 0x15
 1435 03ad 1C010000 		.4byte	.LASF36
 1436 03b1 01       		.byte	0x1
 1437 03b2 7F       		.byte	0x7f
 1438 03b3 68000000 		.4byte	0x68
 1439 03b7 00000000 		.4byte	.LFB64
 1440 03bb F4010000 		.4byte	.LFE64-.LFB64
 1441 03bf 01       		.uleb128 0x1
 1442 03c0 9C       		.byte	0x9c
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 39


 1443 03c1 F9060000 		.4byte	0x6f9
 1444 03c5 16       		.uleb128 0x16
 1445 03c6 27020000 		.4byte	.LASF29
 1446 03ca 01       		.byte	0x1
 1447 03cb 82       		.byte	0x82
 1448 03cc 68000000 		.4byte	0x68
 1449 03d0 B3000000 		.4byte	.LLST4
 1450 03d4 16       		.uleb128 0x16
 1451 03d5 E8020000 		.4byte	.LASF37
 1452 03d9 01       		.byte	0x1
 1453 03da 83       		.byte	0x83
 1454 03db 68000000 		.4byte	0x68
 1455 03df 2A010000 		.4byte	.LLST5
 1456 03e3 0D       		.uleb128 0xd
 1457 03e4 0C000000 		.4byte	.LVL56
 1458 03e8 79090000 		.4byte	0x979
 1459 03ec FB030000 		.4byte	0x3fb
 1460 03f0 0E       		.uleb128 0xe
 1461 03f1 01       		.uleb128 0x1
 1462 03f2 50       		.byte	0x50
 1463 03f3 01       		.uleb128 0x1
 1464 03f4 33       		.byte	0x33
 1465 03f5 0E       		.uleb128 0xe
 1466 03f6 01       		.uleb128 0x1
 1467 03f7 51       		.byte	0x51
 1468 03f8 01       		.uleb128 0x1
 1469 03f9 30       		.byte	0x30
 1470 03fa 00       		.byte	0
 1471 03fb 0B       		.uleb128 0xb
 1472 03fc 10000000 		.4byte	.LVL57
 1473 0400 84090000 		.4byte	0x984
 1474 0404 0D       		.uleb128 0xd
 1475 0405 16000000 		.4byte	.LVL58
 1476 0409 8F090000 		.4byte	0x98f
 1477 040d 1B040000 		.4byte	0x41b
 1478 0411 0E       		.uleb128 0xe
 1479 0412 01       		.uleb128 0x1
 1480 0413 50       		.byte	0x50
 1481 0414 05       		.uleb128 0x5
 1482 0415 03       		.byte	0x3
 1483 0416 00000000 		.4byte	watchDogCheck
 1484 041a 00       		.byte	0
 1485 041b 0B       		.uleb128 0xb
 1486 041c 1A000000 		.4byte	.LVL59
 1487 0420 9A090000 		.4byte	0x99a
 1488 0424 0B       		.uleb128 0xb
 1489 0425 1E000000 		.4byte	.LVL60
 1490 0429 A5090000 		.4byte	0x9a5
 1491 042d 0B       		.uleb128 0xb
 1492 042e 22000000 		.4byte	.LVL61
 1493 0432 B0090000 		.4byte	0x9b0
 1494 0436 0B       		.uleb128 0xb
 1495 0437 26000000 		.4byte	.LVL62
 1496 043b 16090000 		.4byte	0x916
 1497 043f 0D       		.uleb128 0xd
 1498 0440 2C000000 		.4byte	.LVL63
 1499 0444 BB090000 		.4byte	0x9bb
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 40


 1500 0448 56040000 		.4byte	0x456
 1501 044c 0E       		.uleb128 0xe
 1502 044d 01       		.uleb128 0x1
 1503 044e 50       		.byte	0x50
 1504 044f 05       		.uleb128 0x5
 1505 0450 03       		.byte	0x3
 1506 0451 00000000 		.4byte	isr_sec
 1507 0455 00       		.byte	0
 1508 0456 0D       		.uleb128 0xd
 1509 0457 32000000 		.4byte	.LVL64
 1510 045b C6090000 		.4byte	0x9c6
 1511 045f 6D040000 		.4byte	0x46d
 1512 0463 0E       		.uleb128 0xe
 1513 0464 01       		.uleb128 0x1
 1514 0465 50       		.byte	0x50
 1515 0466 05       		.uleb128 0x5
 1516 0467 03       		.byte	0x3
 1517 0468 00000000 		.4byte	wakeUpIsr
 1518 046c 00       		.byte	0
 1519 046d 0D       		.uleb128 0xd
 1520 046e 3A000000 		.4byte	.LVL65
 1521 0472 9D080000 		.4byte	0x89d
 1522 0476 85040000 		.4byte	0x485
 1523 047a 0E       		.uleb128 0xe
 1524 047b 01       		.uleb128 0x1
 1525 047c 50       		.byte	0x50
 1526 047d 01       		.uleb128 0x1
 1527 047e 30       		.byte	0x30
 1528 047f 0E       		.uleb128 0xe
 1529 0480 01       		.uleb128 0x1
 1530 0481 51       		.byte	0x51
 1531 0482 01       		.uleb128 0x1
 1532 0483 30       		.byte	0x30
 1533 0484 00       		.byte	0
 1534 0485 0D       		.uleb128 0xd
 1535 0486 40000000 		.4byte	.LVL66
 1536 048a B3080000 		.4byte	0x8b3
 1537 048e 9C040000 		.4byte	0x49c
 1538 0492 0E       		.uleb128 0xe
 1539 0493 01       		.uleb128 0x1
 1540 0494 50       		.byte	0x50
 1541 0495 05       		.uleb128 0x5
 1542 0496 03       		.byte	0x3
 1543 0497 20000000 		.4byte	.LC3
 1544 049b 00       		.byte	0
 1545 049c 0D       		.uleb128 0xd
 1546 049d 48000000 		.4byte	.LVL67
 1547 04a1 9D080000 		.4byte	0x89d
 1548 04a5 B4040000 		.4byte	0x4b4
 1549 04a9 0E       		.uleb128 0xe
 1550 04aa 01       		.uleb128 0x1
 1551 04ab 50       		.byte	0x50
 1552 04ac 01       		.uleb128 0x1
 1553 04ad 30       		.byte	0x30
 1554 04ae 0E       		.uleb128 0xe
 1555 04af 01       		.uleb128 0x1
 1556 04b0 51       		.byte	0x51
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 41


 1557 04b1 01       		.uleb128 0x1
 1558 04b2 30       		.byte	0x30
 1559 04b3 00       		.byte	0
 1560 04b4 0D       		.uleb128 0xd
 1561 04b5 4E000000 		.4byte	.LVL68
 1562 04b9 B3080000 		.4byte	0x8b3
 1563 04bd CB040000 		.4byte	0x4cb
 1564 04c1 0E       		.uleb128 0xe
 1565 04c2 01       		.uleb128 0x1
 1566 04c3 50       		.byte	0x50
 1567 04c4 05       		.uleb128 0x5
 1568 04c5 03       		.byte	0x3
 1569 04c6 38000000 		.4byte	.LC4
 1570 04ca 00       		.byte	0
 1571 04cb 0D       		.uleb128 0xd
 1572 04cc 56000000 		.4byte	.LVL69
 1573 04d0 D1090000 		.4byte	0x9d1
 1574 04d4 E0040000 		.4byte	0x4e0
 1575 04d8 0E       		.uleb128 0xe
 1576 04d9 01       		.uleb128 0x1
 1577 04da 50       		.byte	0x50
 1578 04db 03       		.uleb128 0x3
 1579 04dc 0A       		.byte	0xa
 1580 04dd 8813     		.2byte	0x1388
 1581 04df 00       		.byte	0
 1582 04e0 0D       		.uleb128 0xd
 1583 04e1 80000000 		.4byte	.LVL71
 1584 04e5 6A020000 		.4byte	0x26a
 1585 04e9 F4040000 		.4byte	0x4f4
 1586 04ed 0E       		.uleb128 0xe
 1587 04ee 01       		.uleb128 0x1
 1588 04ef 50       		.byte	0x50
 1589 04f0 02       		.uleb128 0x2
 1590 04f1 08       		.byte	0x8
 1591 04f2 FF       		.byte	0xff
 1592 04f3 00       		.byte	0
 1593 04f4 0B       		.uleb128 0xb
 1594 04f5 90000000 		.4byte	.LVL74
 1595 04f9 6A020000 		.4byte	0x26a
 1596 04fd 0B       		.uleb128 0xb
 1597 04fe 9E000000 		.4byte	.LVL77
 1598 0502 B2020000 		.4byte	0x2b2
 1599 0506 0D       		.uleb128 0xd
 1600 0507 AC000000 		.4byte	.LVL80
 1601 050b 6A020000 		.4byte	0x26a
 1602 050f 19050000 		.4byte	0x519
 1603 0513 0E       		.uleb128 0xe
 1604 0514 01       		.uleb128 0x1
 1605 0515 50       		.byte	0x50
 1606 0516 01       		.uleb128 0x1
 1607 0517 31       		.byte	0x31
 1608 0518 00       		.byte	0
 1609 0519 0D       		.uleb128 0xd
 1610 051a E4000000 		.4byte	.LVL86
 1611 051e 9D080000 		.4byte	0x89d
 1612 0522 31050000 		.4byte	0x531
 1613 0526 0E       		.uleb128 0xe
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 42


 1614 0527 01       		.uleb128 0x1
 1615 0528 50       		.byte	0x50
 1616 0529 01       		.uleb128 0x1
 1617 052a 30       		.byte	0x30
 1618 052b 0E       		.uleb128 0xe
 1619 052c 01       		.uleb128 0x1
 1620 052d 51       		.byte	0x51
 1621 052e 01       		.uleb128 0x1
 1622 052f 30       		.byte	0x30
 1623 0530 00       		.byte	0
 1624 0531 0D       		.uleb128 0xd
 1625 0532 F2000000 		.4byte	.LVL87
 1626 0536 A8080000 		.4byte	0x8a8
 1627 053a 4E050000 		.4byte	0x54e
 1628 053e 0E       		.uleb128 0xe
 1629 053f 01       		.uleb128 0x1
 1630 0540 50       		.byte	0x50
 1631 0541 02       		.uleb128 0x2
 1632 0542 76       		.byte	0x76
 1633 0543 00       		.sleb128 0
 1634 0544 0E       		.uleb128 0xe
 1635 0545 01       		.uleb128 0x1
 1636 0546 51       		.byte	0x51
 1637 0547 05       		.uleb128 0x5
 1638 0548 03       		.byte	0x3
 1639 0549 00000000 		.4byte	.LC0
 1640 054d 00       		.byte	0
 1641 054e 0D       		.uleb128 0xd
 1642 054f F8000000 		.4byte	.LVL88
 1643 0553 B3080000 		.4byte	0x8b3
 1644 0557 65050000 		.4byte	0x565
 1645 055b 0E       		.uleb128 0xe
 1646 055c 01       		.uleb128 0x1
 1647 055d 50       		.byte	0x50
 1648 055e 05       		.uleb128 0x5
 1649 055f 03       		.byte	0x3
 1650 0560 0C000000 		.4byte	.LC1
 1651 0564 00       		.byte	0
 1652 0565 0D       		.uleb128 0xd
 1653 0566 00010000 		.4byte	.LVL89
 1654 056a 9D080000 		.4byte	0x89d
 1655 056e 7D050000 		.4byte	0x57d
 1656 0572 0E       		.uleb128 0xe
 1657 0573 01       		.uleb128 0x1
 1658 0574 50       		.byte	0x50
 1659 0575 01       		.uleb128 0x1
 1660 0576 30       		.byte	0x30
 1661 0577 0E       		.uleb128 0xe
 1662 0578 01       		.uleb128 0x1
 1663 0579 51       		.byte	0x51
 1664 057a 01       		.uleb128 0x1
 1665 057b 30       		.byte	0x30
 1666 057c 00       		.byte	0
 1667 057d 0D       		.uleb128 0xd
 1668 057e 06010000 		.4byte	.LVL90
 1669 0582 B3080000 		.4byte	0x8b3
 1670 0586 91050000 		.4byte	0x591
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 43


 1671 058a 0E       		.uleb128 0xe
 1672 058b 01       		.uleb128 0x1
 1673 058c 50       		.byte	0x50
 1674 058d 02       		.uleb128 0x2
 1675 058e 76       		.byte	0x76
 1676 058f 00       		.sleb128 0
 1677 0590 00       		.byte	0
 1678 0591 0B       		.uleb128 0xb
 1679 0592 0A010000 		.4byte	.LVL91
 1680 0596 DC090000 		.4byte	0x9dc
 1681 059a 0B       		.uleb128 0xb
 1682 059b 0E010000 		.4byte	.LVL92
 1683 059f E7090000 		.4byte	0x9e7
 1684 05a3 0D       		.uleb128 0xd
 1685 05a4 14010000 		.4byte	.LVL93
 1686 05a8 F2090000 		.4byte	0x9f2
 1687 05ac B6050000 		.4byte	0x5b6
 1688 05b0 0E       		.uleb128 0xe
 1689 05b1 01       		.uleb128 0x1
 1690 05b2 50       		.byte	0x50
 1691 05b3 01       		.uleb128 0x1
 1692 05b4 30       		.byte	0x30
 1693 05b5 00       		.byte	0
 1694 05b6 0D       		.uleb128 0xd
 1695 05b7 1A010000 		.4byte	.LVL94
 1696 05bb D1090000 		.4byte	0x9d1
 1697 05bf C9050000 		.4byte	0x5c9
 1698 05c3 0E       		.uleb128 0xe
 1699 05c4 01       		.uleb128 0x1
 1700 05c5 50       		.byte	0x50
 1701 05c6 01       		.uleb128 0x1
 1702 05c7 44       		.byte	0x44
 1703 05c8 00       		.byte	0
 1704 05c9 0D       		.uleb128 0xd
 1705 05ca 20010000 		.4byte	.LVL95
 1706 05ce FD090000 		.4byte	0x9fd
 1707 05d2 DC050000 		.4byte	0x5dc
 1708 05d6 0E       		.uleb128 0xe
 1709 05d7 01       		.uleb128 0x1
 1710 05d8 50       		.byte	0x50
 1711 05d9 01       		.uleb128 0x1
 1712 05da 30       		.byte	0x30
 1713 05db 00       		.byte	0
 1714 05dc 0B       		.uleb128 0xb
 1715 05dd 32010000 		.4byte	.LVL96
 1716 05e1 080A0000 		.4byte	0xa08
 1717 05e5 0B       		.uleb128 0xb
 1718 05e6 36010000 		.4byte	.LVL97
 1719 05ea 44030000 		.4byte	0x344
 1720 05ee 0D       		.uleb128 0xd
 1721 05ef 40010000 		.4byte	.LVL98
 1722 05f3 130A0000 		.4byte	0xa13
 1723 05f7 09060000 		.4byte	0x609
 1724 05fb 0E       		.uleb128 0xe
 1725 05fc 01       		.uleb128 0x1
 1726 05fd 50       		.byte	0x50
 1727 05fe 02       		.uleb128 0x2
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 44


 1728 05ff 76       		.byte	0x76
 1729 0600 00       		.sleb128 0
 1730 0601 0E       		.uleb128 0xe
 1731 0602 01       		.uleb128 0x1
 1732 0603 51       		.byte	0x51
 1733 0604 03       		.uleb128 0x3
 1734 0605 0A       		.byte	0xa
 1735 0606 0008     		.2byte	0x800
 1736 0608 00       		.byte	0
 1737 0609 0B       		.uleb128 0xb
 1738 060a 4E010000 		.4byte	.LVL99
 1739 060e 7C080000 		.4byte	0x87c
 1740 0612 0D       		.uleb128 0xd
 1741 0613 58010000 		.4byte	.LVL100
 1742 0617 130A0000 		.4byte	0xa13
 1743 061b 2C060000 		.4byte	0x62c
 1744 061f 0E       		.uleb128 0xe
 1745 0620 01       		.uleb128 0x1
 1746 0621 50       		.byte	0x50
 1747 0622 01       		.uleb128 0x1
 1748 0623 30       		.byte	0x30
 1749 0624 0E       		.uleb128 0xe
 1750 0625 01       		.uleb128 0x1
 1751 0626 51       		.byte	0x51
 1752 0627 03       		.uleb128 0x3
 1753 0628 0A       		.byte	0xa
 1754 0629 0008     		.2byte	0x800
 1755 062b 00       		.byte	0
 1756 062c 0B       		.uleb128 0xb
 1757 062d 6C010000 		.4byte	.LVL101
 1758 0631 1E0A0000 		.4byte	0xa1e
 1759 0635 0B       		.uleb128 0xb
 1760 0636 70010000 		.4byte	.LVL102
 1761 063a F7020000 		.4byte	0x2f7
 1762 063e 0D       		.uleb128 0xd
 1763 063f 7A010000 		.4byte	.LVL103
 1764 0643 D1090000 		.4byte	0x9d1
 1765 0647 53060000 		.4byte	0x653
 1766 064b 0E       		.uleb128 0xe
 1767 064c 01       		.uleb128 0x1
 1768 064d 50       		.byte	0x50
 1769 064e 03       		.uleb128 0x3
 1770 064f 0A       		.byte	0xa
 1771 0650 E803     		.2byte	0x3e8
 1772 0652 00       		.byte	0
 1773 0653 0D       		.uleb128 0xd
 1774 0654 80010000 		.4byte	.LVL104
 1775 0658 F2090000 		.4byte	0x9f2
 1776 065c 66060000 		.4byte	0x666
 1777 0660 0E       		.uleb128 0xe
 1778 0661 01       		.uleb128 0x1
 1779 0662 50       		.byte	0x50
 1780 0663 01       		.uleb128 0x1
 1781 0664 31       		.byte	0x31
 1782 0665 00       		.byte	0
 1783 0666 0D       		.uleb128 0xd
 1784 0667 86010000 		.4byte	.LVL105
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 45


 1785 066b D1090000 		.4byte	0x9d1
 1786 066f 79060000 		.4byte	0x679
 1787 0673 0E       		.uleb128 0xe
 1788 0674 01       		.uleb128 0x1
 1789 0675 50       		.byte	0x50
 1790 0676 01       		.uleb128 0x1
 1791 0677 44       		.byte	0x44
 1792 0678 00       		.byte	0
 1793 0679 0D       		.uleb128 0xd
 1794 067a 8C010000 		.4byte	.LVL106
 1795 067e FD090000 		.4byte	0x9fd
 1796 0682 8C060000 		.4byte	0x68c
 1797 0686 0E       		.uleb128 0xe
 1798 0687 01       		.uleb128 0x1
 1799 0688 50       		.byte	0x50
 1800 0689 01       		.uleb128 0x1
 1801 068a 31       		.byte	0x31
 1802 068b 00       		.byte	0
 1803 068c 0B       		.uleb128 0xb
 1804 068d 96010000 		.4byte	.LVL107
 1805 0691 B0090000 		.4byte	0x9b0
 1806 0695 0B       		.uleb128 0xb
 1807 0696 9A010000 		.4byte	.LVL108
 1808 069a 16090000 		.4byte	0x916
 1809 069e 0D       		.uleb128 0xd
 1810 069f A6010000 		.4byte	.LVL109
 1811 06a3 FD090000 		.4byte	0x9fd
 1812 06a7 B1060000 		.4byte	0x6b1
 1813 06ab 0E       		.uleb128 0xe
 1814 06ac 01       		.uleb128 0x1
 1815 06ad 50       		.byte	0x50
 1816 06ae 01       		.uleb128 0x1
 1817 06af 31       		.byte	0x31
 1818 06b0 00       		.byte	0
 1819 06b1 0B       		.uleb128 0xb
 1820 06b2 AA010000 		.4byte	.LVL110
 1821 06b6 B0090000 		.4byte	0x9b0
 1822 06ba 0D       		.uleb128 0xd
 1823 06bb B0010000 		.4byte	.LVL111
 1824 06bf 290A0000 		.4byte	0xa29
 1825 06c3 CD060000 		.4byte	0x6cd
 1826 06c7 0E       		.uleb128 0xe
 1827 06c8 01       		.uleb128 0x1
 1828 06c9 50       		.byte	0x50
 1829 06ca 01       		.uleb128 0x1
 1830 06cb 46       		.byte	0x46
 1831 06cc 00       		.byte	0
 1832 06cd 0D       		.uleb128 0xd
 1833 06ce B6010000 		.4byte	.LVL112
 1834 06d2 340A0000 		.4byte	0xa34
 1835 06d6 E0060000 		.4byte	0x6e0
 1836 06da 0E       		.uleb128 0xe
 1837 06db 01       		.uleb128 0x1
 1838 06dc 50       		.byte	0x50
 1839 06dd 01       		.uleb128 0x1
 1840 06de 3B       		.byte	0x3b
 1841 06df 00       		.byte	0
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 46


 1842 06e0 0B       		.uleb128 0xb
 1843 06e1 C2010000 		.4byte	.LVL113
 1844 06e5 DC090000 		.4byte	0x9dc
 1845 06e9 0F       		.uleb128 0xf
 1846 06ea C8010000 		.4byte	.LVL114
 1847 06ee FD090000 		.4byte	0x9fd
 1848 06f2 0E       		.uleb128 0xe
 1849 06f3 01       		.uleb128 0x1
 1850 06f4 50       		.byte	0x50
 1851 06f5 01       		.uleb128 0x1
 1852 06f6 30       		.byte	0x30
 1853 06f7 00       		.byte	0
 1854 06f8 00       		.byte	0
 1855 06f9 0A       		.uleb128 0xa
 1856 06fa 55020000 		.4byte	.LASF38
 1857 06fe 01       		.byte	0x1
 1858 06ff 3402     		.2byte	0x234
 1859 0701 00000000 		.4byte	.LFB73
 1860 0705 28000000 		.4byte	.LFE73-.LFB73
 1861 0709 01       		.uleb128 0x1
 1862 070a 9C       		.byte	0x9c
 1863 070b 5D070000 		.4byte	0x75d
 1864 070f 0B       		.uleb128 0xb
 1865 0710 06000000 		.4byte	.LVL115
 1866 0714 DF080000 		.4byte	0x8df
 1867 0718 0B       		.uleb128 0xb
 1868 0719 0A000000 		.4byte	.LVL116
 1869 071d 3F0A0000 		.4byte	0xa3f
 1870 0721 0B       		.uleb128 0xb
 1871 0722 0E000000 		.4byte	.LVL117
 1872 0726 9A090000 		.4byte	0x99a
 1873 072a 0D       		.uleb128 0xd
 1874 072b 14000000 		.4byte	.LVL118
 1875 072f 4A0A0000 		.4byte	0xa4a
 1876 0733 41070000 		.4byte	0x741
 1877 0737 0E       		.uleb128 0xe
 1878 0738 01       		.uleb128 0x1
 1879 0739 50       		.byte	0x50
 1880 073a 05       		.uleb128 0x5
 1881 073b 03       		.byte	0x3
 1882 073c 00000000 		.4byte	RxIsr
 1883 0740 00       		.byte	0
 1884 0741 0B       		.uleb128 0xb
 1885 0742 18000000 		.4byte	.LVL119
 1886 0746 550A0000 		.4byte	0xa55
 1887 074a 0B       		.uleb128 0xb
 1888 074b 1C000000 		.4byte	.LVL120
 1889 074f 600A0000 		.4byte	0xa60
 1890 0753 0B       		.uleb128 0xb
 1891 0754 20000000 		.4byte	.LVL121
 1892 0758 BE080000 		.4byte	0x8be
 1893 075c 00       		.byte	0
 1894 075d 17       		.uleb128 0x17
 1895 075e 21050000 		.4byte	.LASF39
 1896 0762 01       		.byte	0x1
 1897 0763 68       		.byte	0x68
 1898 0764 68000000 		.4byte	0x68
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 47


 1899 0768 00       		.byte	0
 1900 0769 18       		.uleb128 0x18
 1901 076a 6900     		.ascii	"i\000"
 1902 076c 01       		.byte	0x1
 1903 076d 69       		.byte	0x69
 1904 076e 68000000 		.4byte	0x68
 1905 0772 02       		.byte	0x2
 1906 0773 19       		.uleb128 0x19
 1907 0774 F2050000 		.4byte	.LASF40
 1908 0778 01       		.byte	0x1
 1909 0779 6A       		.byte	0x6a
 1910 077a 68000000 		.4byte	0x68
 1911 077e 05       		.uleb128 0x5
 1912 077f 03       		.byte	0x3
 1913 0780 10000000 		.4byte	sleepCount
 1914 0784 19       		.uleb128 0x19
 1915 0785 69010000 		.4byte	.LASF41
 1916 0789 01       		.byte	0x1
 1917 078a 6F       		.byte	0x6f
 1918 078b 68000000 		.4byte	0x68
 1919 078f 05       		.uleb128 0x5
 1920 0790 03       		.byte	0x3
 1921 0791 00000000 		.4byte	bitTime
 1922 0795 19       		.uleb128 0x19
 1923 0796 7D020000 		.4byte	.LASF42
 1924 079a 01       		.byte	0x1
 1925 079b 70       		.byte	0x70
 1926 079c 68000000 		.4byte	0x68
 1927 07a0 05       		.uleb128 0x5
 1928 07a1 03       		.byte	0x3
 1929 07a2 08000000 		.4byte	currentByte
 1930 07a6 1A       		.uleb128 0x1a
 1931 07a7 A4030000 		.4byte	.LASF104
 1932 07ab 01       		.byte	0x1
 1933 07ac 71       		.byte	0x71
 1934 07ad 68000000 		.4byte	0x68
 1935 07b1 19       		.uleb128 0x19
 1936 07b2 27050000 		.4byte	.LASF43
 1937 07b6 01       		.byte	0x1
 1938 07b7 72       		.byte	0x72
 1939 07b8 68000000 		.4byte	0x68
 1940 07bc 05       		.uleb128 0x5
 1941 07bd 03       		.byte	0x3
 1942 07be 18000000 		.4byte	sendDataCount
 1943 07c2 19       		.uleb128 0x19
 1944 07c3 9B000000 		.4byte	.LASF44
 1945 07c7 01       		.byte	0x1
 1946 07c8 73       		.byte	0x73
 1947 07c9 68000000 		.4byte	0x68
 1948 07cd 05       		.uleb128 0x5
 1949 07ce 03       		.byte	0x3
 1950 07cf 04000000 		.4byte	ParityFlag
 1951 07d3 19       		.uleb128 0x19
 1952 07d4 58000000 		.4byte	.LASF45
 1953 07d8 01       		.byte	0x1
 1954 07d9 74       		.byte	0x74
 1955 07da 68000000 		.4byte	0x68
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 48


 1956 07de 05       		.uleb128 0x5
 1957 07df 03       		.byte	0x3
 1958 07e0 1C000000 		.4byte	maxDataFlag
 1959 07e4 19       		.uleb128 0x19
 1960 07e5 FD040000 		.4byte	.LASF46
 1961 07e9 01       		.byte	0x1
 1962 07ea 75       		.byte	0x75
 1963 07eb 68000000 		.4byte	0x68
 1964 07ef 05       		.uleb128 0x5
 1965 07f0 03       		.byte	0x3
 1966 07f1 14000000 		.4byte	wakeUpData
 1967 07f5 1B       		.uleb128 0x1b
 1968 07f6 35050000 		.4byte	.LASF47
 1969 07fa 05       		.byte	0x5
 1970 07fb 1207     		.2byte	0x712
 1971 07fd 01080000 		.4byte	0x801
 1972 0801 06       		.uleb128 0x6
 1973 0802 76000000 		.4byte	0x76
 1974 0806 1C       		.uleb128 0x1c
 1975 0807 B1040000 		.4byte	.LASF48
 1976 080b 01       		.byte	0x1
 1977 080c 6B       		.byte	0x6b
 1978 080d 8D000000 		.4byte	0x8d
 1979 0811 05       		.uleb128 0x5
 1980 0812 03       		.byte	0x3
 1981 0813 00000000 		.4byte	count
 1982 0817 1D       		.uleb128 0x1d
 1983 0818 A7000000 		.4byte	0xa7
 1984 081c 27080000 		.4byte	0x827
 1985 0820 1E       		.uleb128 0x1e
 1986 0821 D2000000 		.4byte	0xd2
 1987 0825 13       		.byte	0x13
 1988 0826 00       		.byte	0
 1989 0827 1C       		.uleb128 0x1c
 1990 0828 7E040000 		.4byte	.LASF49
 1991 082c 01       		.byte	0x1
 1992 082d 6C       		.byte	0x6c
 1993 082e 17080000 		.4byte	0x817
 1994 0832 05       		.uleb128 0x5
 1995 0833 03       		.byte	0x3
 1996 0834 00000000 		.4byte	lineStr
 1997 0838 1C       		.uleb128 0x1c
 1998 0839 21010000 		.4byte	.LASF50
 1999 083d 01       		.byte	0x1
 2000 083e 6D       		.byte	0x6d
 2001 083f 17080000 		.4byte	0x817
 2002 0843 05       		.uleb128 0x5
 2003 0844 03       		.byte	0x3
 2004 0845 00000000 		.4byte	data
 2005 0849 1C       		.uleb128 0x1c
 2006 084a B7040000 		.4byte	.LASF51
 2007 084e 01       		.byte	0x1
 2008 084f 6E       		.byte	0x6e
 2009 0850 81000000 		.4byte	0x81
 2010 0854 05       		.uleb128 0x5
 2011 0855 03       		.byte	0x3
 2012 0856 00000000 		.4byte	newDataflag
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 49


 2013 085a 1C       		.uleb128 0x1c
 2014 085b 1B020000 		.4byte	.LASF52
 2015 085f 01       		.byte	0x1
 2016 0860 78       		.byte	0x78
 2017 0861 81000000 		.4byte	0x81
 2018 0865 05       		.uleb128 0x5
 2019 0866 03       		.byte	0x3
 2020 0867 00000000 		.4byte	errorStatus
 2021 086b 1C       		.uleb128 0x1c
 2022 086c 08050000 		.4byte	.LASF53
 2023 0870 01       		.byte	0x1
 2024 0871 79       		.byte	0x79
 2025 0872 81000000 		.4byte	0x81
 2026 0876 05       		.uleb128 0x5
 2027 0877 03       		.byte	0x3
 2028 0878 00000000 		.4byte	crabsToSend
 2029 087c 1F       		.uleb128 0x1f
 2030 087d FD050000 		.4byte	.LASF54
 2031 0881 FD050000 		.4byte	.LASF54
 2032 0885 06       		.byte	0x6
 2033 0886 73       		.byte	0x73
 2034 0887 1F       		.uleb128 0x1f
 2035 0888 7F030000 		.4byte	.LASF55
 2036 088c 7F030000 		.4byte	.LASF55
 2037 0890 07       		.byte	0x7
 2038 0891 26       		.byte	0x26
 2039 0892 1F       		.uleb128 0x1f
 2040 0893 00000000 		.4byte	.LASF56
 2041 0897 00000000 		.4byte	.LASF56
 2042 089b 08       		.byte	0x8
 2043 089c 72       		.byte	0x72
 2044 089d 1F       		.uleb128 0x1f
 2045 089e 14050000 		.4byte	.LASF57
 2046 08a2 14050000 		.4byte	.LASF57
 2047 08a6 09       		.byte	0x9
 2048 08a7 3D       		.byte	0x3d
 2049 08a8 1F       		.uleb128 0x1f
 2050 08a9 D4020000 		.4byte	.LASF58
 2051 08ad D4020000 		.4byte	.LASF58
 2052 08b1 0A       		.byte	0xa
 2053 08b2 E7       		.byte	0xe7
 2054 08b3 1F       		.uleb128 0x1f
 2055 08b4 28030000 		.4byte	.LASF59
 2056 08b8 28030000 		.4byte	.LASF59
 2057 08bc 09       		.byte	0x9
 2058 08bd 3C       		.byte	0x3c
 2059 08be 1F       		.uleb128 0x1f
 2060 08bf 09020000 		.4byte	.LASF60
 2061 08c3 09020000 		.4byte	.LASF60
 2062 08c7 0B       		.byte	0xb
 2063 08c8 27       		.byte	0x27
 2064 08c9 1F       		.uleb128 0x1f
 2065 08ca 65030000 		.4byte	.LASF61
 2066 08ce 65030000 		.4byte	.LASF61
 2067 08d2 0B       		.byte	0xb
 2068 08d3 28       		.byte	0x28
 2069 08d4 1F       		.uleb128 0x1f
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 50


 2070 08d5 E2030000 		.4byte	.LASF62
 2071 08d9 E2030000 		.4byte	.LASF62
 2072 08dd 0C       		.byte	0xc
 2073 08de 2B       		.byte	0x2b
 2074 08df 1F       		.uleb128 0x1f
 2075 08e0 09030000 		.4byte	.LASF63
 2076 08e4 09030000 		.4byte	.LASF63
 2077 08e8 0D       		.byte	0xd
 2078 08e9 20       		.byte	0x20
 2079 08ea 1F       		.uleb128 0x1f
 2080 08eb 3F040000 		.4byte	.LASF64
 2081 08ef 3F040000 		.4byte	.LASF64
 2082 08f3 09       		.byte	0x9
 2083 08f4 43       		.byte	0x43
 2084 08f5 1F       		.uleb128 0x1f
 2085 08f6 D8050000 		.4byte	.LASF65
 2086 08fa D8050000 		.4byte	.LASF65
 2087 08fe 0E       		.byte	0xe
 2088 08ff 8F       		.byte	0x8f
 2089 0900 1F       		.uleb128 0x1f
 2090 0901 2F020000 		.4byte	.LASF66
 2091 0905 2F020000 		.4byte	.LASF66
 2092 0909 0F       		.byte	0xf
 2093 090a DD       		.byte	0xdd
 2094 090b 1F       		.uleb128 0x1f
 2095 090c F9000000 		.4byte	.LASF67
 2096 0910 F9000000 		.4byte	.LASF67
 2097 0914 10       		.byte	0x10
 2098 0915 8F       		.byte	0x8f
 2099 0916 1F       		.uleb128 0x1f
 2100 0917 41000000 		.4byte	.LASF68
 2101 091b 41000000 		.4byte	.LASF68
 2102 091f 10       		.byte	0x10
 2103 0920 5A       		.byte	0x5a
 2104 0921 1F       		.uleb128 0x1f
 2105 0922 73020000 		.4byte	.LASF69
 2106 0926 73020000 		.4byte	.LASF69
 2107 092a 09       		.byte	0x9
 2108 092b 42       		.byte	0x42
 2109 092c 1F       		.uleb128 0x1f
 2110 092d 4A040000 		.4byte	.LASF70
 2111 0931 4A040000 		.4byte	.LASF70
 2112 0935 0F       		.byte	0xf
 2113 0936 DC       		.byte	0xdc
 2114 0937 1F       		.uleb128 0x1f
 2115 0938 1E000000 		.4byte	.LASF71
 2116 093c 1E000000 		.4byte	.LASF71
 2117 0940 10       		.byte	0x10
 2118 0941 8E       		.byte	0x8e
 2119 0942 1F       		.uleb128 0x1f
 2120 0943 0D040000 		.4byte	.LASF72
 2121 0947 0D040000 		.4byte	.LASF72
 2122 094b 0E       		.byte	0xe
 2123 094c 8E       		.byte	0x8e
 2124 094d 1F       		.uleb128 0x1f
 2125 094e B6030000 		.4byte	.LASF73
 2126 0952 B6030000 		.4byte	.LASF73
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 51


 2127 0956 08       		.byte	0x8
 2128 0957 5D       		.byte	0x5d
 2129 0958 1F       		.uleb128 0x1f
 2130 0959 DE000000 		.4byte	.LASF74
 2131 095d DE000000 		.4byte	.LASF74
 2132 0961 11       		.byte	0x11
 2133 0962 28       		.byte	0x28
 2134 0963 1F       		.uleb128 0x1f
 2135 0964 64000000 		.4byte	.LASF75
 2136 0968 64000000 		.4byte	.LASF75
 2137 096c 12       		.byte	0x12
 2138 096d 28       		.byte	0x28
 2139 096e 1F       		.uleb128 0x1f
 2140 096f 54010000 		.4byte	.LASF76
 2141 0973 54010000 		.4byte	.LASF76
 2142 0977 0D       		.byte	0xd
 2143 0978 1F       		.byte	0x1f
 2144 0979 1F       		.uleb128 0x1f
 2145 097a 02040000 		.4byte	.LASF77
 2146 097e 02040000 		.4byte	.LASF77
 2147 0982 06       		.byte	0x6
 2148 0983 72       		.byte	0x72
 2149 0984 1F       		.uleb128 0x1f
 2150 0985 26040000 		.4byte	.LASF78
 2151 0989 26040000 		.4byte	.LASF78
 2152 098d 0E       		.byte	0xe
 2153 098e 5A       		.byte	0x5a
 2154 098f 1F       		.uleb128 0x1f
 2155 0990 E5010000 		.4byte	.LASF79
 2156 0994 E5010000 		.4byte	.LASF79
 2157 0998 11       		.byte	0x11
 2158 0999 18       		.byte	0x18
 2159 099a 1F       		.uleb128 0x1f
 2160 099b CF030000 		.4byte	.LASF80
 2161 099f CF030000 		.4byte	.LASF80
 2162 09a3 08       		.byte	0x8
 2163 09a4 54       		.byte	0x54
 2164 09a5 1F       		.uleb128 0x1f
 2165 09a6 89020000 		.4byte	.LASF81
 2166 09aa 89020000 		.4byte	.LASF81
 2167 09ae 09       		.byte	0x9
 2168 09af 38       		.byte	0x38
 2169 09b0 1F       		.uleb128 0x1f
 2170 09b1 6A040000 		.4byte	.LASF82
 2171 09b5 6A040000 		.4byte	.LASF82
 2172 09b9 0F       		.byte	0xf
 2173 09ba 92       		.byte	0x92
 2174 09bb 1F       		.uleb128 0x1f
 2175 09bc 5E020000 		.4byte	.LASF83
 2176 09c0 5E020000 		.4byte	.LASF83
 2177 09c4 12       		.byte	0x12
 2178 09c5 18       		.byte	0x18
 2179 09c6 1F       		.uleb128 0x1f
 2180 09c7 E3040000 		.4byte	.LASF84
 2181 09cb E3040000 		.4byte	.LASF84
 2182 09cf 13       		.byte	0x13
 2183 09d0 18       		.byte	0x18
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 52


 2184 09d1 1F       		.uleb128 0x1f
 2185 09d2 D0050000 		.4byte	.LASF85
 2186 09d6 D0050000 		.4byte	.LASF85
 2187 09da 06       		.byte	0x6
 2188 09db 76       		.byte	0x76
 2189 09dc 1F       		.uleb128 0x1f
 2190 09dd 93020000 		.4byte	.LASF86
 2191 09e1 93020000 		.4byte	.LASF86
 2192 09e5 0F       		.byte	0xf
 2193 09e6 93       		.byte	0x93
 2194 09e7 1F       		.uleb128 0x1f
 2195 09e8 9B040000 		.4byte	.LASF87
 2196 09ec 9B040000 		.4byte	.LASF87
 2197 09f0 10       		.byte	0x10
 2198 09f1 5B       		.byte	0x5b
 2199 09f2 1F       		.uleb128 0x1f
 2200 09f3 79000000 		.4byte	.LASF88
 2201 09f7 79000000 		.4byte	.LASF88
 2202 09fb 14       		.byte	0x14
 2203 09fc 26       		.byte	0x26
 2204 09fd 1F       		.uleb128 0x1f
 2205 09fe 0D000000 		.4byte	.LASF89
 2206 0a02 0D000000 		.4byte	.LASF89
 2207 0a06 15       		.byte	0x15
 2208 0a07 26       		.byte	0x26
 2209 0a08 1F       		.uleb128 0x1f
 2210 0a09 44020000 		.4byte	.LASF90
 2211 0a0d 44020000 		.4byte	.LASF90
 2212 0a11 0C       		.byte	0xc
 2213 0a12 24       		.byte	0x24
 2214 0a13 1F       		.uleb128 0x1f
 2215 0a14 91000000 		.4byte	.LASF91
 2216 0a18 91000000 		.4byte	.LASF91
 2217 0a1c 0D       		.byte	0xd
 2218 0a1d 22       		.byte	0x22
 2219 0a1e 1F       		.uleb128 0x1f
 2220 0a1f B3010000 		.4byte	.LASF92
 2221 0a23 B3010000 		.4byte	.LASF92
 2222 0a27 0C       		.byte	0xc
 2223 0a28 25       		.byte	0x25
 2224 0a29 1F       		.uleb128 0x1f
 2225 0a2a 08060000 		.4byte	.LASF93
 2226 0a2e 08060000 		.4byte	.LASF93
 2227 0a32 0F       		.byte	0xf
 2228 0a33 BE       		.byte	0xbe
 2229 0a34 1F       		.uleb128 0x1f
 2230 0a35 38030000 		.4byte	.LASF94
 2231 0a39 38030000 		.4byte	.LASF94
 2232 0a3d 0F       		.byte	0xf
 2233 0a3e C3       		.byte	0xc3
 2234 0a3f 1F       		.uleb128 0x1f
 2235 0a40 35000000 		.4byte	.LASF95
 2236 0a44 35000000 		.4byte	.LASF95
 2237 0a48 08       		.byte	0x8
 2238 0a49 5E       		.byte	0x5e
 2239 0a4a 1F       		.uleb128 0x1f
 2240 0a4b 3E010000 		.4byte	.LASF96
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 53


 2241 0a4f 3E010000 		.4byte	.LASF96
 2242 0a53 0B       		.byte	0xb
 2243 0a54 18       		.byte	0x18
 2244 0a55 1F       		.uleb128 0x1f
 2245 0a56 C3040000 		.4byte	.LASF97
 2246 0a5a C3040000 		.4byte	.LASF97
 2247 0a5e 16       		.byte	0x16
 2248 0a5f 28       		.byte	0x28
 2249 0a60 1F       		.uleb128 0x1f
 2250 0a61 CD000000 		.4byte	.LASF98
 2251 0a65 CD000000 		.4byte	.LASF98
 2252 0a69 16       		.byte	0x16
 2253 0a6a 25       		.byte	0x25
 2254 0a6b 00       		.byte	0
 2255              		.section	.debug_abbrev,"",%progbits
 2256              	.Ldebug_abbrev0:
 2257 0000 01       		.uleb128 0x1
 2258 0001 11       		.uleb128 0x11
 2259 0002 01       		.byte	0x1
 2260 0003 25       		.uleb128 0x25
 2261 0004 0E       		.uleb128 0xe
 2262 0005 13       		.uleb128 0x13
 2263 0006 0B       		.uleb128 0xb
 2264 0007 03       		.uleb128 0x3
 2265 0008 0E       		.uleb128 0xe
 2266 0009 1B       		.uleb128 0x1b
 2267 000a 0E       		.uleb128 0xe
 2268 000b 55       		.uleb128 0x55
 2269 000c 17       		.uleb128 0x17
 2270 000d 11       		.uleb128 0x11
 2271 000e 01       		.uleb128 0x1
 2272 000f 10       		.uleb128 0x10
 2273 0010 17       		.uleb128 0x17
 2274 0011 00       		.byte	0
 2275 0012 00       		.byte	0
 2276 0013 02       		.uleb128 0x2
 2277 0014 24       		.uleb128 0x24
 2278 0015 00       		.byte	0
 2279 0016 0B       		.uleb128 0xb
 2280 0017 0B       		.uleb128 0xb
 2281 0018 3E       		.uleb128 0x3e
 2282 0019 0B       		.uleb128 0xb
 2283 001a 03       		.uleb128 0x3
 2284 001b 0E       		.uleb128 0xe
 2285 001c 00       		.byte	0
 2286 001d 00       		.byte	0
 2287 001e 03       		.uleb128 0x3
 2288 001f 16       		.uleb128 0x16
 2289 0020 00       		.byte	0
 2290 0021 03       		.uleb128 0x3
 2291 0022 0E       		.uleb128 0xe
 2292 0023 3A       		.uleb128 0x3a
 2293 0024 0B       		.uleb128 0xb
 2294 0025 3B       		.uleb128 0x3b
 2295 0026 0B       		.uleb128 0xb
 2296 0027 49       		.uleb128 0x49
 2297 0028 13       		.uleb128 0x13
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 54


 2298 0029 00       		.byte	0
 2299 002a 00       		.byte	0
 2300 002b 04       		.uleb128 0x4
 2301 002c 24       		.uleb128 0x24
 2302 002d 00       		.byte	0
 2303 002e 0B       		.uleb128 0xb
 2304 002f 0B       		.uleb128 0xb
 2305 0030 3E       		.uleb128 0x3e
 2306 0031 0B       		.uleb128 0xb
 2307 0032 03       		.uleb128 0x3
 2308 0033 08       		.uleb128 0x8
 2309 0034 00       		.byte	0
 2310 0035 00       		.byte	0
 2311 0036 05       		.uleb128 0x5
 2312 0037 16       		.uleb128 0x16
 2313 0038 00       		.byte	0
 2314 0039 03       		.uleb128 0x3
 2315 003a 0E       		.uleb128 0xe
 2316 003b 3A       		.uleb128 0x3a
 2317 003c 0B       		.uleb128 0xb
 2318 003d 3B       		.uleb128 0x3b
 2319 003e 05       		.uleb128 0x5
 2320 003f 49       		.uleb128 0x49
 2321 0040 13       		.uleb128 0x13
 2322 0041 00       		.byte	0
 2323 0042 00       		.byte	0
 2324 0043 06       		.uleb128 0x6
 2325 0044 35       		.uleb128 0x35
 2326 0045 00       		.byte	0
 2327 0046 49       		.uleb128 0x49
 2328 0047 13       		.uleb128 0x13
 2329 0048 00       		.byte	0
 2330 0049 00       		.byte	0
 2331 004a 07       		.uleb128 0x7
 2332 004b 04       		.uleb128 0x4
 2333 004c 01       		.byte	0x1
 2334 004d 03       		.uleb128 0x3
 2335 004e 0E       		.uleb128 0xe
 2336 004f 0B       		.uleb128 0xb
 2337 0050 0B       		.uleb128 0xb
 2338 0051 49       		.uleb128 0x49
 2339 0052 13       		.uleb128 0x13
 2340 0053 3A       		.uleb128 0x3a
 2341 0054 0B       		.uleb128 0xb
 2342 0055 3B       		.uleb128 0x3b
 2343 0056 0B       		.uleb128 0xb
 2344 0057 01       		.uleb128 0x1
 2345 0058 13       		.uleb128 0x13
 2346 0059 00       		.byte	0
 2347 005a 00       		.byte	0
 2348 005b 08       		.uleb128 0x8
 2349 005c 28       		.uleb128 0x28
 2350 005d 00       		.byte	0
 2351 005e 03       		.uleb128 0x3
 2352 005f 0E       		.uleb128 0xe
 2353 0060 1C       		.uleb128 0x1c
 2354 0061 0B       		.uleb128 0xb
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 55


 2355 0062 00       		.byte	0
 2356 0063 00       		.byte	0
 2357 0064 09       		.uleb128 0x9
 2358 0065 2E       		.uleb128 0x2e
 2359 0066 00       		.byte	0
 2360 0067 3F       		.uleb128 0x3f
 2361 0068 19       		.uleb128 0x19
 2362 0069 03       		.uleb128 0x3
 2363 006a 0E       		.uleb128 0xe
 2364 006b 3A       		.uleb128 0x3a
 2365 006c 0B       		.uleb128 0xb
 2366 006d 3B       		.uleb128 0x3b
 2367 006e 05       		.uleb128 0x5
 2368 006f 27       		.uleb128 0x27
 2369 0070 19       		.uleb128 0x19
 2370 0071 11       		.uleb128 0x11
 2371 0072 01       		.uleb128 0x1
 2372 0073 12       		.uleb128 0x12
 2373 0074 06       		.uleb128 0x6
 2374 0075 40       		.uleb128 0x40
 2375 0076 18       		.uleb128 0x18
 2376 0077 9742     		.uleb128 0x2117
 2377 0079 19       		.uleb128 0x19
 2378 007a 00       		.byte	0
 2379 007b 00       		.byte	0
 2380 007c 0A       		.uleb128 0xa
 2381 007d 2E       		.uleb128 0x2e
 2382 007e 01       		.byte	0x1
 2383 007f 3F       		.uleb128 0x3f
 2384 0080 19       		.uleb128 0x19
 2385 0081 03       		.uleb128 0x3
 2386 0082 0E       		.uleb128 0xe
 2387 0083 3A       		.uleb128 0x3a
 2388 0084 0B       		.uleb128 0xb
 2389 0085 3B       		.uleb128 0x3b
 2390 0086 05       		.uleb128 0x5
 2391 0087 27       		.uleb128 0x27
 2392 0088 19       		.uleb128 0x19
 2393 0089 11       		.uleb128 0x11
 2394 008a 01       		.uleb128 0x1
 2395 008b 12       		.uleb128 0x12
 2396 008c 06       		.uleb128 0x6
 2397 008d 40       		.uleb128 0x40
 2398 008e 18       		.uleb128 0x18
 2399 008f 9742     		.uleb128 0x2117
 2400 0091 19       		.uleb128 0x19
 2401 0092 01       		.uleb128 0x1
 2402 0093 13       		.uleb128 0x13
 2403 0094 00       		.byte	0
 2404 0095 00       		.byte	0
 2405 0096 0B       		.uleb128 0xb
 2406 0097 898201   		.uleb128 0x4109
 2407 009a 00       		.byte	0
 2408 009b 11       		.uleb128 0x11
 2409 009c 01       		.uleb128 0x1
 2410 009d 31       		.uleb128 0x31
 2411 009e 13       		.uleb128 0x13
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 56


 2412 009f 00       		.byte	0
 2413 00a0 00       		.byte	0
 2414 00a1 0C       		.uleb128 0xc
 2415 00a2 34       		.uleb128 0x34
 2416 00a3 00       		.byte	0
 2417 00a4 03       		.uleb128 0x3
 2418 00a5 0E       		.uleb128 0xe
 2419 00a6 3A       		.uleb128 0x3a
 2420 00a7 0B       		.uleb128 0xb
 2421 00a8 3B       		.uleb128 0x3b
 2422 00a9 05       		.uleb128 0x5
 2423 00aa 49       		.uleb128 0x49
 2424 00ab 13       		.uleb128 0x13
 2425 00ac 02       		.uleb128 0x2
 2426 00ad 17       		.uleb128 0x17
 2427 00ae 00       		.byte	0
 2428 00af 00       		.byte	0
 2429 00b0 0D       		.uleb128 0xd
 2430 00b1 898201   		.uleb128 0x4109
 2431 00b4 01       		.byte	0x1
 2432 00b5 11       		.uleb128 0x11
 2433 00b6 01       		.uleb128 0x1
 2434 00b7 31       		.uleb128 0x31
 2435 00b8 13       		.uleb128 0x13
 2436 00b9 01       		.uleb128 0x1
 2437 00ba 13       		.uleb128 0x13
 2438 00bb 00       		.byte	0
 2439 00bc 00       		.byte	0
 2440 00bd 0E       		.uleb128 0xe
 2441 00be 8A8201   		.uleb128 0x410a
 2442 00c1 00       		.byte	0
 2443 00c2 02       		.uleb128 0x2
 2444 00c3 18       		.uleb128 0x18
 2445 00c4 9142     		.uleb128 0x2111
 2446 00c6 18       		.uleb128 0x18
 2447 00c7 00       		.byte	0
 2448 00c8 00       		.byte	0
 2449 00c9 0F       		.uleb128 0xf
 2450 00ca 898201   		.uleb128 0x4109
 2451 00cd 01       		.byte	0x1
 2452 00ce 11       		.uleb128 0x11
 2453 00cf 01       		.uleb128 0x1
 2454 00d0 31       		.uleb128 0x31
 2455 00d1 13       		.uleb128 0x13
 2456 00d2 00       		.byte	0
 2457 00d3 00       		.byte	0
 2458 00d4 10       		.uleb128 0x10
 2459 00d5 2E       		.uleb128 0x2e
 2460 00d6 01       		.byte	0x1
 2461 00d7 3F       		.uleb128 0x3f
 2462 00d8 19       		.uleb128 0x19
 2463 00d9 03       		.uleb128 0x3
 2464 00da 0E       		.uleb128 0xe
 2465 00db 3A       		.uleb128 0x3a
 2466 00dc 0B       		.uleb128 0xb
 2467 00dd 3B       		.uleb128 0x3b
 2468 00de 05       		.uleb128 0x5
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 57


 2469 00df 27       		.uleb128 0x27
 2470 00e0 19       		.uleb128 0x19
 2471 00e1 49       		.uleb128 0x49
 2472 00e2 13       		.uleb128 0x13
 2473 00e3 11       		.uleb128 0x11
 2474 00e4 01       		.uleb128 0x1
 2475 00e5 12       		.uleb128 0x12
 2476 00e6 06       		.uleb128 0x6
 2477 00e7 40       		.uleb128 0x40
 2478 00e8 18       		.uleb128 0x18
 2479 00e9 9742     		.uleb128 0x2117
 2480 00eb 19       		.uleb128 0x19
 2481 00ec 01       		.uleb128 0x1
 2482 00ed 13       		.uleb128 0x13
 2483 00ee 00       		.byte	0
 2484 00ef 00       		.byte	0
 2485 00f0 11       		.uleb128 0x11
 2486 00f1 05       		.uleb128 0x5
 2487 00f2 00       		.byte	0
 2488 00f3 03       		.uleb128 0x3
 2489 00f4 0E       		.uleb128 0xe
 2490 00f5 3A       		.uleb128 0x3a
 2491 00f6 0B       		.uleb128 0xb
 2492 00f7 3B       		.uleb128 0x3b
 2493 00f8 05       		.uleb128 0x5
 2494 00f9 49       		.uleb128 0x49
 2495 00fa 13       		.uleb128 0x13
 2496 00fb 02       		.uleb128 0x2
 2497 00fc 17       		.uleb128 0x17
 2498 00fd 00       		.byte	0
 2499 00fe 00       		.byte	0
 2500 00ff 12       		.uleb128 0x12
 2501 0100 05       		.uleb128 0x5
 2502 0101 00       		.byte	0
 2503 0102 03       		.uleb128 0x3
 2504 0103 08       		.uleb128 0x8
 2505 0104 3A       		.uleb128 0x3a
 2506 0105 0B       		.uleb128 0xb
 2507 0106 3B       		.uleb128 0x3b
 2508 0107 05       		.uleb128 0x5
 2509 0108 49       		.uleb128 0x49
 2510 0109 13       		.uleb128 0x13
 2511 010a 02       		.uleb128 0x2
 2512 010b 18       		.uleb128 0x18
 2513 010c 00       		.byte	0
 2514 010d 00       		.byte	0
 2515 010e 13       		.uleb128 0x13
 2516 010f 34       		.uleb128 0x34
 2517 0110 00       		.byte	0
 2518 0111 03       		.uleb128 0x3
 2519 0112 0E       		.uleb128 0xe
 2520 0113 3A       		.uleb128 0x3a
 2521 0114 0B       		.uleb128 0xb
 2522 0115 3B       		.uleb128 0x3b
 2523 0116 05       		.uleb128 0x5
 2524 0117 49       		.uleb128 0x49
 2525 0118 13       		.uleb128 0x13
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 58


 2526 0119 02       		.uleb128 0x2
 2527 011a 18       		.uleb128 0x18
 2528 011b 00       		.byte	0
 2529 011c 00       		.byte	0
 2530 011d 14       		.uleb128 0x14
 2531 011e 34       		.uleb128 0x34
 2532 011f 00       		.byte	0
 2533 0120 03       		.uleb128 0x3
 2534 0121 08       		.uleb128 0x8
 2535 0122 3A       		.uleb128 0x3a
 2536 0123 0B       		.uleb128 0xb
 2537 0124 3B       		.uleb128 0x3b
 2538 0125 05       		.uleb128 0x5
 2539 0126 49       		.uleb128 0x49
 2540 0127 13       		.uleb128 0x13
 2541 0128 02       		.uleb128 0x2
 2542 0129 17       		.uleb128 0x17
 2543 012a 00       		.byte	0
 2544 012b 00       		.byte	0
 2545 012c 15       		.uleb128 0x15
 2546 012d 2E       		.uleb128 0x2e
 2547 012e 01       		.byte	0x1
 2548 012f 3F       		.uleb128 0x3f
 2549 0130 19       		.uleb128 0x19
 2550 0131 03       		.uleb128 0x3
 2551 0132 0E       		.uleb128 0xe
 2552 0133 3A       		.uleb128 0x3a
 2553 0134 0B       		.uleb128 0xb
 2554 0135 3B       		.uleb128 0x3b
 2555 0136 0B       		.uleb128 0xb
 2556 0137 49       		.uleb128 0x49
 2557 0138 13       		.uleb128 0x13
 2558 0139 8701     		.uleb128 0x87
 2559 013b 19       		.uleb128 0x19
 2560 013c 11       		.uleb128 0x11
 2561 013d 01       		.uleb128 0x1
 2562 013e 12       		.uleb128 0x12
 2563 013f 06       		.uleb128 0x6
 2564 0140 40       		.uleb128 0x40
 2565 0141 18       		.uleb128 0x18
 2566 0142 9742     		.uleb128 0x2117
 2567 0144 19       		.uleb128 0x19
 2568 0145 01       		.uleb128 0x1
 2569 0146 13       		.uleb128 0x13
 2570 0147 00       		.byte	0
 2571 0148 00       		.byte	0
 2572 0149 16       		.uleb128 0x16
 2573 014a 34       		.uleb128 0x34
 2574 014b 00       		.byte	0
 2575 014c 03       		.uleb128 0x3
 2576 014d 0E       		.uleb128 0xe
 2577 014e 3A       		.uleb128 0x3a
 2578 014f 0B       		.uleb128 0xb
 2579 0150 3B       		.uleb128 0x3b
 2580 0151 0B       		.uleb128 0xb
 2581 0152 49       		.uleb128 0x49
 2582 0153 13       		.uleb128 0x13
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 59


 2583 0154 02       		.uleb128 0x2
 2584 0155 17       		.uleb128 0x17
 2585 0156 00       		.byte	0
 2586 0157 00       		.byte	0
 2587 0158 17       		.uleb128 0x17
 2588 0159 34       		.uleb128 0x34
 2589 015a 00       		.byte	0
 2590 015b 03       		.uleb128 0x3
 2591 015c 0E       		.uleb128 0xe
 2592 015d 3A       		.uleb128 0x3a
 2593 015e 0B       		.uleb128 0xb
 2594 015f 3B       		.uleb128 0x3b
 2595 0160 0B       		.uleb128 0xb
 2596 0161 49       		.uleb128 0x49
 2597 0162 13       		.uleb128 0x13
 2598 0163 1C       		.uleb128 0x1c
 2599 0164 0B       		.uleb128 0xb
 2600 0165 00       		.byte	0
 2601 0166 00       		.byte	0
 2602 0167 18       		.uleb128 0x18
 2603 0168 34       		.uleb128 0x34
 2604 0169 00       		.byte	0
 2605 016a 03       		.uleb128 0x3
 2606 016b 08       		.uleb128 0x8
 2607 016c 3A       		.uleb128 0x3a
 2608 016d 0B       		.uleb128 0xb
 2609 016e 3B       		.uleb128 0x3b
 2610 016f 0B       		.uleb128 0xb
 2611 0170 49       		.uleb128 0x49
 2612 0171 13       		.uleb128 0x13
 2613 0172 1C       		.uleb128 0x1c
 2614 0173 0B       		.uleb128 0xb
 2615 0174 00       		.byte	0
 2616 0175 00       		.byte	0
 2617 0176 19       		.uleb128 0x19
 2618 0177 34       		.uleb128 0x34
 2619 0178 00       		.byte	0
 2620 0179 03       		.uleb128 0x3
 2621 017a 0E       		.uleb128 0xe
 2622 017b 3A       		.uleb128 0x3a
 2623 017c 0B       		.uleb128 0xb
 2624 017d 3B       		.uleb128 0x3b
 2625 017e 0B       		.uleb128 0xb
 2626 017f 49       		.uleb128 0x49
 2627 0180 13       		.uleb128 0x13
 2628 0181 02       		.uleb128 0x2
 2629 0182 18       		.uleb128 0x18
 2630 0183 00       		.byte	0
 2631 0184 00       		.byte	0
 2632 0185 1A       		.uleb128 0x1a
 2633 0186 34       		.uleb128 0x34
 2634 0187 00       		.byte	0
 2635 0188 03       		.uleb128 0x3
 2636 0189 0E       		.uleb128 0xe
 2637 018a 3A       		.uleb128 0x3a
 2638 018b 0B       		.uleb128 0xb
 2639 018c 3B       		.uleb128 0x3b
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 60


 2640 018d 0B       		.uleb128 0xb
 2641 018e 49       		.uleb128 0x49
 2642 018f 13       		.uleb128 0x13
 2643 0190 00       		.byte	0
 2644 0191 00       		.byte	0
 2645 0192 1B       		.uleb128 0x1b
 2646 0193 34       		.uleb128 0x34
 2647 0194 00       		.byte	0
 2648 0195 03       		.uleb128 0x3
 2649 0196 0E       		.uleb128 0xe
 2650 0197 3A       		.uleb128 0x3a
 2651 0198 0B       		.uleb128 0xb
 2652 0199 3B       		.uleb128 0x3b
 2653 019a 05       		.uleb128 0x5
 2654 019b 49       		.uleb128 0x49
 2655 019c 13       		.uleb128 0x13
 2656 019d 3F       		.uleb128 0x3f
 2657 019e 19       		.uleb128 0x19
 2658 019f 3C       		.uleb128 0x3c
 2659 01a0 19       		.uleb128 0x19
 2660 01a1 00       		.byte	0
 2661 01a2 00       		.byte	0
 2662 01a3 1C       		.uleb128 0x1c
 2663 01a4 34       		.uleb128 0x34
 2664 01a5 00       		.byte	0
 2665 01a6 03       		.uleb128 0x3
 2666 01a7 0E       		.uleb128 0xe
 2667 01a8 3A       		.uleb128 0x3a
 2668 01a9 0B       		.uleb128 0xb
 2669 01aa 3B       		.uleb128 0x3b
 2670 01ab 0B       		.uleb128 0xb
 2671 01ac 49       		.uleb128 0x49
 2672 01ad 13       		.uleb128 0x13
 2673 01ae 3F       		.uleb128 0x3f
 2674 01af 19       		.uleb128 0x19
 2675 01b0 02       		.uleb128 0x2
 2676 01b1 18       		.uleb128 0x18
 2677 01b2 00       		.byte	0
 2678 01b3 00       		.byte	0
 2679 01b4 1D       		.uleb128 0x1d
 2680 01b5 01       		.uleb128 0x1
 2681 01b6 01       		.byte	0x1
 2682 01b7 49       		.uleb128 0x49
 2683 01b8 13       		.uleb128 0x13
 2684 01b9 01       		.uleb128 0x1
 2685 01ba 13       		.uleb128 0x13
 2686 01bb 00       		.byte	0
 2687 01bc 00       		.byte	0
 2688 01bd 1E       		.uleb128 0x1e
 2689 01be 21       		.uleb128 0x21
 2690 01bf 00       		.byte	0
 2691 01c0 49       		.uleb128 0x49
 2692 01c1 13       		.uleb128 0x13
 2693 01c2 2F       		.uleb128 0x2f
 2694 01c3 0B       		.uleb128 0xb
 2695 01c4 00       		.byte	0
 2696 01c5 00       		.byte	0
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 61


 2697 01c6 1F       		.uleb128 0x1f
 2698 01c7 2E       		.uleb128 0x2e
 2699 01c8 00       		.byte	0
 2700 01c9 3F       		.uleb128 0x3f
 2701 01ca 19       		.uleb128 0x19
 2702 01cb 3C       		.uleb128 0x3c
 2703 01cc 19       		.uleb128 0x19
 2704 01cd 6E       		.uleb128 0x6e
 2705 01ce 0E       		.uleb128 0xe
 2706 01cf 03       		.uleb128 0x3
 2707 01d0 0E       		.uleb128 0xe
 2708 01d1 3A       		.uleb128 0x3a
 2709 01d2 0B       		.uleb128 0xb
 2710 01d3 3B       		.uleb128 0x3b
 2711 01d4 0B       		.uleb128 0xb
 2712 01d5 00       		.byte	0
 2713 01d6 00       		.byte	0
 2714 01d7 00       		.byte	0
 2715              		.section	.debug_loc,"",%progbits
 2716              	.Ldebug_loc0:
 2717              	.LLST0:
 2718 0000 0E000000 		.4byte	.LVL2
 2719 0004 24000000 		.4byte	.LVL3
 2720 0008 0100     		.2byte	0x1
 2721 000a 53       		.byte	0x53
 2722 000b 00000000 		.4byte	0
 2723 000f 00000000 		.4byte	0
 2724              	.LLST1:
 2725 0013 00000000 		.4byte	.LVL17
 2726 0017 40000000 		.4byte	.LVL33
 2727 001b 0100     		.2byte	0x1
 2728 001d 50       		.byte	0x50
 2729 001e 40000000 		.4byte	.LVL33
 2730 0022 42000000 		.4byte	.LFE65
 2731 0026 0400     		.2byte	0x4
 2732 0028 F3       		.byte	0xf3
 2733 0029 01       		.uleb128 0x1
 2734 002a 50       		.byte	0x50
 2735 002b 9F       		.byte	0x9f
 2736 002c 00000000 		.4byte	0
 2737 0030 00000000 		.4byte	0
 2738              	.LLST2:
 2739 0034 14000000 		.4byte	.LVL18
 2740 0038 16000000 		.4byte	.LVL19
 2741 003c 0100     		.2byte	0x1
 2742 003e 53       		.byte	0x53
 2743 003f 1A000000 		.4byte	.LVL20
 2744 0043 1C000000 		.4byte	.LVL21
 2745 0047 0100     		.2byte	0x1
 2746 0049 53       		.byte	0x53
 2747 004a 20000000 		.4byte	.LVL22
 2748 004e 22000000 		.4byte	.LVL23
 2749 0052 0100     		.2byte	0x1
 2750 0054 53       		.byte	0x53
 2751 0055 26000000 		.4byte	.LVL24
 2752 0059 28000000 		.4byte	.LVL25
 2753 005d 0100     		.2byte	0x1
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 62


 2754 005f 53       		.byte	0x53
 2755 0060 2C000000 		.4byte	.LVL26
 2756 0064 2E000000 		.4byte	.LVL27
 2757 0068 0100     		.2byte	0x1
 2758 006a 53       		.byte	0x53
 2759 006b 32000000 		.4byte	.LVL28
 2760 006f 34000000 		.4byte	.LVL29
 2761 0073 0100     		.2byte	0x1
 2762 0075 53       		.byte	0x53
 2763 0076 38000000 		.4byte	.LVL30
 2764 007a 3A000000 		.4byte	.LVL31
 2765 007e 0100     		.2byte	0x1
 2766 0080 53       		.byte	0x53
 2767 0081 3E000000 		.4byte	.LVL32
 2768 0085 42000000 		.4byte	.LFE65
 2769 0089 0100     		.2byte	0x1
 2770 008b 53       		.byte	0x53
 2771 008c 00000000 		.4byte	0
 2772 0090 00000000 		.4byte	0
 2773              	.LLST3:
 2774 0094 04000000 		.4byte	.LVL34
 2775 0098 0C000000 		.4byte	.LVL36
 2776 009c 0200     		.2byte	0x2
 2777 009e 30       		.byte	0x30
 2778 009f 9F       		.byte	0x9f
 2779 00a0 0C000000 		.4byte	.LVL36
 2780 00a4 20000000 		.4byte	.LFE66
 2781 00a8 0100     		.2byte	0x1
 2782 00aa 53       		.byte	0x53
 2783 00ab 00000000 		.4byte	0
 2784 00af 00000000 		.4byte	0
 2785              	.LLST4:
 2786 00b3 02000000 		.4byte	.LVL55
 2787 00b7 5A000000 		.4byte	.LVL70
 2788 00bb 0200     		.2byte	0x2
 2789 00bd 30       		.byte	0x30
 2790 00be 9F       		.byte	0x9f
 2791 00bf 5A000000 		.4byte	.LVL70
 2792 00c3 82000000 		.4byte	.LVL72
 2793 00c7 0100     		.2byte	0x1
 2794 00c9 54       		.byte	0x54
 2795 00ca 82000000 		.4byte	.LVL72
 2796 00ce 84000000 		.4byte	.LVL73
 2797 00d2 0100     		.2byte	0x1
 2798 00d4 50       		.byte	0x50
 2799 00d5 84000000 		.4byte	.LVL73
 2800 00d9 92000000 		.4byte	.LVL75
 2801 00dd 0100     		.2byte	0x1
 2802 00df 54       		.byte	0x54
 2803 00e0 92000000 		.4byte	.LVL75
 2804 00e4 94000000 		.4byte	.LVL76
 2805 00e8 0100     		.2byte	0x1
 2806 00ea 50       		.byte	0x50
 2807 00eb 94000000 		.4byte	.LVL76
 2808 00ef A0000000 		.4byte	.LVL78
 2809 00f3 0100     		.2byte	0x1
 2810 00f5 54       		.byte	0x54
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 63


 2811 00f6 A0000000 		.4byte	.LVL78
 2812 00fa A2000000 		.4byte	.LVL79
 2813 00fe 0100     		.2byte	0x1
 2814 0100 50       		.byte	0x50
 2815 0101 A2000000 		.4byte	.LVL79
 2816 0105 AE000000 		.4byte	.LVL81
 2817 0109 0100     		.2byte	0x1
 2818 010b 54       		.byte	0x54
 2819 010c AE000000 		.4byte	.LVL81
 2820 0110 B0000000 		.4byte	.LVL82
 2821 0114 0100     		.2byte	0x1
 2822 0116 50       		.byte	0x50
 2823 0117 B0000000 		.4byte	.LVL82
 2824 011b F4010000 		.4byte	.LFE64
 2825 011f 0100     		.2byte	0x1
 2826 0121 54       		.byte	0x54
 2827 0122 00000000 		.4byte	0
 2828 0126 00000000 		.4byte	0
 2829              	.LLST5:
 2830 012a 02000000 		.4byte	.LVL55
 2831 012e 5A000000 		.4byte	.LVL70
 2832 0132 0200     		.2byte	0x2
 2833 0134 30       		.byte	0x30
 2834 0135 9F       		.byte	0x9f
 2835 0136 5A000000 		.4byte	.LVL70
 2836 013a D4000000 		.4byte	.LVL84
 2837 013e 0100     		.2byte	0x1
 2838 0140 55       		.byte	0x55
 2839 0141 D4000000 		.4byte	.LVL84
 2840 0145 DC000000 		.4byte	.LVL85
 2841 0149 0200     		.2byte	0x2
 2842 014b 30       		.byte	0x30
 2843 014c 9F       		.byte	0x9f
 2844 014d DC000000 		.4byte	.LVL85
 2845 0151 F4010000 		.4byte	.LFE64
 2846 0155 0100     		.2byte	0x1
 2847 0157 55       		.byte	0x55
 2848 0158 00000000 		.4byte	0
 2849 015c 00000000 		.4byte	0
 2850              		.section	.debug_aranges,"",%progbits
 2851 0000 64000000 		.4byte	0x64
 2852 0004 0200     		.2byte	0x2
 2853 0006 00000000 		.4byte	.Ldebug_info0
 2854 000a 04       		.byte	0x4
 2855 000b 00       		.byte	0
 2856 000c 0000     		.2byte	0
 2857 000e 0000     		.2byte	0
 2858 0010 00000000 		.4byte	.LFB69
 2859 0014 38000000 		.4byte	.LFE69-.LFB69
 2860 0018 00000000 		.4byte	.LFB71
 2861 001c 08000000 		.4byte	.LFE71-.LFB71
 2862 0020 00000000 		.4byte	.LFB70
 2863 0024 B8000000 		.4byte	.LFE70-.LFB70
 2864 0028 00000000 		.4byte	.LFB72
 2865 002c 28000000 		.4byte	.LFE72-.LFB72
 2866 0030 00000000 		.4byte	.LFB65
 2867 0034 42000000 		.4byte	.LFE65-.LFB65
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 64


 2868 0038 00000000 		.4byte	.LFB66
 2869 003c 20000000 		.4byte	.LFE66-.LFB66
 2870 0040 00000000 		.4byte	.LFB67
 2871 0044 1C000000 		.4byte	.LFE67-.LFB67
 2872 0048 00000000 		.4byte	.LFB68
 2873 004c 28000000 		.4byte	.LFE68-.LFB68
 2874 0050 00000000 		.4byte	.LFB64
 2875 0054 F4010000 		.4byte	.LFE64-.LFB64
 2876 0058 00000000 		.4byte	.LFB73
 2877 005c 28000000 		.4byte	.LFE73-.LFB73
 2878 0060 00000000 		.4byte	0
 2879 0064 00000000 		.4byte	0
 2880              		.section	.debug_ranges,"",%progbits
 2881              	.Ldebug_ranges0:
 2882 0000 00000000 		.4byte	.LFB69
 2883 0004 38000000 		.4byte	.LFE69
 2884 0008 00000000 		.4byte	.LFB71
 2885 000c 08000000 		.4byte	.LFE71
 2886 0010 00000000 		.4byte	.LFB70
 2887 0014 B8000000 		.4byte	.LFE70
 2888 0018 00000000 		.4byte	.LFB72
 2889 001c 28000000 		.4byte	.LFE72
 2890 0020 00000000 		.4byte	.LFB65
 2891 0024 42000000 		.4byte	.LFE65
 2892 0028 00000000 		.4byte	.LFB66
 2893 002c 20000000 		.4byte	.LFE66
 2894 0030 00000000 		.4byte	.LFB67
 2895 0034 1C000000 		.4byte	.LFE67
 2896 0038 00000000 		.4byte	.LFB68
 2897 003c 28000000 		.4byte	.LFE68
 2898 0040 00000000 		.4byte	.LFB64
 2899 0044 F4010000 		.4byte	.LFE64
 2900 0048 00000000 		.4byte	.LFB73
 2901 004c 28000000 		.4byte	.LFE73
 2902 0050 00000000 		.4byte	0
 2903 0054 00000000 		.4byte	0
 2904              		.section	.debug_line,"",%progbits
 2905              	.Ldebug_line0:
 2906 0000 14040000 		.section	.debug_str,"MS",%progbits,1
 2906      0200B302 
 2906      00000201 
 2906      FB0E0D00 
 2906      01010101 
 2907              	.LASF56:
 2908 0000 55415254 		.ascii	"UART_GetByte\000"
 2908      5F476574 
 2908      42797465 
 2908      00
 2909              	.LASF89:
 2910 000d 5369676E 		.ascii	"SignalBase_Write\000"
 2910      616C4261 
 2910      73655F57 
 2910      72697465 
 2910      00
 2911              	.LASF71:
 2912 001e 50574D5F 		.ascii	"PWM_Switch_Timer_Sleep\000"
 2912      53776974 
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 65


 2912      63685F54 
 2912      696D6572 
 2912      5F536C65 
 2913              	.LASF95:
 2914 0035 55415254 		.ascii	"UART_Wakeup\000"
 2914      5F57616B 
 2914      65757000 
 2915              	.LASF68:
 2916 0041 50574D5F 		.ascii	"PWM_Switch_Timer_Start\000"
 2916      53776974 
 2916      63685F54 
 2916      696D6572 
 2916      5F537461 
 2917              	.LASF45:
 2918 0058 6D617844 		.ascii	"maxDataFlag\000"
 2918      61746146 
 2918      6C616700 
 2919              	.LASF75:
 2920 0064 6973725F 		.ascii	"isr_sec_ClearPending\000"
 2920      7365635F 
 2920      436C6561 
 2920      7250656E 
 2920      64696E67 
 2921              	.LASF88:
 2922 0079 48696768 		.ascii	"HighVoltage_Write\000"
 2922      566F6C74 
 2922      6167655F 
 2922      57726974 
 2922      6500
 2923              	.LASF102:
 2924 008b 73746174 		.ascii	"state\000"
 2924      6500
 2925              	.LASF91:
 2926 0091 4379506D 		.ascii	"CyPmSleep\000"
 2926      536C6565 
 2926      7000
 2927              	.LASF44:
 2928 009b 50617269 		.ascii	"ParityFlag\000"
 2928      7479466C 
 2928      616700
 2929              	.LASF2:
 2930 00a6 73686F72 		.ascii	"short int\000"
 2930      7420696E 
 2930      7400
 2931              	.LASF35:
 2932 00b0 676F546F 		.ascii	"goToSleep\000"
 2932      536C6565 
 2932      7000
 2933              	.LASF26:
 2934 00ba 77616B65 		.ascii	"wakeUpIsr\000"
 2934      55704973 
 2934      7200
 2935              	.LASF19:
 2936 00c4 73697A65 		.ascii	"sizetype\000"
 2936      74797065 
 2936      00
 2937              	.LASF98:
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 66


 2938 00cd 52785761 		.ascii	"RxWakeUp_Disable\000"
 2938      6B655570 
 2938      5F446973 
 2938      61626C65 
 2938      00
 2939              	.LASF74:
 2940 00de 77617463 		.ascii	"watchDogCheck_ClearPending\000"
 2940      68446F67 
 2940      43686563 
 2940      6B5F436C 
 2940      65617250 
 2941              	.LASF67:
 2942 00f9 50574D5F 		.ascii	"PWM_Switch_Timer_Wakeup\000"
 2942      53776974 
 2942      63685F54 
 2942      696D6572 
 2942      5F57616B 
 2943              	.LASF15:
 2944 0111 63686172 		.ascii	"char8\000"
 2944      3800
 2945              	.LASF30:
 2946 0117 42797465 		.ascii	"Byte\000"
 2946      00
 2947              	.LASF36:
 2948 011c 6D61696E 		.ascii	"main\000"
 2948      00
 2949              	.LASF50:
 2950 0121 64617461 		.ascii	"data\000"
 2950      00
 2951              	.LASF27:
 2952 0126 6865785F 		.ascii	"hex_value\000"
 2952      76616C75 
 2952      6500
 2953              	.LASF34:
 2954 0130 77616B65 		.ascii	"wakeUp\000"
 2954      557000
 2955              	.LASF33:
 2956 0137 70617269 		.ascii	"parity\000"
 2956      747900
 2957              	.LASF96:
 2958 013e 6973725F 		.ascii	"isr_rx_StartEx\000"
 2958      72785F53 
 2958      74617274 
 2958      457800
 2959              	.LASF12:
 2960 014d 75696E74 		.ascii	"uint16\000"
 2960      313600
 2961              	.LASF76:
 2962 0154 4379506D 		.ascii	"CyPmSaveClocks\000"
 2962      53617665 
 2962      436C6F63 
 2962      6B7300
 2963              	.LASF11:
 2964 0163 75696E74 		.ascii	"uint8\000"
 2964      3800
 2965              	.LASF41:
 2966 0169 62697454 		.ascii	"bitTime\000"
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 67


 2966      696D6500 
 2967              	.LASF101:
 2968 0171 433A5C55 		.ascii	"C:\\Users\\sdysart\\Documents\\UACS\\UACS\\HighFreq"
 2968      73657273 
 2968      5C736479 
 2968      73617274 
 2968      5C446F63 
 2969 019e 46534B5C 		.ascii	"FSK\\UART_FSKTx.cydsn\000"
 2969      55415254 
 2969      5F46534B 
 2969      54782E63 
 2969      7964736E 
 2970              	.LASF92:
 2971 01b3 536C6565 		.ascii	"SleepTimer_Stop\000"
 2971      7054696D 
 2971      65725F53 
 2971      746F7000 
 2972              	.LASF24:
 2973 01c3 77617463 		.ascii	"watchDogCheck\000"
 2973      68446F67 
 2973      43686563 
 2973      6B00
 2974              	.LASF20:
 2975 01d1 456E636F 		.ascii	"Encoding_Byte\000"
 2975      64696E67 
 2975      5F427974 
 2975      6500
 2976              	.LASF13:
 2977 01df 666C6F61 		.ascii	"float\000"
 2977      7400
 2978              	.LASF79:
 2979 01e5 77617463 		.ascii	"watchDogCheck_StartEx\000"
 2979      68446F67 
 2979      43686563 
 2979      6B5F5374 
 2979      61727445 
 2980              	.LASF6:
 2981 01fb 6C6F6E67 		.ascii	"long long int\000"
 2981      206C6F6E 
 2981      6720696E 
 2981      7400
 2982              	.LASF60:
 2983 0209 6973725F 		.ascii	"isr_rx_SetPending\000"
 2983      72785F53 
 2983      65745065 
 2983      6E64696E 
 2983      6700
 2984              	.LASF52:
 2985 021b 6572726F 		.ascii	"errorStatus\000"
 2985      72537461 
 2985      74757300 
 2986              	.LASF29:
 2987 0227 62697443 		.ascii	"bitCase\000"
 2987      61736500 
 2988              	.LASF66:
 2989 022f 50574D5F 		.ascii	"PWM_Modulator_Wakeup\000"
 2989      4D6F6475 
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 68


 2989      6C61746F 
 2989      725F5761 
 2989      6B657570 
 2990              	.LASF90:
 2991 0244 536C6565 		.ascii	"SleepTimer_Start\000"
 2991      7054696D 
 2991      65725F53 
 2991      74617274 
 2991      00
 2992              	.LASF38:
 2993 0255 52785761 		.ascii	"RxWakeUp\000"
 2993      6B655570 
 2993      00
 2994              	.LASF83:
 2995 025e 6973725F 		.ascii	"isr_sec_StartEx\000"
 2995      7365635F 
 2995      53746172 
 2995      74457800 
 2996              	.LASF21:
 2997 026e 44617461 		.ascii	"Data\000"
 2997      00
 2998              	.LASF69:
 2999 0273 4C43445F 		.ascii	"LCD_Sleep\000"
 2999      536C6565 
 2999      7000
 3000              	.LASF42:
 3001 027d 63757272 		.ascii	"currentByte\000"
 3001      656E7442 
 3001      79746500 
 3002              	.LASF81:
 3003 0289 4C43445F 		.ascii	"LCD_Start\000"
 3003      53746172 
 3003      7400
 3004              	.LASF86:
 3005 0293 50574D5F 		.ascii	"PWM_Modulator_Stop\000"
 3005      4D6F6475 
 3005      6C61746F 
 3005      725F5374 
 3005      6F7000
 3006              	.LASF18:
 3007 02a6 6C6F6E67 		.ascii	"long double\000"
 3007      20646F75 
 3007      626C6500 
 3008              	.LASF28:
 3009 02b2 72785374 		.ascii	"rxStatus\000"
 3009      61747573 
 3009      00
 3010              	.LASF1:
 3011 02bb 756E7369 		.ascii	"unsigned char\000"
 3011      676E6564 
 3011      20636861 
 3011      7200
 3012              	.LASF31:
 3013 02c9 46696E64 		.ascii	"FindParity\000"
 3013      50617269 
 3013      747900
 3014              	.LASF58:
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 69


 3015 02d4 73707269 		.ascii	"sprintf\000"
 3015      6E746600 
 3016              	.LASF0:
 3017 02dc 7369676E 		.ascii	"signed char\000"
 3017      65642063 
 3017      68617200 
 3018              	.LASF37:
 3019 02e8 64617461 		.ascii	"data_turn\000"
 3019      5F747572 
 3019      6E00
 3020              	.LASF7:
 3021 02f2 6C6F6E67 		.ascii	"long long unsigned int\000"
 3021      206C6F6E 
 3021      6720756E 
 3021      7369676E 
 3021      65642069 
 3022              	.LASF63:
 3023 0309 4379506D 		.ascii	"CyPmRestoreClocks\000"
 3023      52657374 
 3023      6F726543 
 3023      6C6F636B 
 3023      7300
 3024              	.LASF8:
 3025 031b 756E7369 		.ascii	"unsigned int\000"
 3025      676E6564 
 3025      20696E74 
 3025      00
 3026              	.LASF59:
 3027 0328 4C43445F 		.ascii	"LCD_PrintString\000"
 3027      5072696E 
 3027      74537472 
 3027      696E6700 
 3028              	.LASF94:
 3029 0338 50574D5F 		.ascii	"PWM_Modulator_WriteCompare\000"
 3029      4D6F6475 
 3029      6C61746F 
 3029      725F5772 
 3029      69746543 
 3030              	.LASF5:
 3031 0353 6C6F6E67 		.ascii	"long unsigned int\000"
 3031      20756E73 
 3031      69676E65 
 3031      6420696E 
 3031      7400
 3032              	.LASF61:
 3033 0365 6973725F 		.ascii	"isr_rx_ClearPending\000"
 3033      72785F43 
 3033      6C656172 
 3033      50656E64 
 3033      696E6700 
 3034              	.LASF25:
 3035 0379 52784973 		.ascii	"RxIsr\000"
 3035      7200
 3036              	.LASF55:
 3037 037f 736C6565 		.ascii	"sleepToggle_Write\000"
 3037      70546F67 
 3037      676C655F 
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 70


 3037      57726974 
 3037      6500
 3038              	.LASF3:
 3039 0391 73686F72 		.ascii	"short unsigned int\000"
 3039      7420756E 
 3039      7369676E 
 3039      65642069 
 3039      6E7400
 3040              	.LASF104:
 3041 03a4 70726566 		.ascii	"prefixTime\000"
 3041      69785469 
 3041      6D6500
 3042              	.LASF22:
 3043 03af 50617269 		.ascii	"Parity\000"
 3043      747900
 3044              	.LASF73:
 3045 03b6 55415254 		.ascii	"UART_Sleep\000"
 3045      5F536C65 
 3045      657000
 3046              	.LASF16:
 3047 03c1 63686172 		.ascii	"char\000"
 3047      00
 3048              	.LASF4:
 3049 03c6 6C6F6E67 		.ascii	"long int\000"
 3049      20696E74 
 3049      00
 3050              	.LASF80:
 3051 03cf 55415254 		.ascii	"UART_Start\000"
 3051      5F537461 
 3051      727400
 3052              	.LASF10:
 3053 03da 696E7433 		.ascii	"int32_t\000"
 3053      325F7400 
 3054              	.LASF62:
 3055 03e2 536C6565 		.ascii	"SleepTimer_GetStatus\000"
 3055      7054696D 
 3055      65725F47 
 3055      65745374 
 3055      61747573 
 3056              	.LASF32:
 3057 03f7 62697454 		.ascii	"bitToCheck\000"
 3057      6F436865 
 3057      636B00
 3058              	.LASF77:
 3059 0402 43795764 		.ascii	"CyWdtStart\000"
 3059      74537461 
 3059      727400
 3060              	.LASF72:
 3061 040d 63686563 		.ascii	"checkWatchDogTimer_Sleep\000"
 3061      6B576174 
 3061      6368446F 
 3061      6754696D 
 3061      65725F53 
 3062              	.LASF78:
 3063 0426 63686563 		.ascii	"checkWatchDogTimer_Start\000"
 3063      6B576174 
 3063      6368446F 
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 71


 3063      6754696D 
 3063      65725F53 
 3064              	.LASF64:
 3065 043f 4C43445F 		.ascii	"LCD_Wakeup\000"
 3065      57616B65 
 3065      757000
 3066              	.LASF70:
 3067 044a 50574D5F 		.ascii	"PWM_Modulator_Sleep\000"
 3067      4D6F6475 
 3067      6C61746F 
 3067      725F536C 
 3067      65657000 
 3068              	.LASF100:
 3069 045e 6D61696E 		.ascii	"main.c\000"
 3069      2E6300
 3070              	.LASF17:
 3071 0465 72656738 		.ascii	"reg8\000"
 3071      00
 3072              	.LASF82:
 3073 046a 50574D5F 		.ascii	"PWM_Modulator_Start\000"
 3073      4D6F6475 
 3073      6C61746F 
 3073      725F5374 
 3073      61727400 
 3074              	.LASF49:
 3075 047e 6C696E65 		.ascii	"lineStr\000"
 3075      53747200 
 3076              	.LASF23:
 3077 0486 4465636F 		.ascii	"Decoding_Byte\000"
 3077      64696E67 
 3077      5F427974 
 3077      6500
 3078              	.LASF14:
 3079 0494 646F7562 		.ascii	"double\000"
 3079      6C6500
 3080              	.LASF87:
 3081 049b 50574D5F 		.ascii	"PWM_Switch_Timer_Stop\000"
 3081      53776974 
 3081      63685F54 
 3081      696D6572 
 3081      5F53746F 
 3082              	.LASF48:
 3083 04b1 636F756E 		.ascii	"count\000"
 3083      7400
 3084              	.LASF51:
 3085 04b7 6E657744 		.ascii	"newDataflag\000"
 3085      61746166 
 3085      6C616700 
 3086              	.LASF97:
 3087 04c3 52785761 		.ascii	"RxWakeUp_ClearPending\000"
 3087      6B655570 
 3087      5F436C65 
 3087      61725065 
 3087      6E64696E 
 3088              	.LASF9:
 3089 04d9 5F5F696E 		.ascii	"__int32_t\000"
 3089      7433325F 
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 72


 3089      7400
 3090              	.LASF84:
 3091 04e3 536C6565 		.ascii	"Sleep_ISR_StartEx\000"
 3091      705F4953 
 3091      525F5374 
 3091      61727445 
 3091      7800
 3092              	.LASF103:
 3093 04f5 6973725F 		.ascii	"isr_sec\000"
 3093      73656300 
 3094              	.LASF46:
 3095 04fd 77616B65 		.ascii	"wakeUpData\000"
 3095      55704461 
 3095      746100
 3096              	.LASF53:
 3097 0508 63726162 		.ascii	"crabsToSend\000"
 3097      73546F53 
 3097      656E6400 
 3098              	.LASF57:
 3099 0514 4C43445F 		.ascii	"LCD_Position\000"
 3099      506F7369 
 3099      74696F6E 
 3099      00
 3100              	.LASF39:
 3101 0521 6572726F 		.ascii	"error\000"
 3101      7200
 3102              	.LASF43:
 3103 0527 73656E64 		.ascii	"sendDataCount\000"
 3103      44617461 
 3103      436F756E 
 3103      7400
 3104              	.LASF47:
 3105 0535 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3105      52784275 
 3105      66666572 
 3105      00
 3106              	.LASF99:
 3107 0542 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3107      43313120 
 3107      352E342E 
 3107      31203230 
 3107      31363036 
 3108 0575 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3108      20726576 
 3108      6973696F 
 3108      6E203233 
 3108      37373135 
 3109 05a8 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3109      66756E63 
 3109      74696F6E 
 3109      2D736563 
 3109      74696F6E 
 3110              	.LASF85:
 3111 05d0 43794465 		.ascii	"CyDelay\000"
 3111      6C617900 
 3112              	.LASF65:
 3113 05d8 63686563 		.ascii	"checkWatchDogTimer_Wakeup\000"
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccVXInZu.s 			page 73


 3113      6B576174 
 3113      6368446F 
 3113      6754696D 
 3113      65725F57 
 3114              	.LASF40:
 3115 05f2 736C6565 		.ascii	"sleepCount\000"
 3115      70436F75 
 3115      6E7400
 3116              	.LASF54:
 3117 05fd 43795764 		.ascii	"CyWdtClear\000"
 3117      74436C65 
 3117      617200
 3118              	.LASF93:
 3119 0608 50574D5F 		.ascii	"PWM_Modulator_WritePeriod\000"
 3119      4D6F6475 
 3119      6C61746F 
 3119      725F5772 
 3119      69746550 
 3120              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
