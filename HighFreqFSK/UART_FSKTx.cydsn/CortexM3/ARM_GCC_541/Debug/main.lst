ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.isr_sec,"ax",%progbits
  20              		.align	2
  21              		.global	isr_sec
  22              		.thumb
  23              		.thumb_func
  24              		.type	isr_sec, %function
  25              	isr_sec:
  26              	.LFB69:
  27              		.file 1 "main.c"
   1:main.c        **** /*****************************************************************************
   2:main.c        **** * File Name: main.c
   3:main.c        **** *
   4:main.c        **** * Created: 5/16/18
   5:main.c        **** * Revised: 5/28/18
   6:main.c        **** * Revised by: Stephanie Salazar
   7:main.c        **** *
   8:main.c        **** * Description: 
   9:main.c        **** *  This project communicates via UART in Full duplex mode. The UART has
  10:main.c        **** * receiver(RX) and transmitter(TX)]. The data received by RX is used for
  11:main.c        **** * FSK transmission. 
  12:main.c        **** *
  13:main.c        **** *  This code has been modified from PSoC's UART_Full_Duplex example code.
  14:main.c        **** *  This code example project demonstrates how to communicate between 
  15:main.c        **** *  the PC and UART component in Full duplex mode. The UART has receiver(RX) and 
  16:main.c        **** *  transmitter(TX) part. The data received by RX is looped back to the TX.
  17:main.c        **** *
  18:main.c        **** *******************************************************************************
  19:main.c        **** * Copyright (2017), Cypress Semiconductor Corporation. All rights reserved.
  20:main.c        **** *******************************************************************************
  21:main.c        **** *
  22:main.c        **** * Related Document: 
  23:main.c        **** * CE210741_UART_Full_Duplex_and_printf_Support_with_PSoC_3_4_5LP.pdf
  24:main.c        **** *
  25:main.c        **** * Hardware Dependency: See 
  26:main.c        **** * CE210741_UART_Full_Duplex_and_printf_Support_with_PSoC_3_4_5LP.pdf
  27:main.c        **** *
  28:main.c        **** *******************************************************************************
  29:main.c        **** */
  30:main.c        **** 
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 2


  31:main.c        **** #include <project.h>
  32:main.c        **** #include <stdio.h>
  33:main.c        **** #include "stdlib.h"
  34:main.c        **** 
  35:main.c        **** /***************************************
  36:main.c        **** * Conditional Compilation Parameters
  37:main.c        **** ***************************************/
  38:main.c        **** #define UART    ENABLED
  39:main.c        **** 
  40:main.c        **** /* Character LCD String Length */
  41:main.c        **** #define LINE_STR_LENGTH     (20u)
  42:main.c        **** /* Change data size for sending longer data (n-1) */
  43:main.c        **** #define DATA_SIZE           (7u)
  44:main.c        **** /* Change max crabs to correlate with data size 2^(n) - 1 */
  45:main.c        **** #define MAX_CRABS           (15)
  46:main.c        **** /* Error used for user error */
  47:main.c        **** #define ERROR               (333u)
  48:main.c        **** 
  49:main.c        **** /*Definitions*/
  50:main.c        **** #define CLOCK_FREQ 1000000
  51:main.c        **** #define FREQ(x) (CLOCK_FREQ/x)-1
  52:main.c        **** 
  53:main.c        **** /*PWM Frequencies*/
  54:main.c        **** #define ONE_FREQ     42000
  55:main.c        **** #define ZERO_FREQ    37000
  56:main.c        **** #define AUDIBLE_FREQ 12000
  57:main.c        **** 
  58:main.c        **** #define BIT_0_MASK 0x01
  59:main.c        **** #define BIT_1_MASK 0x02
  60:main.c        **** #define BIT_2_MASK 0x04
  61:main.c        **** #define BIT_3_MASK 0x08
  62:main.c        **** #define BIT_4_MASK 0x10
  63:main.c        **** #define BIT_5_MASK 0x20
  64:main.c        **** #define BIT_6_MASK 0x40
  65:main.c        **** #define BIT_7_MASK 0x80
  66:main.c        **** 
  67:main.c        **** #define ZERO              0x0
  68:main.c        **** #define ONE               0x1
  69:main.c        **** #define TRUE              0x1
  70:main.c        **** #define FALSE             0x0
  71:main.c        **** #define ENABLED           1u
  72:main.c        **** #define DISABLED          0u
  73:main.c        **** #define DATA_LENGTH       8
  74:main.c        **** #define DECODE_VALUE      0x01
  75:main.c        **** #define PREFIX_BIT_LENGTH 6
  76:main.c        **** #define PREFIX_MESSAGE    0xFF
  77:main.c        **** #define MAX_DATA_SENDING  3
  78:main.c        **** #define MAX_SLEEP_COUNT   5
  79:main.c        **** #define FiveSecs          5000
  80:main.c        **** #define ON                1
  81:main.c        **** #define OFF               0
  82:main.c        **** 
  83:main.c        **** /*Enumerations*/
  84:main.c        **** enum state{
  85:main.c        ****     Encoding_Byte1,
  86:main.c        ****     Data,
  87:main.c        ****     Parity,
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 3


  88:main.c        ****     Decoding_Byte1,
  89:main.c        **** };
  90:main.c        **** 
  91:main.c        **** /*Function Prototypes*/
  92:main.c        **** int Byte(unsigned int hex_value, int bT);
  93:main.c        **** int FindParity(void);
  94:main.c        **** void goToSleep(void);
  95:main.c        **** void wakeUp(void);
  96:main.c        **** 
  97:main.c        **** CY_ISR_PROTO(isr_sec); // High F Interrupt
  98:main.c        **** CY_ISR_PROTO(watchDogCheck); //reset watchDog timer before reset
  99:main.c        **** CY_ISR_PROTO(RxIsr); // RX Interrupt
 100:main.c        **** CY_ISR_PROTO(wakeUpIsr); // sleep timer interrupt
 101:main.c        **** CY_ISR_PROTO(RxWakeUp); // sleep timer interrupt from UART
 102:main.c        **** 
 103:main.c        **** /*Global Variables*/
 104:main.c        **** int error = 0; // flag for input error
 105:main.c        **** int i = 2; // to iterate through data array
 106:main.c        **** int sleepCount = 0;
 107:main.c        **** uint16 count;
 108:main.c        **** char8 lineStr[LINE_STR_LENGTH];
 109:main.c        **** char8 data[LINE_STR_LENGTH];
 110:main.c        **** uint8 newDataflag = FALSE;
 111:main.c        **** static int bitTime = 0;
 112:main.c        **** static int currentByte = Encoding_Byte1;
 113:main.c        **** static int prefixTime = 0;
 114:main.c        **** static int sendDataCount = 0;
 115:main.c        **** static int ParityFlag = FALSE;
 116:main.c        **** static int maxDataFlag = FALSE;
 117:main.c        **** static int wakeUpData = FALSE;
 118:main.c        **** 
 119:main.c        **** /* UART Global Variables */
 120:main.c        **** uint8 errorStatus = 0u;
 121:main.c        **** uint8 crabsToSend = 0x1;
 122:main.c        **** 
 123:main.c        **** 
 124:main.c        **** /*******************************************************************************
 125:main.c        **** * Function Name: main()
 126:main.c        **** *******************************************************************************/
 127:main.c        **** int main()
 128:main.c        **** {
 129:main.c        ****     /*Variable initializations*/
 130:main.c        ****     int bitCase = 0;
 131:main.c        ****     int data_turn = 0;
 132:main.c        **** 
 133:main.c        **** #if(UART == ENABLED)
 134:main.c        ****     isr_rx_StartEx(RxIsr);
 135:main.c        **** #endif /* UART == ENABLED */
 136:main.c        ****     
 137:main.c        ****     /* Enable global interrupts. */
 138:main.c        ****     CyGlobalIntEnable;
 139:main.c        ****     /* Start Watchdog and its check timer */
 140:main.c        ****     CyWdtStart(CYWDT_1024_TICKS, CYWDT_LPMODE_NOCHANGE); // 2.048 - 3.072 s
 141:main.c        ****     checkWatchDogTimer_Start();
 142:main.c        ****     watchDogCheck_StartEx(watchDogCheck);
 143:main.c        ****     
 144:main.c        ****     /*Block initializations*/
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 4


 145:main.c        ****     UART_Start(); 
 146:main.c        ****     LCD_Start();
 147:main.c        ****     PWM_Modulator_Start();
 148:main.c        ****     PWM_Switch_Timer_Start();
 149:main.c        ****     /* Start Interrupts */
 150:main.c        ****     isr_sec_StartEx(isr_sec);
 151:main.c        ****     Sleep_ISR_StartEx(wakeUpIsr);
 152:main.c        ****     
 153:main.c        **** //    // Set PWM to AUDIBLE_FREQ
 154:main.c        **** //    PWM_1_WritePeriod(FREQ(AUDIBLE_FREQ));
 155:main.c        **** //    PWM_1_WriteCompare((FREQ(AUDIBLE_FREQ))/2); // Sets pulse width to half
 156:main.c        **** //    
 157:main.c        **** //    // Set PWM to ONE_FREQ
 158:main.c        **** //    PWM_2_WritePeriod(FREQ(ONE_FREQ));
 159:main.c        **** //    PWM_2_WriteCompare((FREQ(ONE_FREQ))/2); // Sets pulse width to half
 160:main.c        **** //    
 161:main.c        **** //    // Set PWM to ZERO_FREQ
 162:main.c        **** //    PWM_3_WritePeriod(FREQ(ZERO_FREQ));
 163:main.c        **** //    PWM_3_WriteCompare((FREQ(ZERO_FREQ))/2); // Sets pulse width to half
 164:main.c        ****     
 165:main.c        ****     /* Clear LCD line. */
 166:main.c        ****     LCD_Position(0u, 0u);
 167:main.c        ****     LCD_PrintString("                    ");
 168:main.c        **** 
 169:main.c        ****     /* Output string on LCD. */
 170:main.c        ****     LCD_Position(0u, 0u);
 171:main.c        ****     LCD_PrintString("Hello");
 172:main.c        ****     CyDelay(FiveSecs);
 173:main.c        **** 
 174:main.c        ****     for(;;)
 175:main.c        ****     {
 176:main.c        ****         if(errorStatus != 0u)
 177:main.c        ****         {
 178:main.c        ****             /* Clear error status */
 179:main.c        ****             errorStatus = 0u;
 180:main.c        ****         }
 181:main.c        ****         switch(currentByte){
 182:main.c        ****             case Encoding_Byte1:
 183:main.c        ****                 bitCase = Byte(PREFIX_MESSAGE, bitTime);
 184:main.c        ****                 break;
 185:main.c        ****             case Data:
 186:main.c        ****                 bitCase = Byte(crabsToSend, bitTime);
 187:main.c        ****                 break;
 188:main.c        ****             case Parity:
 189:main.c        ****                 ParityFlag = TRUE;
 190:main.c        ****                 bitCase = FindParity();
 191:main.c        ****                 break;
 192:main.c        ****             case Decoding_Byte1:
 193:main.c        ****                 bitCase = Byte(DECODE_VALUE, bitTime);
 194:main.c        ****                 break;
 195:main.c        ****  
 196:main.c        ****             default:
 197:main.c        ****                 sendDataCount++; // count how many times we send data
 198:main.c        ****                 // Turn sending off until new data from UART
 199:main.c        ****                 newDataflag = FALSE;
 200:main.c        ****                 //encode used to transmit 7 1's for the prefix 
 201:main.c        ****                 //reset here to be ready for case 0 
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 5


 202:main.c        ****                 prefixTime = 0;
 203:main.c        ****                 
 204:main.c        **** #if(UART == ENABLED)
 205:main.c        ****                 data_turn++;
 206:main.c        ****                 if (data_turn == DATA_LENGTH) {
 207:main.c        ****                     data_turn = 0;
 208:main.c        ****                 }
 209:main.c        **** #else 
 210:main.c        ****                 // Restart data if sent MAX_DATA_SENDING
 211:main.c        ****                 if(sendDataCount >= MAX_DATA_SENDING){
 212:main.c        ****                     sendDataCount = 0;
 213:main.c        ****                     crabsToSend <<= 1; // Move over data a bit
 214:main.c        ****                     data_turn++;
 215:main.c        ****                     maxDataFlag = TRUE; // flag for extra 2 second delay between new data
 216:main.c        ****                 }
 217:main.c        ****                 //Once data to be sent can't be contained in a byte, reset to 0x1
 218:main.c        ****                 if (data_turn >= DATA_LENGTH-1) {
 219:main.c        ****                     data_turn = 0;
 220:main.c        ****                     crabsToSend = ONE;
 221:main.c        ****                 }
 222:main.c        ****                 
 223:main.c        ****                 /* Clear LCD line. */
 224:main.c        ****                 LCD_Position(0u, 0u);
 225:main.c        ****                 sprintf(data,"Crabs: %d", crabsToSend);
 226:main.c        ****                 LCD_PrintString("             ");
 227:main.c        **** 
 228:main.c        ****                 /* Output string on LCD. */
 229:main.c        ****                 LCD_Position(0u, 0u);
 230:main.c        ****                 LCD_PrintString(data);
 231:main.c        ****  
 232:main.c        **** #endif /* UART == ENABLED */
 233:main.c        **** 
 234:main.c        ****                 // Turn off PWM and stop timer 
 235:main.c        ****                 PWM_Modulator_Stop();
 236:main.c        ****                 PWM_Switch_Timer_Stop();
 237:main.c        ****                 HighVoltage_Write(0); // Turn High Voltage off while delaying
 238:main.c        ****                 CyDelay(20);
 239:main.c        ****                 SignalBase_Write(0);               
 240:main.c        ****                 
 241:main.c        ****                 if(sendDataCount >= MAX_DATA_SENDING){
 242:main.c        ****                     SleepTimer_Start();
 243:main.c        ****                     goToSleep();
 244:main.c        ****                     // PSoC Sleep command. To adjust sleep time, change in the hardware
 245:main.c        ****                     CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW);
 246:main.c        ****                 }
 247:main.c        **** 
 248:main.c        **** #if(UART == ENABLED)
 249:main.c        ****                 /* Check if data has been sent 3 time */
 250:main.c        ****                 if(sendDataCount >= MAX_DATA_SENDING){
 251:main.c        ****                     RxWakeUp_StartEx(RxWakeUp); //Start UART interrupt while in sleep mode
 252:main.c        ****                     sendDataCount = 0; // reset for sending new data
 253:main.c        ****                     /* Wait for new data before sending out data */
 254:main.c        ****                     while(newDataflag == FALSE){
 255:main.c        ****                         CyWdtClear(); // Clear watchdog timer while in sleep
 256:main.c        ****                         // PSoC Sleep command. To adjust sleep time, change in the hardware
 257:main.c        ****                         //CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW);
 258:main.c        ****                     }
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 6


 259:main.c        ****                     //New Transmission, wake up PSOC
 260:main.c        ****                     RxWakeUp_Stop();
 261:main.c        ****                     SleepTimer_Stop();
 262:main.c        ****                     wakeUp(); 
 263:main.c        ****                 }else{
 264:main.c        ****                     /* Delay 1 s before sending out for MAX_DATA_SENDING times */
 265:main.c        ****                     CyDelay(1000);
 266:main.c        ****                 }
 267:main.c        **** #else 
 268:main.c        ****                 if(maxDataFlag == TRUE){
 269:main.c        ****                     /* Delay in ms and send data after without waiting for UART */
 270:main.c        ****                     while(wakeUpData == FALSE){
 271:main.c        ****                         CyWdtClear(); // Clear watchdog timer while in sleep
 272:main.c        ****                         // PSoC Sleep command. To adjust sleep time, change in the hardware
 273:main.c        ****                         CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW);
 274:main.c        ****                     }
 275:main.c        ****                     maxDataFlag = FALSE;
 276:main.c        ****                     wakeUpData = FALSE;
 277:main.c        ****                     //New Transmission, wake up PSOC
 278:main.c        ****                     SleepTimer_Stop();
 279:main.c        ****                     wakeUp(); 
 280:main.c        ****                 }else{
 281:main.c        ****                     // Sending data again, pause 1 s in between
 282:main.c        ****                     CyDelay(1000);
 283:main.c        ****                 }
 284:main.c        ****                 
 285:main.c        **** #endif /* UART == ENABLED */
 286:main.c        **** 
 287:main.c        ****                 /* New data: Turn on circuitry and begin transmission */
 288:main.c        ****                 HighVoltage_Write(1);
 289:main.c        ****                 CyDelay(20); // Give voltage booster time to charge up
 290:main.c        ****                 SignalBase_Write(1);
 291:main.c        ****                 /* Reset PWM blocks and bitTime for new transmission */
 292:main.c        ****                 bitTime = 0; 
 293:main.c        ****                 PWM_Modulator_Start();
 294:main.c        ****                 PWM_Switch_Timer_Start();
 295:main.c        ****                 currentByte = Encoding_Byte1;
 296:main.c        ****                 break;
 297:main.c        ****          } //end switch(bitTime) 
 298:main.c        ****         
 299:main.c        ****         /* Send out frequency depending on bit is 1 or 0 */
 300:main.c        ****         if(bitCase == ONE){
 301:main.c        ****             SignalBase_Write(1);
 302:main.c        ****             PWM_Modulator_Start();
 303:main.c        ****             PWM_Modulator_WritePeriod(FREQ(ONE_FREQ));
 304:main.c        ****             PWM_Modulator_WriteCompare((FREQ(ONE_FREQ))/2); // Sets pulse width
 305:main.c        ****         }else if(bitCase == ZERO){
 306:main.c        ****             PWM_Modulator_Stop();
 307:main.c        ****             SignalBase_Write(0);
 308:main.c        ****         } // end if statement
 309:main.c        ****     } // end for loop
 310:main.c        **** } // end main
 311:main.c        **** 
 312:main.c        **** /*
 313:main.c        ****  * function: int Byte(unsigned int hex_value, int bT)
 314:main.c        ****  * parameters: hex_value - a byte specifying what data you want to send
 315:main.c        ****  *             bT - the current bit time
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 7


 316:main.c        ****  * returns: bitCase - a high or low signal to be sent to an output pin
 317:main.c        ****  * description: This function takes in a hex value and sends it out a bit at a
 318:main.c        ****  *  time as a high or low signal depending on the bit time.
 319:main.c        ****  */
 320:main.c        **** int Byte(unsigned int hex_value, int bT)
 321:main.c        **** {
 322:main.c        ****     int bitCase;
 323:main.c        ****     switch(bT){
 324:main.c        ****         case 0:
 325:main.c        ****             bitCase = (hex_value & BIT_7_MASK) >> 7;
 326:main.c        ****             break;
 327:main.c        ****         case 1:
 328:main.c        ****             bitCase = (hex_value & BIT_6_MASK) >> 6;
 329:main.c        ****             break; 
 330:main.c        ****         case 2:
 331:main.c        ****             bitCase = (hex_value & BIT_5_MASK) >> 5;
 332:main.c        ****             break; 
 333:main.c        ****         case 3:
 334:main.c        ****             bitCase = (hex_value & BIT_4_MASK) >> 4;
 335:main.c        ****             break;
 336:main.c        ****         case 4:
 337:main.c        ****             bitCase = (hex_value & BIT_3_MASK) >> 3;
 338:main.c        ****             break; 
 339:main.c        ****         case 5:
 340:main.c        ****             bitCase = (hex_value & BIT_2_MASK) >> 2;
 341:main.c        ****             break; 
 342:main.c        ****         case 6:
 343:main.c        ****             bitCase = (hex_value & BIT_1_MASK) >> 1;
 344:main.c        ****             break; 
 345:main.c        ****         case 7:
 346:main.c        ****             bitCase = (hex_value & BIT_0_MASK);
 347:main.c        ****             break;
 348:main.c        ****         default:
 349:main.c        ****             break;
 350:main.c        ****     } //end switch(bT)
 351:main.c        ****     return bitCase;
 352:main.c        **** }//end Byte()
 353:main.c        **** 
 354:main.c        **** 
 355:main.c        **** /*
 356:main.c        ****  * function: void FindParity(void)
 357:main.c        ****  * parameters: void
 358:main.c        ****  * returns: void
 359:main.c        ****  * description: XORs each bit of data to get even or odd parity for
 360:main.c        ****  * error checking
 361:main.c        ****  */
 362:main.c        **** int FindParity()
 363:main.c        **** {
 364:main.c        ****     uint8 bitToCheck = crabsToSend; // store crabsToSend in new variable to manipulate
 365:main.c        ****     int i = 0;
 366:main.c        ****     int parity = (bitToCheck & BIT_0_MASK);
 367:main.c        ****     for(i = 0; i < DATA_LENGTH; i++){
 368:main.c        ****         bitToCheck = bitToCheck >> 1; // shift mask over
 369:main.c        ****         parity = (bitToCheck & BIT_0_MASK) ^ parity; // XOR new bit
 370:main.c        ****     }
 371:main.c        ****     return parity;
 372:main.c        **** }   
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 8


 373:main.c        **** 
 374:main.c        **** /*
 375:main.c        ****  * function: void wakeUp(void)
 376:main.c        ****  * parameters: none
 377:main.c        ****  * returns: none
 378:main.c        ****  * description: wakes up all modules and restores clocks
 379:main.c        ****  *  
 380:main.c        ****  */
 381:main.c        **** 
 382:main.c        **** void wakeUp(void){
 383:main.c        ****     //sleepToggle_Write(OFF);
 384:main.c        ****     //CyPmRestoreClocks();
 385:main.c        ****     LCD_Wakeup();
 386:main.c        ****     checkWatchDogTimer_Wakeup();
 387:main.c        ****     PWM_Modulator_Wakeup();
 388:main.c        ****     PWM_Switch_Timer_Wakeup(); 
 389:main.c        ****     PWM_Switch_Timer_Start();
 390:main.c        ****     
 391:main.c        **** }
 392:main.c        **** 
 393:main.c        **** /*
 394:main.c        ****  * function: void goToSleep(void)
 395:main.c        ****  * parameters: none
 396:main.c        ****  * returns: none
 397:main.c        ****  * description: puts all modules to sleep and save clocks
 398:main.c        ****  *  
 399:main.c        ****  */
 400:main.c        **** void goToSleep(){
 401:main.c        ****     //sleepToggle_Write(ON);
 402:main.c        ****     LCD_Sleep();
 403:main.c        ****     PWM_Modulator_Sleep();
 404:main.c        ****     PWM_Switch_Timer_Sleep();
 405:main.c        ****     checkWatchDogTimer_Sleep();
 406:main.c        ****     UART_Sleep();
 407:main.c        ****     watchDogCheck_ClearPending();
 408:main.c        ****     isr_sec_ClearPending();
 409:main.c        ****     isr_rx_ClearPending();
 410:main.c        ****     CyPmSaveClocks();
 411:main.c        **** 
 412:main.c        **** }
 413:main.c        **** 
 414:main.c        **** 
 415:main.c        **** /*******************************************************************************
 416:main.c        **** * Function Name: isr_sec
 417:main.c        **** ********************************************************************************
 418:main.c        **** *
 419:main.c        **** * Summary:
 420:main.c        **** * Interrupt triggered on a 0.1s timer timeout
 421:main.c        ****  * This ISR will activate every half second and keep track of what
 422:main.c        ****  *  current bit we are on within a byte. After every 8th bit, it resets and
 423:main.c        ****  *  moves on to a new byte.
 424:main.c        **** *
 425:main.c        **** * Parameters:
 426:main.c        **** *  None.
 427:main.c        **** *
 428:main.c        **** * Return:
 429:main.c        **** *  None.
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 9


 430:main.c        **** *
 431:main.c        **** *******************************************************************************/
 432:main.c        **** CY_ISR(isr_sec)
 433:main.c        **** {
  28              		.loc 1 433 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 434:main.c        ****     bitTime++;
  33              		.loc 1 434 0
  34 0000 0C4B     		ldr	r3, .L4
  35 0002 1A68     		ldr	r2, [r3]
  36 0004 0132     		adds	r2, r2, #1
  37 0006 1A60     		str	r2, [r3]
 435:main.c        ****     /* Only want to send one bit for parity */
 436:main.c        ****     if(ParityFlag == TRUE){
  38              		.loc 1 436 0
  39 0008 5B68     		ldr	r3, [r3, #4]
  40 000a 012B     		cmp	r3, #1
  41 000c 06D1     		bne	.L2
 437:main.c        ****         bitTime = 0;
  42              		.loc 1 437 0
  43 000e 094B     		ldr	r3, .L4
  44 0010 0021     		movs	r1, #0
  45 0012 1960     		str	r1, [r3]
 438:main.c        ****         currentByte++;
  46              		.loc 1 438 0
  47 0014 9A68     		ldr	r2, [r3, #8]
  48 0016 0132     		adds	r2, r2, #1
  49 0018 9A60     		str	r2, [r3, #8]
 439:main.c        ****         ParityFlag = FALSE;
  50              		.loc 1 439 0
  51 001a 5960     		str	r1, [r3, #4]
  52              	.L2:
 440:main.c        ****     }
 441:main.c        ****     if (bitTime == 8){
  53              		.loc 1 441 0
  54 001c 054B     		ldr	r3, .L4
  55 001e 1B68     		ldr	r3, [r3]
  56 0020 082B     		cmp	r3, #8
  57 0022 05D1     		bne	.L1
 442:main.c        ****         bitTime = 0;
  58              		.loc 1 442 0
  59 0024 034B     		ldr	r3, .L4
  60 0026 0022     		movs	r2, #0
  61 0028 1A60     		str	r2, [r3]
 443:main.c        ****         currentByte++;
  62              		.loc 1 443 0
  63 002a 9A68     		ldr	r2, [r3, #8]
  64 002c 0132     		adds	r2, r2, #1
  65 002e 9A60     		str	r2, [r3, #8]
  66              	.L1:
  67 0030 7047     		bx	lr
  68              	.L5:
  69 0032 00BF     		.align	2
  70              	.L4:
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 10


  71 0034 00000000 		.word	.LANCHOR0
  72              		.cfi_endproc
  73              	.LFE69:
  74              		.size	isr_sec, .-isr_sec
  75              		.section	.text.watchDogCheck,"ax",%progbits
  76              		.align	2
  77              		.global	watchDogCheck
  78              		.thumb
  79              		.thumb_func
  80              		.type	watchDogCheck, %function
  81              	watchDogCheck:
  82              	.LFB71:
 444:main.c        ****     }
 445:main.c        **** }//end CY_ISR(isr_sec)
 446:main.c        **** 
 447:main.c        **** /*******************************************************************************
 448:main.c        **** * Function Name: RxIsr
 449:main.c        **** ********************************************************************************
 450:main.c        **** *
 451:main.c        **** * Summary:
 452:main.c        **** *  Interrupt Service Routine for RX portion of the UART taken from
 453:main.c        **** *  example code and edited for storing data to send
 454:main.c        **** *
 455:main.c        **** * Parameters:
 456:main.c        **** *  None.
 457:main.c        **** *
 458:main.c        **** * Return:
 459:main.c        **** *  None.
 460:main.c        **** *
 461:main.c        **** *******************************************************************************/
 462:main.c        **** CY_ISR(RxIsr)
 463:main.c        **** {
 464:main.c        ****     
 465:main.c        ****     sleepToggle_Write(ON);
 466:main.c        ****     uint8 rxStatus;   
 467:main.c        ****     do
 468:main.c        ****     {
 469:main.c        ****         /* Read receiver status register */
 470:main.c        ****         rxStatus = UART_RXSTATUS_REG;
 471:main.c        **** 
 472:main.c        ****         if((rxStatus & (UART_RX_STS_BREAK      | UART_RX_STS_PAR_ERROR |
 473:main.c        ****                         UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 474:main.c        ****         {
 475:main.c        ****             /* ERROR handling. */
 476:main.c        ****             errorStatus |= rxStatus & ( UART_RX_STS_BREAK      | UART_RX_STS_PAR_ERROR | 
 477:main.c        ****                                         UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN);
 478:main.c        ****         }
 479:main.c        ****         
 480:main.c        ****         if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 481:main.c        ****         {
 482:main.c        ****             newDataflag = TRUE;
 483:main.c        ****             /* Read data from the RX data register */
 484:main.c        ****             //crabsToSend = UART_RXDATA_REG;
 485:main.c        ****             crabsToSend =  UART_GetByte()  ;
 486:main.c        ****             if(errorStatus == 0u)
 487:main.c        ****             {
 488:main.c        ****                 /* Send data backward */
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 11


 489:main.c        ****                 UART_TXDATA_REG = crabsToSend;
 490:main.c        ****                 /* Clear LCD line. */
 491:main.c        ****                 LCD_Position(0u, 0u);
 492:main.c        ****                 sprintf(data,"Crabs: %d", crabsToSend);
 493:main.c        ****                 LCD_PrintString("             ");
 494:main.c        ****                 /* Output string on LCD. */
 495:main.c        ****                 LCD_Position(0u, 0u);
 496:main.c        ****                 LCD_PrintString(data);
 497:main.c        **** 
 498:main.c        ****             }else{
 499:main.c        ****                 isr_rx_SetPending();
 500:main.c        ****                 sprintf(data,"%d", errorStatus);
 501:main.c        ****                 LCD_PrintString(data);
 502:main.c        ****             }
 503:main.c        **** 
 504:main.c        ****         }
 505:main.c        ****     }while((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u);
 506:main.c        ****     
 507:main.c        ****     isr_rx_ClearPending();
 508:main.c        ****     sleepToggle_Write(OFF);
 509:main.c        **** }
 510:main.c        **** 
 511:main.c        **** /*******************************************************************************
 512:main.c        **** * Function Name: watchDogCheck
 513:main.c        **** ********************************************************************************
 514:main.c        **** *
 515:main.c        **** * Summary:
 516:main.c        **** * Reset watchDog timer every 1.4s
 517:main.c        **** * Watchdog should reset system between 2-3s
 518:main.c        **** * Should not get triggered if system experiencing drift 
 519:main.c        **** *
 520:main.c        **** * Parameters:
 521:main.c        **** *  None.
 522:main.c        **** *
 523:main.c        **** * Return:
 524:main.c        **** *  None.
 525:main.c        **** *
 526:main.c        **** *******************************************************************************/
 527:main.c        **** CY_ISR(watchDogCheck){
  83              		.loc 1 527 0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87 0000 08B5     		push	{r3, lr}
  88              		.cfi_def_cfa_offset 8
  89              		.cfi_offset 3, -8
  90              		.cfi_offset 14, -4
 528:main.c        ****     
 529:main.c        ****     CyWdtClear(); 
  91              		.loc 1 529 0
  92 0002 FFF7FEFF 		bl	CyWdtClear
  93              	.LVL0:
  94 0006 08BD     		pop	{r3, pc}
  95              		.cfi_endproc
  96              	.LFE71:
  97              		.size	watchDogCheck, .-watchDogCheck
  98              		.section	.text.RxIsr,"ax",%progbits
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 12


  99              		.align	2
 100              		.global	RxIsr
 101              		.thumb
 102              		.thumb_func
 103              		.type	RxIsr, %function
 104              	RxIsr:
 105              	.LFB70:
 463:main.c        ****     
 106              		.loc 1 463 0
 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 0
 109              		@ frame_needed = 0, uses_anonymous_args = 0
 110 0000 38B5     		push	{r3, r4, r5, lr}
 111              		.cfi_def_cfa_offset 16
 112              		.cfi_offset 3, -16
 113              		.cfi_offset 4, -12
 114              		.cfi_offset 5, -8
 115              		.cfi_offset 14, -4
 465:main.c        ****     uint8 rxStatus;   
 116              		.loc 1 465 0
 117 0002 0120     		movs	r0, #1
 118 0004 FFF7FEFF 		bl	sleepToggle_Write
 119              	.LVL1:
 120              	.L12:
 470:main.c        **** 
 121              		.loc 1 470 0
 122 0008 234B     		ldr	r3, .L14
 123 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 124 000c DBB2     		uxtb	r3, r3
 125              	.LVL2:
 472:main.c        ****                         UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 126              		.loc 1 472 0
 127 000e 13F01E0F 		tst	r3, #30
 128 0012 05D0     		beq	.L9
 476:main.c        ****                                         UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN);
 129              		.loc 1 476 0
 130 0014 2148     		ldr	r0, .L14+4
 131 0016 03F01E02 		and	r2, r3, #30
 132 001a 017B     		ldrb	r1, [r0, #12]	@ zero_extendqisi2
 133 001c 0A43     		orrs	r2, r2, r1
 134 001e 0273     		strb	r2, [r0, #12]
 135              	.L9:
 136 0020 03F02003 		and	r3, r3, #32
 137              	.LVL3:
 480:main.c        ****         {
 138              		.loc 1 480 0
 139 0024 03F0FF04 		and	r4, r3, #255
 140 0028 6BB3     		cbz	r3, .L10
 482:main.c        ****             /* Read data from the RX data register */
 141              		.loc 1 482 0
 142 002a 1C4D     		ldr	r5, .L14+4
 143 002c 0123     		movs	r3, #1
 144 002e 6B73     		strb	r3, [r5, #13]
 485:main.c        ****             if(errorStatus == 0u)
 145              		.loc 1 485 0
 146 0030 FFF7FEFF 		bl	UART_GetByte
 147              	.LVL4:
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 13


 148 0034 C0B2     		uxtb	r0, r0
 149 0036 1A4B     		ldr	r3, .L14+8
 150 0038 1870     		strb	r0, [r3]
 486:main.c        ****             {
 151              		.loc 1 486 0
 152 003a 2B7B     		ldrb	r3, [r5, #12]	@ zero_extendqisi2
 153 003c BBB9     		cbnz	r3, .L11
 489:main.c        ****                 /* Clear LCD line. */
 154              		.loc 1 489 0
 155 003e 194B     		ldr	r3, .L14+12
 156 0040 1870     		strb	r0, [r3]
 491:main.c        ****                 sprintf(data,"Crabs: %d", crabsToSend);
 157              		.loc 1 491 0
 158 0042 0021     		movs	r1, #0
 159 0044 0846     		mov	r0, r1
 160 0046 FFF7FEFF 		bl	LCD_Position
 161              	.LVL5:
 492:main.c        ****                 LCD_PrintString("             ");
 162              		.loc 1 492 0
 163 004a 174D     		ldr	r5, .L14+16
 164 004c 144B     		ldr	r3, .L14+8
 165 004e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 166 0050 1649     		ldr	r1, .L14+20
 167 0052 2846     		mov	r0, r5
 168 0054 FFF7FEFF 		bl	sprintf
 169              	.LVL6:
 493:main.c        ****                 /* Output string on LCD. */
 170              		.loc 1 493 0
 171 0058 1548     		ldr	r0, .L14+24
 172 005a FFF7FEFF 		bl	LCD_PrintString
 173              	.LVL7:
 495:main.c        ****                 LCD_PrintString(data);
 174              		.loc 1 495 0
 175 005e 0021     		movs	r1, #0
 176 0060 0846     		mov	r0, r1
 177 0062 FFF7FEFF 		bl	LCD_Position
 178              	.LVL8:
 496:main.c        **** 
 179              		.loc 1 496 0
 180 0066 2846     		mov	r0, r5
 181 0068 FFF7FEFF 		bl	LCD_PrintString
 182              	.LVL9:
 183 006c 0BE0     		b	.L10
 184              	.L11:
 499:main.c        ****                 sprintf(data,"%d", errorStatus);
 185              		.loc 1 499 0
 186 006e FFF7FEFF 		bl	isr_rx_SetPending
 187              	.LVL10:
 500:main.c        ****                 LCD_PrintString(data);
 188              		.loc 1 500 0
 189 0072 0D4D     		ldr	r5, .L14+16
 190 0074 094B     		ldr	r3, .L14+4
 191 0076 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2
 192 0078 0E49     		ldr	r1, .L14+28
 193 007a 2846     		mov	r0, r5
 194 007c FFF7FEFF 		bl	sprintf
 195              	.LVL11:
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 14


 501:main.c        ****             }
 196              		.loc 1 501 0
 197 0080 2846     		mov	r0, r5
 198 0082 FFF7FEFF 		bl	LCD_PrintString
 199              	.LVL12:
 200              	.L10:
 505:main.c        ****     
 201              		.loc 1 505 0
 202 0086 002C     		cmp	r4, #0
 203 0088 BED1     		bne	.L12
 507:main.c        ****     sleepToggle_Write(OFF);
 204              		.loc 1 507 0
 205 008a FFF7FEFF 		bl	isr_rx_ClearPending
 206              	.LVL13:
 508:main.c        **** }
 207              		.loc 1 508 0
 208 008e 0020     		movs	r0, #0
 209 0090 FFF7FEFF 		bl	sleepToggle_Write
 210              	.LVL14:
 211 0094 38BD     		pop	{r3, r4, r5, pc}
 212              	.L15:
 213 0096 00BF     		.align	2
 214              	.L14:
 215 0098 69640040 		.word	1073767529
 216 009c 00000000 		.word	.LANCHOR0
 217 00a0 00000000 		.word	.LANCHOR1
 218 00a4 45650040 		.word	1073767749
 219 00a8 00000000 		.word	data
 220 00ac 00000000 		.word	.LC0
 221 00b0 0C000000 		.word	.LC1
 222 00b4 1C000000 		.word	.LC2
 223              		.cfi_endproc
 224              	.LFE70:
 225              		.size	RxIsr, .-RxIsr
 226              		.section	.text.wakeUpIsr,"ax",%progbits
 227              		.align	2
 228              		.global	wakeUpIsr
 229              		.thumb
 230              		.thumb_func
 231              		.type	wakeUpIsr, %function
 232              	wakeUpIsr:
 233              	.LFB72:
 530:main.c        **** }
 531:main.c        **** 
 532:main.c        **** 
 533:main.c        **** /*******************************************************************************
 534:main.c        **** * Function Name: wakeUpIsr
 535:main.c        **** ********************************************************************************
 536:main.c        **** *
 537:main.c        **** * Summary:
 538:main.c        **** * Sleep Timer interrupt to check for new data every 1.024 s
 539:main.c        **** * Also resets watch dog timer when watchDogCheck timer is asleep
 540:main.c        **** *
 541:main.c        **** * Parameters:
 542:main.c        **** *  None.
 543:main.c        **** *
 544:main.c        **** * Return:
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 15


 545:main.c        **** *  None.
 546:main.c        **** *
 547:main.c        **** *******************************************************************************/
 548:main.c        **** CY_ISR(wakeUpIsr){
 234              		.loc 1 548 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238 0000 08B5     		push	{r3, lr}
 239              		.cfi_def_cfa_offset 8
 240              		.cfi_offset 3, -8
 241              		.cfi_offset 14, -4
 549:main.c        ****     SleepTimer_GetStatus(); // Clears the sleep timer interrupt
 242              		.loc 1 549 0
 243 0002 FFF7FEFF 		bl	SleepTimer_GetStatus
 244              	.LVL15:
 550:main.c        ****     CyWdtClear(); // Clear watchdog timer while in sleep
 245              		.loc 1 550 0
 246 0006 FFF7FEFF 		bl	CyWdtClear
 247              	.LVL16:
 551:main.c        ****     sleepCount++;
 248              		.loc 1 551 0
 249 000a 054A     		ldr	r2, .L19
 250 000c 1369     		ldr	r3, [r2, #16]
 251 000e 0133     		adds	r3, r3, #1
 252 0010 1361     		str	r3, [r2, #16]
 552:main.c        ****     if(sleepCount > MAX_SLEEP_COUNT){
 253              		.loc 1 552 0
 254 0012 052B     		cmp	r3, #5
 255 0014 02DD     		ble	.L16
 553:main.c        ****         wakeUpData = TRUE;
 554:main.c        ****         sleepCount = 0;
 256              		.loc 1 554 0
 257 0016 0022     		movs	r2, #0
 258 0018 014B     		ldr	r3, .L19
 259 001a 1A61     		str	r2, [r3, #16]
 260              	.L16:
 261 001c 08BD     		pop	{r3, pc}
 262              	.L20:
 263 001e 00BF     		.align	2
 264              	.L19:
 265 0020 00000000 		.word	.LANCHOR0
 266              		.cfi_endproc
 267              	.LFE72:
 268              		.size	wakeUpIsr, .-wakeUpIsr
 269              		.section	.text.RxWakeUp,"ax",%progbits
 270              		.align	2
 271              		.global	RxWakeUp
 272              		.thumb
 273              		.thumb_func
 274              		.type	RxWakeUp, %function
 275              	RxWakeUp:
 276              	.LFB73:
 555:main.c        ****     }
 556:main.c        **** 
 557:main.c        **** } //end CY_ISR(wakeUpIsr)
 558:main.c        **** 
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 16


 559:main.c        **** /*******************************************************************************
 560:main.c        **** * Function Name: wakeUpIsr
 561:main.c        **** ********************************************************************************
 562:main.c        **** *
 563:main.c        **** * Summary:
 564:main.c        **** * Sleep Timer interrupt to wake up PSoC from sleep
 565:main.c        **** *
 566:main.c        **** * Parameters:
 567:main.c        **** *  None.
 568:main.c        **** *
 569:main.c        **** * Return:
 570:main.c        **** *  None.
 571:main.c        **** *
 572:main.c        **** *******************************************************************************/
 573:main.c        **** CY_ISR(RxWakeUp){
 277              		.loc 1 573 0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 0
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 281 0000 08B5     		push	{r3, lr}
 282              		.cfi_def_cfa_offset 8
 283              		.cfi_offset 3, -8
 284              		.cfi_offset 14, -4
 574:main.c        ****     CyPmRestoreClocks();
 285              		.loc 1 574 0
 286 0002 FFF7FEFF 		bl	CyPmRestoreClocks
 287              	.LVL17:
 575:main.c        ****     UART_Wakeup();
 288              		.loc 1 575 0
 289 0006 FFF7FEFF 		bl	UART_Wakeup
 290              	.LVL18:
 576:main.c        ****     UART_Start();
 291              		.loc 1 576 0
 292 000a FFF7FEFF 		bl	UART_Start
 293              	.LVL19:
 577:main.c        ****     isr_rx_StartEx(RxIsr);
 294              		.loc 1 577 0
 295 000e 0548     		ldr	r0, .L23
 296 0010 FFF7FEFF 		bl	isr_rx_StartEx
 297              	.LVL20:
 578:main.c        ****     RxWakeUp_ClearPending();
 298              		.loc 1 578 0
 299 0014 FFF7FEFF 		bl	RxWakeUp_ClearPending
 300              	.LVL21:
 579:main.c        ****     RxWakeUp_Disable();
 301              		.loc 1 579 0
 302 0018 FFF7FEFF 		bl	RxWakeUp_Disable
 303              	.LVL22:
 580:main.c        ****     isr_rx_SetPending();
 304              		.loc 1 580 0
 305 001c FFF7FEFF 		bl	isr_rx_SetPending
 306              	.LVL23:
 307 0020 08BD     		pop	{r3, pc}
 308              	.L24:
 309 0022 00BF     		.align	2
 310              	.L23:
 311 0024 00000000 		.word	RxIsr
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 17


 312              		.cfi_endproc
 313              	.LFE73:
 314              		.size	RxWakeUp, .-RxWakeUp
 315              		.section	.text.Byte,"ax",%progbits
 316              		.align	2
 317              		.global	Byte
 318              		.thumb
 319              		.thumb_func
 320              		.type	Byte, %function
 321              	Byte:
 322              	.LFB65:
 321:main.c        ****     int bitCase;
 323              		.loc 1 321 0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 0
 326              		@ frame_needed = 0, uses_anonymous_args = 0
 327              		@ link register save eliminated.
 328              	.LVL24:
 323:main.c        ****         case 0:
 329              		.loc 1 323 0
 330 0000 0729     		cmp	r1, #7
 331 0002 1CD8     		bhi	.L26
 332 0004 DFE801F0 		tbb	[pc, r1]
 333              	.L28:
 334 0008 04       		.byte	(.L27-.L28)/2
 335 0009 07       		.byte	(.L29-.L28)/2
 336 000a 0A       		.byte	(.L30-.L28)/2
 337 000b 0D       		.byte	(.L31-.L28)/2
 338 000c 10       		.byte	(.L32-.L28)/2
 339 000d 13       		.byte	(.L33-.L28)/2
 340 000e 16       		.byte	(.L34-.L28)/2
 341 000f 19       		.byte	(.L35-.L28)/2
 342              		.p2align 1
 343              	.L27:
 325:main.c        ****             break;
 344              		.loc 1 325 0
 345 0010 C0F3C013 		ubfx	r3, r0, #7, #1
 346              	.LVL25:
 326:main.c        ****         case 1:
 347              		.loc 1 326 0
 348 0014 13E0     		b	.L26
 349              	.LVL26:
 350              	.L29:
 328:main.c        ****             break; 
 351              		.loc 1 328 0
 352 0016 C0F38013 		ubfx	r3, r0, #6, #1
 353              	.LVL27:
 329:main.c        ****         case 2:
 354              		.loc 1 329 0
 355 001a 10E0     		b	.L26
 356              	.LVL28:
 357              	.L30:
 331:main.c        ****             break; 
 358              		.loc 1 331 0
 359 001c C0F34013 		ubfx	r3, r0, #5, #1
 360              	.LVL29:
 332:main.c        ****         case 3:
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 18


 361              		.loc 1 332 0
 362 0020 0DE0     		b	.L26
 363              	.LVL30:
 364              	.L31:
 334:main.c        ****             break;
 365              		.loc 1 334 0
 366 0022 C0F30013 		ubfx	r3, r0, #4, #1
 367              	.LVL31:
 335:main.c        ****         case 4:
 368              		.loc 1 335 0
 369 0026 0AE0     		b	.L26
 370              	.LVL32:
 371              	.L32:
 337:main.c        ****             break; 
 372              		.loc 1 337 0
 373 0028 C0F3C003 		ubfx	r3, r0, #3, #1
 374              	.LVL33:
 338:main.c        ****         case 5:
 375              		.loc 1 338 0
 376 002c 07E0     		b	.L26
 377              	.LVL34:
 378              	.L33:
 340:main.c        ****             break; 
 379              		.loc 1 340 0
 380 002e C0F38003 		ubfx	r3, r0, #2, #1
 381              	.LVL35:
 341:main.c        ****         case 6:
 382              		.loc 1 341 0
 383 0032 04E0     		b	.L26
 384              	.LVL36:
 385              	.L34:
 343:main.c        ****             break; 
 386              		.loc 1 343 0
 387 0034 C0F34003 		ubfx	r3, r0, #1, #1
 388              	.LVL37:
 344:main.c        ****         case 7:
 389              		.loc 1 344 0
 390 0038 01E0     		b	.L26
 391              	.LVL38:
 392              	.L35:
 346:main.c        ****             break;
 393              		.loc 1 346 0
 394 003a 00F00103 		and	r3, r0, #1
 395              	.LVL39:
 396              	.L26:
 352:main.c        **** 
 397              		.loc 1 352 0
 398 003e 1846     		mov	r0, r3
 399              	.LVL40:
 400 0040 7047     		bx	lr
 401              		.cfi_endproc
 402              	.LFE65:
 403              		.size	Byte, .-Byte
 404 0042 00BF     		.section	.text.FindParity,"ax",%progbits
 405              		.align	2
 406              		.global	FindParity
 407              		.thumb
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 19


 408              		.thumb_func
 409              		.type	FindParity, %function
 410              	FindParity:
 411              	.LFB66:
 363:main.c        ****     uint8 bitToCheck = crabsToSend; // store crabsToSend in new variable to manipulate
 412              		.loc 1 363 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416              		@ link register save eliminated.
 364:main.c        ****     int i = 0;
 417              		.loc 1 364 0
 418 0000 064B     		ldr	r3, .L39
 419 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 420              	.LVL41:
 366:main.c        ****     for(i = 0; i < DATA_LENGTH; i++){
 421              		.loc 1 366 0
 422 0004 02F00100 		and	r0, r2, #1
 423              	.LVL42:
 367:main.c        ****         bitToCheck = bitToCheck >> 1; // shift mask over
 424              		.loc 1 367 0
 425 0008 0023     		movs	r3, #0
 426 000a 04E0     		b	.L37
 427              	.LVL43:
 428              	.L38:
 368:main.c        ****         parity = (bitToCheck & BIT_0_MASK) ^ parity; // XOR new bit
 429              		.loc 1 368 0 discriminator 3
 430 000c 5208     		lsrs	r2, r2, #1
 431              	.LVL44:
 369:main.c        ****     }
 432              		.loc 1 369 0 discriminator 3
 433 000e 02F00101 		and	r1, r2, #1
 434 0012 4840     		eors	r0, r0, r1
 435              	.LVL45:
 367:main.c        ****         bitToCheck = bitToCheck >> 1; // shift mask over
 436              		.loc 1 367 0 discriminator 3
 437 0014 0133     		adds	r3, r3, #1
 438              	.LVL46:
 439              	.L37:
 367:main.c        ****         bitToCheck = bitToCheck >> 1; // shift mask over
 440              		.loc 1 367 0 is_stmt 0 discriminator 1
 441 0016 072B     		cmp	r3, #7
 442 0018 F8DD     		ble	.L38
 372:main.c        **** 
 443              		.loc 1 372 0 is_stmt 1
 444 001a 7047     		bx	lr
 445              	.L40:
 446              		.align	2
 447              	.L39:
 448 001c 00000000 		.word	.LANCHOR1
 449              		.cfi_endproc
 450              	.LFE66:
 451              		.size	FindParity, .-FindParity
 452              		.section	.text.wakeUp,"ax",%progbits
 453              		.align	2
 454              		.global	wakeUp
 455              		.thumb
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 20


 456              		.thumb_func
 457              		.type	wakeUp, %function
 458              	wakeUp:
 459              	.LFB67:
 382:main.c        ****     //sleepToggle_Write(OFF);
 460              		.loc 1 382 0
 461              		.cfi_startproc
 462              		@ args = 0, pretend = 0, frame = 0
 463              		@ frame_needed = 0, uses_anonymous_args = 0
 464 0000 08B5     		push	{r3, lr}
 465              		.cfi_def_cfa_offset 8
 466              		.cfi_offset 3, -8
 467              		.cfi_offset 14, -4
 385:main.c        ****     checkWatchDogTimer_Wakeup();
 468              		.loc 1 385 0
 469 0002 FFF7FEFF 		bl	LCD_Wakeup
 470              	.LVL47:
 386:main.c        ****     PWM_Modulator_Wakeup();
 471              		.loc 1 386 0
 472 0006 FFF7FEFF 		bl	checkWatchDogTimer_Wakeup
 473              	.LVL48:
 387:main.c        ****     PWM_Switch_Timer_Wakeup(); 
 474              		.loc 1 387 0
 475 000a FFF7FEFF 		bl	PWM_Modulator_Wakeup
 476              	.LVL49:
 388:main.c        ****     PWM_Switch_Timer_Start();
 477              		.loc 1 388 0
 478 000e FFF7FEFF 		bl	PWM_Switch_Timer_Wakeup
 479              	.LVL50:
 389:main.c        ****     
 480              		.loc 1 389 0
 481 0012 FFF7FEFF 		bl	PWM_Switch_Timer_Start
 482              	.LVL51:
 483 0016 08BD     		pop	{r3, pc}
 484              		.cfi_endproc
 485              	.LFE67:
 486              		.size	wakeUp, .-wakeUp
 487              		.section	.text.goToSleep,"ax",%progbits
 488              		.align	2
 489              		.global	goToSleep
 490              		.thumb
 491              		.thumb_func
 492              		.type	goToSleep, %function
 493              	goToSleep:
 494              	.LFB68:
 400:main.c        ****     //sleepToggle_Write(ON);
 495              		.loc 1 400 0
 496              		.cfi_startproc
 497              		@ args = 0, pretend = 0, frame = 0
 498              		@ frame_needed = 0, uses_anonymous_args = 0
 499 0000 08B5     		push	{r3, lr}
 500              		.cfi_def_cfa_offset 8
 501              		.cfi_offset 3, -8
 502              		.cfi_offset 14, -4
 402:main.c        ****     PWM_Modulator_Sleep();
 503              		.loc 1 402 0
 504 0002 FFF7FEFF 		bl	LCD_Sleep
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 21


 505              	.LVL52:
 403:main.c        ****     PWM_Switch_Timer_Sleep();
 506              		.loc 1 403 0
 507 0006 FFF7FEFF 		bl	PWM_Modulator_Sleep
 508              	.LVL53:
 404:main.c        ****     checkWatchDogTimer_Sleep();
 509              		.loc 1 404 0
 510 000a FFF7FEFF 		bl	PWM_Switch_Timer_Sleep
 511              	.LVL54:
 405:main.c        ****     UART_Sleep();
 512              		.loc 1 405 0
 513 000e FFF7FEFF 		bl	checkWatchDogTimer_Sleep
 514              	.LVL55:
 406:main.c        ****     watchDogCheck_ClearPending();
 515              		.loc 1 406 0
 516 0012 FFF7FEFF 		bl	UART_Sleep
 517              	.LVL56:
 407:main.c        ****     isr_sec_ClearPending();
 518              		.loc 1 407 0
 519 0016 FFF7FEFF 		bl	watchDogCheck_ClearPending
 520              	.LVL57:
 408:main.c        ****     isr_rx_ClearPending();
 521              		.loc 1 408 0
 522 001a FFF7FEFF 		bl	isr_sec_ClearPending
 523              	.LVL58:
 409:main.c        ****     CyPmSaveClocks();
 524              		.loc 1 409 0
 525 001e FFF7FEFF 		bl	isr_rx_ClearPending
 526              	.LVL59:
 410:main.c        **** 
 527              		.loc 1 410 0
 528 0022 FFF7FEFF 		bl	CyPmSaveClocks
 529              	.LVL60:
 530 0026 08BD     		pop	{r3, pc}
 531              		.cfi_endproc
 532              	.LFE68:
 533              		.size	goToSleep, .-goToSleep
 534              		.section	.text.main,"ax",%progbits
 535              		.align	2
 536              		.global	main
 537              		.thumb
 538              		.thumb_func
 539              		.type	main, %function
 540              	main:
 541              	.LFB64:
 128:main.c        ****     /*Variable initializations*/
 542              		.loc 1 128 0
 543              		.cfi_startproc
 544              		@ args = 0, pretend = 0, frame = 0
 545              		@ frame_needed = 0, uses_anonymous_args = 0
 546 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 547              		.cfi_def_cfa_offset 24
 548              		.cfi_offset 3, -24
 549              		.cfi_offset 4, -20
 550              		.cfi_offset 5, -16
 551              		.cfi_offset 6, -12
 552              		.cfi_offset 7, -8
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 22


 553              		.cfi_offset 14, -4
 554              	.LVL61:
 134:main.c        **** #endif /* UART == ENABLED */
 555              		.loc 1 134 0
 556 0002 6148     		ldr	r0, .L65
 557 0004 FFF7FEFF 		bl	isr_rx_StartEx
 558              	.LVL62:
 138:main.c        ****     /* Start Watchdog and its check timer */
 559              		.loc 1 138 0
 560              		.syntax unified
 561              	@ 138 "main.c" 1
 562 0008 62B6     		CPSIE   i
 563              	@ 0 "" 2
 140:main.c        ****     checkWatchDogTimer_Start();
 564              		.loc 1 140 0
 565              		.thumb
 566              		.syntax unified
 567 000a 0021     		movs	r1, #0
 568 000c 0320     		movs	r0, #3
 569 000e FFF7FEFF 		bl	CyWdtStart
 570              	.LVL63:
 141:main.c        ****     watchDogCheck_StartEx(watchDogCheck);
 571              		.loc 1 141 0
 572 0012 FFF7FEFF 		bl	checkWatchDogTimer_Start
 573              	.LVL64:
 142:main.c        ****     
 574              		.loc 1 142 0
 575 0016 5D48     		ldr	r0, .L65+4
 576 0018 FFF7FEFF 		bl	watchDogCheck_StartEx
 577              	.LVL65:
 145:main.c        ****     LCD_Start();
 578              		.loc 1 145 0
 579 001c FFF7FEFF 		bl	UART_Start
 580              	.LVL66:
 146:main.c        ****     PWM_Modulator_Start();
 581              		.loc 1 146 0
 582 0020 FFF7FEFF 		bl	LCD_Start
 583              	.LVL67:
 147:main.c        ****     PWM_Switch_Timer_Start();
 584              		.loc 1 147 0
 585 0024 FFF7FEFF 		bl	PWM_Modulator_Start
 586              	.LVL68:
 148:main.c        ****     /* Start Interrupts */
 587              		.loc 1 148 0
 588 0028 FFF7FEFF 		bl	PWM_Switch_Timer_Start
 589              	.LVL69:
 150:main.c        ****     Sleep_ISR_StartEx(wakeUpIsr);
 590              		.loc 1 150 0
 591 002c 5848     		ldr	r0, .L65+8
 592 002e FFF7FEFF 		bl	isr_sec_StartEx
 593              	.LVL70:
 151:main.c        ****     
 594              		.loc 1 151 0
 595 0032 5848     		ldr	r0, .L65+12
 596 0034 FFF7FEFF 		bl	Sleep_ISR_StartEx
 597              	.LVL71:
 166:main.c        ****     LCD_PrintString("                    ");
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 23


 598              		.loc 1 166 0
 599 0038 0021     		movs	r1, #0
 600 003a 0846     		mov	r0, r1
 601 003c FFF7FEFF 		bl	LCD_Position
 602              	.LVL72:
 167:main.c        **** 
 603              		.loc 1 167 0
 604 0040 5548     		ldr	r0, .L65+16
 605 0042 FFF7FEFF 		bl	LCD_PrintString
 606              	.LVL73:
 170:main.c        ****     LCD_PrintString("Hello");
 607              		.loc 1 170 0
 608 0046 0021     		movs	r1, #0
 609 0048 0846     		mov	r0, r1
 610 004a FFF7FEFF 		bl	LCD_Position
 611              	.LVL74:
 171:main.c        ****     CyDelay(FiveSecs);
 612              		.loc 1 171 0
 613 004e 5348     		ldr	r0, .L65+20
 614 0050 FFF7FEFF 		bl	LCD_PrintString
 615              	.LVL75:
 172:main.c        **** 
 616              		.loc 1 172 0
 617 0054 41F28830 		movw	r0, #5000
 618 0058 FFF7FEFF 		bl	CyDelay
 619              	.LVL76:
 131:main.c        **** 
 620              		.loc 1 131 0
 621 005c 0025     		movs	r5, #0
 130:main.c        ****     int data_turn = 0;
 622              		.loc 1 130 0
 623 005e 2C46     		mov	r4, r5
 624              	.LVL77:
 625              	.L46:
 176:main.c        ****         {
 626              		.loc 1 176 0
 627 0060 4F4B     		ldr	r3, .L65+24
 628 0062 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 629 0064 13B1     		cbz	r3, .L47
 179:main.c        ****         }
 630              		.loc 1 179 0
 631 0066 0022     		movs	r2, #0
 632 0068 4D4B     		ldr	r3, .L65+24
 633 006a 1A73     		strb	r2, [r3, #12]
 634              	.L47:
 181:main.c        ****             case Encoding_Byte1:
 635              		.loc 1 181 0
 636 006c 4C4B     		ldr	r3, .L65+24
 637 006e 9B68     		ldr	r3, [r3, #8]
 638 0070 032B     		cmp	r3, #3
 639 0072 20D8     		bhi	.L48
 640 0074 DFE803F0 		tbb	[pc, r3]
 641              	.L50:
 642 0078 02       		.byte	(.L49-.L50)/2
 643 0079 09       		.byte	(.L51-.L50)/2
 644 007a 11       		.byte	(.L52-.L50)/2
 645 007b 18       		.byte	(.L53-.L50)/2
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 24


 646              		.p2align 1
 647              	.L49:
 183:main.c        ****                 break;
 648              		.loc 1 183 0
 649 007c 484B     		ldr	r3, .L65+24
 650 007e 1968     		ldr	r1, [r3]
 651 0080 FF20     		movs	r0, #255
 652 0082 FFF7FEFF 		bl	Byte
 653              	.LVL78:
 654 0086 0446     		mov	r4, r0
 655              	.LVL79:
 184:main.c        ****             case Data:
 656              		.loc 1 184 0
 657 0088 66E0     		b	.L54
 658              	.LVL80:
 659              	.L51:
 186:main.c        ****                 break;
 660              		.loc 1 186 0
 661 008a 454B     		ldr	r3, .L65+24
 662 008c 1968     		ldr	r1, [r3]
 663 008e 454B     		ldr	r3, .L65+28
 664 0090 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 665 0092 FFF7FEFF 		bl	Byte
 666              	.LVL81:
 667 0096 0446     		mov	r4, r0
 668              	.LVL82:
 187:main.c        ****             case Parity:
 669              		.loc 1 187 0
 670 0098 5EE0     		b	.L54
 671              	.LVL83:
 672              	.L52:
 189:main.c        ****                 bitCase = FindParity();
 673              		.loc 1 189 0
 674 009a 0122     		movs	r2, #1
 675 009c 404B     		ldr	r3, .L65+24
 676 009e 5A60     		str	r2, [r3, #4]
 190:main.c        ****                 break;
 677              		.loc 1 190 0
 678 00a0 FFF7FEFF 		bl	FindParity
 679              	.LVL84:
 680 00a4 0446     		mov	r4, r0
 681              	.LVL85:
 191:main.c        ****             case Decoding_Byte1:
 682              		.loc 1 191 0
 683 00a6 57E0     		b	.L54
 684              	.LVL86:
 685              	.L53:
 193:main.c        ****                 break;
 686              		.loc 1 193 0
 687 00a8 3D4B     		ldr	r3, .L65+24
 688 00aa 1968     		ldr	r1, [r3]
 689 00ac 0120     		movs	r0, #1
 690 00ae FFF7FEFF 		bl	Byte
 691              	.LVL87:
 692 00b2 0446     		mov	r4, r0
 693              	.LVL88:
 194:main.c        ****  
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 25


 694              		.loc 1 194 0
 695 00b4 50E0     		b	.L54
 696              	.LVL89:
 697              	.L48:
 197:main.c        ****                 // Turn sending off until new data from UART
 698              		.loc 1 197 0
 699 00b6 3A4B     		ldr	r3, .L65+24
 700 00b8 5A69     		ldr	r2, [r3, #20]
 701 00ba 0132     		adds	r2, r2, #1
 702 00bc 5A61     		str	r2, [r3, #20]
 199:main.c        ****                 //encode used to transmit 7 1's for the prefix 
 703              		.loc 1 199 0
 704 00be 0022     		movs	r2, #0
 705 00c0 5A73     		strb	r2, [r3, #13]
 205:main.c        ****                 if (data_turn == DATA_LENGTH) {
 706              		.loc 1 205 0
 707 00c2 0135     		adds	r5, r5, #1
 708              	.LVL90:
 206:main.c        ****                     data_turn = 0;
 709              		.loc 1 206 0
 710 00c4 082D     		cmp	r5, #8
 711 00c6 00D1     		bne	.L55
 207:main.c        ****                 }
 712              		.loc 1 207 0
 713 00c8 1546     		mov	r5, r2
 714              	.LVL91:
 715              	.L55:
 235:main.c        ****                 PWM_Switch_Timer_Stop();
 716              		.loc 1 235 0
 717 00ca FFF7FEFF 		bl	PWM_Modulator_Stop
 718              	.LVL92:
 236:main.c        ****                 HighVoltage_Write(0); // Turn High Voltage off while delaying
 719              		.loc 1 236 0
 720 00ce FFF7FEFF 		bl	PWM_Switch_Timer_Stop
 721              	.LVL93:
 237:main.c        ****                 CyDelay(20);
 722              		.loc 1 237 0
 723 00d2 0020     		movs	r0, #0
 724 00d4 FFF7FEFF 		bl	HighVoltage_Write
 725              	.LVL94:
 238:main.c        ****                 SignalBase_Write(0);               
 726              		.loc 1 238 0
 727 00d8 1420     		movs	r0, #20
 728 00da FFF7FEFF 		bl	CyDelay
 729              	.LVL95:
 239:main.c        ****                 
 730              		.loc 1 239 0
 731 00de 0020     		movs	r0, #0
 732 00e0 FFF7FEFF 		bl	SignalBase_Write
 733              	.LVL96:
 241:main.c        ****                     SleepTimer_Start();
 734              		.loc 1 241 0
 735 00e4 2E4B     		ldr	r3, .L65+24
 736 00e6 5B69     		ldr	r3, [r3, #20]
 737 00e8 022B     		cmp	r3, #2
 738 00ea 08DD     		ble	.L56
 242:main.c        ****                     goToSleep();
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 26


 739              		.loc 1 242 0
 740 00ec FFF7FEFF 		bl	SleepTimer_Start
 741              	.LVL97:
 243:main.c        ****                     // PSoC Sleep command. To adjust sleep time, change in the hardware
 742              		.loc 1 243 0
 743 00f0 FFF7FEFF 		bl	goToSleep
 744              	.LVL98:
 245:main.c        ****                 }
 745              		.loc 1 245 0
 746 00f4 4FF40061 		mov	r1, #2048
 747 00f8 0020     		movs	r0, #0
 748 00fa FFF7FEFF 		bl	CyPmSleep
 749              	.LVL99:
 750              	.L56:
 250:main.c        ****                     RxWakeUp_StartEx(RxWakeUp); //Start UART interrupt while in sleep mode
 751              		.loc 1 250 0
 752 00fe 284B     		ldr	r3, .L65+24
 753 0100 5B69     		ldr	r3, [r3, #20]
 754 0102 022B     		cmp	r3, #2
 755 0104 13DD     		ble	.L57
 251:main.c        ****                     sendDataCount = 0; // reset for sending new data
 756              		.loc 1 251 0
 757 0106 2848     		ldr	r0, .L65+32
 758 0108 FFF7FEFF 		bl	RxWakeUp_StartEx
 759              	.LVL100:
 252:main.c        ****                     /* Wait for new data before sending out data */
 760              		.loc 1 252 0
 761 010c 0022     		movs	r2, #0
 762 010e 244B     		ldr	r3, .L65+24
 763 0110 5A61     		str	r2, [r3, #20]
 254:main.c        ****                         CyWdtClear(); // Clear watchdog timer while in sleep
 764              		.loc 1 254 0
 765 0112 01E0     		b	.L58
 766              	.L59:
 255:main.c        ****                         // PSoC Sleep command. To adjust sleep time, change in the hardware
 767              		.loc 1 255 0
 768 0114 FFF7FEFF 		bl	CyWdtClear
 769              	.LVL101:
 770              	.L58:
 254:main.c        ****                         CyWdtClear(); // Clear watchdog timer while in sleep
 771              		.loc 1 254 0
 772 0118 214B     		ldr	r3, .L65+24
 773 011a 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 774 011c 002B     		cmp	r3, #0
 775 011e F9D0     		beq	.L59
 260:main.c        ****                     SleepTimer_Stop();
 776              		.loc 1 260 0
 777 0120 FFF7FEFF 		bl	RxWakeUp_Stop
 778              	.LVL102:
 261:main.c        ****                     wakeUp(); 
 779              		.loc 1 261 0
 780 0124 FFF7FEFF 		bl	SleepTimer_Stop
 781              	.LVL103:
 262:main.c        ****                 }else{
 782              		.loc 1 262 0
 783 0128 FFF7FEFF 		bl	wakeUp
 784              	.LVL104:
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 27


 785 012c 03E0     		b	.L60
 786              	.L57:
 265:main.c        ****                 }
 787              		.loc 1 265 0
 788 012e 4FF47A70 		mov	r0, #1000
 789 0132 FFF7FEFF 		bl	CyDelay
 790              	.LVL105:
 791              	.L60:
 288:main.c        ****                 CyDelay(20); // Give voltage booster time to charge up
 792              		.loc 1 288 0
 793 0136 0120     		movs	r0, #1
 794 0138 FFF7FEFF 		bl	HighVoltage_Write
 795              	.LVL106:
 289:main.c        ****                 SignalBase_Write(1);
 796              		.loc 1 289 0
 797 013c 1420     		movs	r0, #20
 798 013e FFF7FEFF 		bl	CyDelay
 799              	.LVL107:
 290:main.c        ****                 /* Reset PWM blocks and bitTime for new transmission */
 800              		.loc 1 290 0
 801 0142 0120     		movs	r0, #1
 802 0144 FFF7FEFF 		bl	SignalBase_Write
 803              	.LVL108:
 292:main.c        ****                 PWM_Modulator_Start();
 804              		.loc 1 292 0
 805 0148 154E     		ldr	r6, .L65+24
 806 014a 0027     		movs	r7, #0
 807 014c 3760     		str	r7, [r6]
 293:main.c        ****                 PWM_Switch_Timer_Start();
 808              		.loc 1 293 0
 809 014e FFF7FEFF 		bl	PWM_Modulator_Start
 810              	.LVL109:
 294:main.c        ****                 currentByte = Encoding_Byte1;
 811              		.loc 1 294 0
 812 0152 FFF7FEFF 		bl	PWM_Switch_Timer_Start
 813              	.LVL110:
 295:main.c        ****                 break;
 814              		.loc 1 295 0
 815 0156 B760     		str	r7, [r6, #8]
 816              	.L54:
 300:main.c        ****             SignalBase_Write(1);
 817              		.loc 1 300 0
 818 0158 012C     		cmp	r4, #1
 819 015a 0BD1     		bne	.L61
 301:main.c        ****             PWM_Modulator_Start();
 820              		.loc 1 301 0
 821 015c 0120     		movs	r0, #1
 822 015e FFF7FEFF 		bl	SignalBase_Write
 823              	.LVL111:
 302:main.c        ****             PWM_Modulator_WritePeriod(FREQ(ONE_FREQ));
 824              		.loc 1 302 0
 825 0162 FFF7FEFF 		bl	PWM_Modulator_Start
 826              	.LVL112:
 303:main.c        ****             PWM_Modulator_WriteCompare((FREQ(ONE_FREQ))/2); // Sets pulse width
 827              		.loc 1 303 0
 828 0166 1620     		movs	r0, #22
 829 0168 FFF7FEFF 		bl	PWM_Modulator_WritePeriod
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 28


 830              	.LVL113:
 304:main.c        ****         }else if(bitCase == ZERO){
 831              		.loc 1 304 0
 832 016c 0B20     		movs	r0, #11
 833 016e FFF7FEFF 		bl	PWM_Modulator_WriteCompare
 834              	.LVL114:
 835 0172 75E7     		b	.L46
 836              	.L61:
 305:main.c        ****             PWM_Modulator_Stop();
 837              		.loc 1 305 0
 838 0174 002C     		cmp	r4, #0
 839 0176 7FF473AF 		bne	.L46
 306:main.c        ****             SignalBase_Write(0);
 840              		.loc 1 306 0
 841 017a FFF7FEFF 		bl	PWM_Modulator_Stop
 842              	.LVL115:
 307:main.c        ****         } // end if statement
 843              		.loc 1 307 0
 844 017e 0020     		movs	r0, #0
 845 0180 FFF7FEFF 		bl	SignalBase_Write
 846              	.LVL116:
 847 0184 6CE7     		b	.L46
 848              	.L66:
 849 0186 00BF     		.align	2
 850              	.L65:
 851 0188 00000000 		.word	RxIsr
 852 018c 00000000 		.word	watchDogCheck
 853 0190 00000000 		.word	isr_sec
 854 0194 00000000 		.word	wakeUpIsr
 855 0198 20000000 		.word	.LC3
 856 019c 38000000 		.word	.LC4
 857 01a0 00000000 		.word	.LANCHOR0
 858 01a4 00000000 		.word	.LANCHOR1
 859 01a8 00000000 		.word	RxWakeUp
 860              		.cfi_endproc
 861              	.LFE64:
 862              		.size	main, .-main
 863              		.global	crabsToSend
 864              		.global	errorStatus
 865              		.global	newDataflag
 866              		.comm	data,20,4
 867              		.comm	lineStr,20,4
 868              		.comm	count,2,2
 869              		.global	sleepCount
 870              		.global	i
 871              		.global	error
 872              		.data
 873              		.align	2
 874              		.set	.LANCHOR1,. + 0
 875              		.type	crabsToSend, %object
 876              		.size	crabsToSend, 1
 877              	crabsToSend:
 878 0000 01       		.byte	1
 879 0001 000000   		.space	3
 880              		.type	i, %object
 881              		.size	i, 4
 882              	i:
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 29


 883 0004 02000000 		.word	2
 884              		.section	.rodata.str1.4,"aMS",%progbits,1
 885              		.align	2
 886              	.LC0:
 887 0000 43726162 		.ascii	"Crabs: %d\000"
 887      733A2025 
 887      6400
 888 000a 0000     		.space	2
 889              	.LC1:
 890 000c 20202020 		.ascii	"             \000"
 890      20202020 
 890      20202020 
 890      2000
 891 001a 0000     		.space	2
 892              	.LC2:
 893 001c 256400   		.ascii	"%d\000"
 894 001f 00       		.space	1
 895              	.LC3:
 896 0020 20202020 		.ascii	"                    \000"
 896      20202020 
 896      20202020 
 896      20202020 
 896      20202020 
 897 0035 000000   		.space	3
 898              	.LC4:
 899 0038 48656C6C 		.ascii	"Hello\000"
 899      6F00
 900              		.bss
 901              		.align	2
 902              		.set	.LANCHOR0,. + 0
 903              		.type	bitTime, %object
 904              		.size	bitTime, 4
 905              	bitTime:
 906 0000 00000000 		.space	4
 907              		.type	ParityFlag, %object
 908              		.size	ParityFlag, 4
 909              	ParityFlag:
 910 0004 00000000 		.space	4
 911              		.type	currentByte, %object
 912              		.size	currentByte, 4
 913              	currentByte:
 914 0008 00000000 		.space	4
 915              		.type	errorStatus, %object
 916              		.size	errorStatus, 1
 917              	errorStatus:
 918 000c 00       		.space	1
 919              		.type	newDataflag, %object
 920              		.size	newDataflag, 1
 921              	newDataflag:
 922 000d 00       		.space	1
 923 000e 0000     		.space	2
 924              		.type	sleepCount, %object
 925              		.size	sleepCount, 4
 926              	sleepCount:
 927 0010 00000000 		.space	4
 928              		.type	sendDataCount, %object
 929              		.size	sendDataCount, 4
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 30


 930              	sendDataCount:
 931 0014 00000000 		.space	4
 932              		.type	error, %object
 933              		.size	error, 4
 934              	error:
 935 0018 00000000 		.space	4
 936              		.text
 937              	.Letext0:
 938              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 939              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 940              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 941              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 942              		.file 6 "Generated_Source\\PSoC5/CyLib.h"
 943              		.file 7 "Generated_Source\\PSoC5/sleepToggle.h"
 944              		.file 8 "Generated_Source\\PSoC5/UART.h"
 945              		.file 9 "Generated_Source\\PSoC5/LCD.h"
 946              		.file 10 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4
 947              		.file 11 "Generated_Source\\PSoC5/isr_rx.h"
 948              		.file 12 "Generated_Source\\PSoC5/SleepTimer.h"
 949              		.file 13 "Generated_Source\\PSoC5/cyPm.h"
 950              		.file 14 "Generated_Source\\PSoC5/RxWakeUp.h"
 951              		.file 15 "Generated_Source\\PSoC5/checkWatchDogTimer.h"
 952              		.file 16 "Generated_Source\\PSoC5/PWM_Modulator.h"
 953              		.file 17 "Generated_Source\\PSoC5/PWM_Switch_Timer.h"
 954              		.file 18 "Generated_Source\\PSoC5/watchDogCheck.h"
 955              		.file 19 "Generated_Source\\PSoC5/isr_sec.h"
 956              		.file 20 "Generated_Source\\PSoC5/Sleep_ISR.h"
 957              		.file 21 "Generated_Source\\PSoC5/HighVoltage.h"
 958              		.file 22 "Generated_Source\\PSoC5/SignalBase.h"
 959              		.section	.debug_info,"",%progbits
 960              	.Ldebug_info0:
 961 0000 180A0000 		.4byte	0xa18
 962 0004 0400     		.2byte	0x4
 963 0006 00000000 		.4byte	.Ldebug_abbrev0
 964 000a 04       		.byte	0x4
 965 000b 01       		.uleb128 0x1
 966 000c 63050000 		.4byte	.LASF102
 967 0010 0C       		.byte	0xc
 968 0011 7C040000 		.4byte	.LASF103
 969 0015 8A010000 		.4byte	.LASF104
 970 0019 00000000 		.4byte	.Ldebug_ranges0+0
 971 001d 00000000 		.4byte	0
 972 0021 00000000 		.4byte	.Ldebug_line0
 973 0025 02       		.uleb128 0x2
 974 0026 01       		.byte	0x1
 975 0027 06       		.byte	0x6
 976 0028 FF020000 		.4byte	.LASF0
 977 002c 02       		.uleb128 0x2
 978 002d 01       		.byte	0x1
 979 002e 08       		.byte	0x8
 980 002f CF020000 		.4byte	.LASF1
 981 0033 02       		.uleb128 0x2
 982 0034 02       		.byte	0x2
 983 0035 05       		.byte	0x5
 984 0036 A6000000 		.4byte	.LASF2
 985 003a 02       		.uleb128 0x2
 986 003b 02       		.byte	0x2
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 31


 987 003c 07       		.byte	0x7
 988 003d B0030000 		.4byte	.LASF3
 989 0041 03       		.uleb128 0x3
 990 0042 FA040000 		.4byte	.LASF9
 991 0046 02       		.byte	0x2
 992 0047 3F       		.byte	0x3f
 993 0048 4C000000 		.4byte	0x4c
 994 004c 02       		.uleb128 0x2
 995 004d 04       		.byte	0x4
 996 004e 05       		.byte	0x5
 997 004f 32020000 		.4byte	.LASF4
 998 0053 02       		.uleb128 0x2
 999 0054 04       		.byte	0x4
 1000 0055 07       		.byte	0x7
 1001 0056 37010000 		.4byte	.LASF5
 1002 005a 02       		.uleb128 0x2
 1003 005b 08       		.byte	0x8
 1004 005c 05       		.byte	0x5
 1005 005d 12020000 		.4byte	.LASF6
 1006 0061 02       		.uleb128 0x2
 1007 0062 08       		.byte	0x8
 1008 0063 07       		.byte	0x7
 1009 0064 15030000 		.4byte	.LASF7
 1010 0068 04       		.uleb128 0x4
 1011 0069 04       		.byte	0x4
 1012 006a 05       		.byte	0x5
 1013 006b 696E7400 		.ascii	"int\000"
 1014 006f 02       		.uleb128 0x2
 1015 0070 04       		.byte	0x4
 1016 0071 07       		.byte	0x7
 1017 0072 3E030000 		.4byte	.LASF8
 1018 0076 03       		.uleb128 0x3
 1019 0077 F0030000 		.4byte	.LASF10
 1020 007b 03       		.byte	0x3
 1021 007c 2C       		.byte	0x2c
 1022 007d 41000000 		.4byte	0x41
 1023 0081 05       		.uleb128 0x5
 1024 0082 75010000 		.4byte	.LASF11
 1025 0086 04       		.byte	0x4
 1026 0087 9201     		.2byte	0x192
 1027 0089 2C000000 		.4byte	0x2c
 1028 008d 05       		.uleb128 0x5
 1029 008e 5F010000 		.4byte	.LASF12
 1030 0092 04       		.byte	0x4
 1031 0093 9301     		.2byte	0x193
 1032 0095 3A000000 		.4byte	0x3a
 1033 0099 02       		.uleb128 0x2
 1034 009a 04       		.byte	0x4
 1035 009b 04       		.byte	0x4
 1036 009c F6010000 		.4byte	.LASF13
 1037 00a0 02       		.uleb128 0x2
 1038 00a1 08       		.byte	0x8
 1039 00a2 04       		.byte	0x4
 1040 00a3 A4040000 		.4byte	.LASF14
 1041 00a7 05       		.uleb128 0x5
 1042 00a8 11010000 		.4byte	.LASF15
 1043 00ac 04       		.byte	0x4
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 32


 1044 00ad A301     		.2byte	0x1a3
 1045 00af B3000000 		.4byte	0xb3
 1046 00b3 02       		.uleb128 0x2
 1047 00b4 01       		.byte	0x1
 1048 00b5 08       		.byte	0x8
 1049 00b6 E0030000 		.4byte	.LASF16
 1050 00ba 05       		.uleb128 0x5
 1051 00bb 83040000 		.4byte	.LASF17
 1052 00bf 04       		.byte	0x4
 1053 00c0 3C02     		.2byte	0x23c
 1054 00c2 C6000000 		.4byte	0xc6
 1055 00c6 06       		.uleb128 0x6
 1056 00c7 81000000 		.4byte	0x81
 1057 00cb 02       		.uleb128 0x2
 1058 00cc 08       		.byte	0x8
 1059 00cd 04       		.byte	0x4
 1060 00ce BA020000 		.4byte	.LASF18
 1061 00d2 02       		.uleb128 0x2
 1062 00d3 04       		.byte	0x4
 1063 00d4 07       		.byte	0x7
 1064 00d5 C4000000 		.4byte	.LASF19
 1065 00d9 07       		.uleb128 0x7
 1066 00da 8B000000 		.4byte	.LASF105
 1067 00de 01       		.byte	0x1
 1068 00df 2C000000 		.4byte	0x2c
 1069 00e3 01       		.byte	0x1
 1070 00e4 54       		.byte	0x54
 1071 00e5 02010000 		.4byte	0x102
 1072 00e9 08       		.uleb128 0x8
 1073 00ea 7B010000 		.4byte	.LASF20
 1074 00ee 00       		.byte	0
 1075 00ef 08       		.uleb128 0x8
 1076 00f0 82020000 		.4byte	.LASF21
 1077 00f4 01       		.byte	0x1
 1078 00f5 08       		.uleb128 0x8
 1079 00f6 CE030000 		.4byte	.LASF22
 1080 00fa 02       		.byte	0x2
 1081 00fb 08       		.uleb128 0x8
 1082 00fc F0020000 		.4byte	.LASF23
 1083 0100 03       		.byte	0x3
 1084 0101 00       		.byte	0
 1085 0102 09       		.uleb128 0x9
 1086 0103 16050000 		.4byte	.LASF106
 1087 0107 01       		.byte	0x1
 1088 0108 B001     		.2byte	0x1b0
 1089 010a 00000000 		.4byte	.LFB69
 1090 010e 38000000 		.4byte	.LFE69-.LFB69
 1091 0112 01       		.uleb128 0x1
 1092 0113 9C       		.byte	0x9c
 1093 0114 0A       		.uleb128 0xa
 1094 0115 DC010000 		.4byte	.LASF24
 1095 0119 01       		.byte	0x1
 1096 011a 0F02     		.2byte	0x20f
 1097 011c 00000000 		.4byte	.LFB71
 1098 0120 08000000 		.4byte	.LFE71-.LFB71
 1099 0124 01       		.uleb128 0x1
 1100 0125 9C       		.byte	0x9c
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 33


 1101 0126 34010000 		.4byte	0x134
 1102 012a 0B       		.uleb128 0xb
 1103 012b 06000000 		.4byte	.LVL0
 1104 012f 16080000 		.4byte	0x816
 1105 0133 00       		.byte	0
 1106 0134 0A       		.uleb128 0xa
 1107 0135 98030000 		.4byte	.LASF25
 1108 0139 01       		.byte	0x1
 1109 013a CE01     		.2byte	0x1ce
 1110 013c 00000000 		.4byte	.LFB70
 1111 0140 B8000000 		.4byte	.LFE70-.LFB70
 1112 0144 01       		.uleb128 0x1
 1113 0145 9C       		.byte	0x9c
 1114 0146 41020000 		.4byte	0x241
 1115 014a 0C       		.uleb128 0xc
 1116 014b C6020000 		.4byte	.LASF29
 1117 014f 01       		.byte	0x1
 1118 0150 D201     		.2byte	0x1d2
 1119 0152 81000000 		.4byte	0x81
 1120 0156 00000000 		.4byte	.LLST0
 1121 015a 0D       		.uleb128 0xd
 1122 015b 08000000 		.4byte	.LVL1
 1123 015f 21080000 		.4byte	0x821
 1124 0163 6D010000 		.4byte	0x16d
 1125 0167 0E       		.uleb128 0xe
 1126 0168 01       		.uleb128 0x1
 1127 0169 50       		.byte	0x50
 1128 016a 01       		.uleb128 0x1
 1129 016b 31       		.byte	0x31
 1130 016c 00       		.byte	0
 1131 016d 0B       		.uleb128 0xb
 1132 016e 34000000 		.4byte	.LVL4
 1133 0172 2C080000 		.4byte	0x82c
 1134 0176 0D       		.uleb128 0xd
 1135 0177 4A000000 		.4byte	.LVL5
 1136 017b 37080000 		.4byte	0x837
 1137 017f 8E010000 		.4byte	0x18e
 1138 0183 0E       		.uleb128 0xe
 1139 0184 01       		.uleb128 0x1
 1140 0185 50       		.byte	0x50
 1141 0186 01       		.uleb128 0x1
 1142 0187 30       		.byte	0x30
 1143 0188 0E       		.uleb128 0xe
 1144 0189 01       		.uleb128 0x1
 1145 018a 51       		.byte	0x51
 1146 018b 01       		.uleb128 0x1
 1147 018c 30       		.byte	0x30
 1148 018d 00       		.byte	0
 1149 018e 0D       		.uleb128 0xd
 1150 018f 58000000 		.4byte	.LVL6
 1151 0193 42080000 		.4byte	0x842
 1152 0197 AB010000 		.4byte	0x1ab
 1153 019b 0E       		.uleb128 0xe
 1154 019c 01       		.uleb128 0x1
 1155 019d 50       		.byte	0x50
 1156 019e 02       		.uleb128 0x2
 1157 019f 75       		.byte	0x75
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 34


 1158 01a0 00       		.sleb128 0
 1159 01a1 0E       		.uleb128 0xe
 1160 01a2 01       		.uleb128 0x1
 1161 01a3 51       		.byte	0x51
 1162 01a4 05       		.uleb128 0x5
 1163 01a5 03       		.byte	0x3
 1164 01a6 00000000 		.4byte	.LC0
 1165 01aa 00       		.byte	0
 1166 01ab 0D       		.uleb128 0xd
 1167 01ac 5E000000 		.4byte	.LVL7
 1168 01b0 4D080000 		.4byte	0x84d
 1169 01b4 C2010000 		.4byte	0x1c2
 1170 01b8 0E       		.uleb128 0xe
 1171 01b9 01       		.uleb128 0x1
 1172 01ba 50       		.byte	0x50
 1173 01bb 05       		.uleb128 0x5
 1174 01bc 03       		.byte	0x3
 1175 01bd 0C000000 		.4byte	.LC1
 1176 01c1 00       		.byte	0
 1177 01c2 0D       		.uleb128 0xd
 1178 01c3 66000000 		.4byte	.LVL8
 1179 01c7 37080000 		.4byte	0x837
 1180 01cb DA010000 		.4byte	0x1da
 1181 01cf 0E       		.uleb128 0xe
 1182 01d0 01       		.uleb128 0x1
 1183 01d1 50       		.byte	0x50
 1184 01d2 01       		.uleb128 0x1
 1185 01d3 30       		.byte	0x30
 1186 01d4 0E       		.uleb128 0xe
 1187 01d5 01       		.uleb128 0x1
 1188 01d6 51       		.byte	0x51
 1189 01d7 01       		.uleb128 0x1
 1190 01d8 30       		.byte	0x30
 1191 01d9 00       		.byte	0
 1192 01da 0D       		.uleb128 0xd
 1193 01db 6C000000 		.4byte	.LVL9
 1194 01df 4D080000 		.4byte	0x84d
 1195 01e3 EE010000 		.4byte	0x1ee
 1196 01e7 0E       		.uleb128 0xe
 1197 01e8 01       		.uleb128 0x1
 1198 01e9 50       		.byte	0x50
 1199 01ea 02       		.uleb128 0x2
 1200 01eb 75       		.byte	0x75
 1201 01ec 00       		.sleb128 0
 1202 01ed 00       		.byte	0
 1203 01ee 0B       		.uleb128 0xb
 1204 01ef 72000000 		.4byte	.LVL10
 1205 01f3 58080000 		.4byte	0x858
 1206 01f7 0D       		.uleb128 0xd
 1207 01f8 80000000 		.4byte	.LVL11
 1208 01fc 42080000 		.4byte	0x842
 1209 0200 14020000 		.4byte	0x214
 1210 0204 0E       		.uleb128 0xe
 1211 0205 01       		.uleb128 0x1
 1212 0206 50       		.byte	0x50
 1213 0207 02       		.uleb128 0x2
 1214 0208 75       		.byte	0x75
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 35


 1215 0209 00       		.sleb128 0
 1216 020a 0E       		.uleb128 0xe
 1217 020b 01       		.uleb128 0x1
 1218 020c 51       		.byte	0x51
 1219 020d 05       		.uleb128 0x5
 1220 020e 03       		.byte	0x3
 1221 020f 1C000000 		.4byte	.LC2
 1222 0213 00       		.byte	0
 1223 0214 0D       		.uleb128 0xd
 1224 0215 86000000 		.4byte	.LVL12
 1225 0219 4D080000 		.4byte	0x84d
 1226 021d 28020000 		.4byte	0x228
 1227 0221 0E       		.uleb128 0xe
 1228 0222 01       		.uleb128 0x1
 1229 0223 50       		.byte	0x50
 1230 0224 02       		.uleb128 0x2
 1231 0225 75       		.byte	0x75
 1232 0226 00       		.sleb128 0
 1233 0227 00       		.byte	0
 1234 0228 0B       		.uleb128 0xb
 1235 0229 8E000000 		.4byte	.LVL13
 1236 022d 63080000 		.4byte	0x863
 1237 0231 0F       		.uleb128 0xf
 1238 0232 94000000 		.4byte	.LVL14
 1239 0236 21080000 		.4byte	0x821
 1240 023a 0E       		.uleb128 0xe
 1241 023b 01       		.uleb128 0x1
 1242 023c 50       		.byte	0x50
 1243 023d 01       		.uleb128 0x1
 1244 023e 30       		.byte	0x30
 1245 023f 00       		.byte	0
 1246 0240 00       		.byte	0
 1247 0241 0A       		.uleb128 0xa
 1248 0242 BA000000 		.4byte	.LASF26
 1249 0246 01       		.byte	0x1
 1250 0247 2402     		.2byte	0x224
 1251 0249 00000000 		.4byte	.LFB72
 1252 024d 24000000 		.4byte	.LFE72-.LFB72
 1253 0251 01       		.uleb128 0x1
 1254 0252 9C       		.byte	0x9c
 1255 0253 6A020000 		.4byte	0x26a
 1256 0257 0B       		.uleb128 0xb
 1257 0258 06000000 		.4byte	.LVL15
 1258 025c 6E080000 		.4byte	0x86e
 1259 0260 0B       		.uleb128 0xb
 1260 0261 0A000000 		.4byte	.LVL16
 1261 0265 16080000 		.4byte	0x816
 1262 0269 00       		.byte	0
 1263 026a 0A       		.uleb128 0xa
 1264 026b 69020000 		.4byte	.LASF27
 1265 026f 01       		.byte	0x1
 1266 0270 3D02     		.2byte	0x23d
 1267 0272 00000000 		.4byte	.LFB73
 1268 0276 28000000 		.4byte	.LFE73-.LFB73
 1269 027a 01       		.uleb128 0x1
 1270 027b 9C       		.byte	0x9c
 1271 027c CE020000 		.4byte	0x2ce
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 36


 1272 0280 0B       		.uleb128 0xb
 1273 0281 06000000 		.4byte	.LVL17
 1274 0285 79080000 		.4byte	0x879
 1275 0289 0B       		.uleb128 0xb
 1276 028a 0A000000 		.4byte	.LVL18
 1277 028e 84080000 		.4byte	0x884
 1278 0292 0B       		.uleb128 0xb
 1279 0293 0E000000 		.4byte	.LVL19
 1280 0297 8F080000 		.4byte	0x88f
 1281 029b 0D       		.uleb128 0xd
 1282 029c 14000000 		.4byte	.LVL20
 1283 02a0 9A080000 		.4byte	0x89a
 1284 02a4 B2020000 		.4byte	0x2b2
 1285 02a8 0E       		.uleb128 0xe
 1286 02a9 01       		.uleb128 0x1
 1287 02aa 50       		.byte	0x50
 1288 02ab 05       		.uleb128 0x5
 1289 02ac 03       		.byte	0x3
 1290 02ad 00000000 		.4byte	RxIsr
 1291 02b1 00       		.byte	0
 1292 02b2 0B       		.uleb128 0xb
 1293 02b3 18000000 		.4byte	.LVL21
 1294 02b7 A5080000 		.4byte	0x8a5
 1295 02bb 0B       		.uleb128 0xb
 1296 02bc 1C000000 		.4byte	.LVL22
 1297 02c0 B0080000 		.4byte	0x8b0
 1298 02c4 0B       		.uleb128 0xb
 1299 02c5 20000000 		.4byte	.LVL23
 1300 02c9 58080000 		.4byte	0x858
 1301 02cd 00       		.byte	0
 1302 02ce 10       		.uleb128 0x10
 1303 02cf 17010000 		.4byte	.LASF31
 1304 02d3 01       		.byte	0x1
 1305 02d4 4001     		.2byte	0x140
 1306 02d6 68000000 		.4byte	0x68
 1307 02da 00000000 		.4byte	.LFB65
 1308 02de 42000000 		.4byte	.LFE65-.LFB65
 1309 02e2 01       		.uleb128 0x1
 1310 02e3 9C       		.byte	0x9c
 1311 02e4 16030000 		.4byte	0x316
 1312 02e8 11       		.uleb128 0x11
 1313 02e9 26010000 		.4byte	.LASF28
 1314 02ed 01       		.byte	0x1
 1315 02ee 4001     		.2byte	0x140
 1316 02f0 6F000000 		.4byte	0x6f
 1317 02f4 13000000 		.4byte	.LLST1
 1318 02f8 12       		.uleb128 0x12
 1319 02f9 625400   		.ascii	"bT\000"
 1320 02fc 01       		.byte	0x1
 1321 02fd 4001     		.2byte	0x140
 1322 02ff 68000000 		.4byte	0x68
 1323 0303 01       		.uleb128 0x1
 1324 0304 51       		.byte	0x51
 1325 0305 0C       		.uleb128 0xc
 1326 0306 3B020000 		.4byte	.LASF30
 1327 030a 01       		.byte	0x1
 1328 030b 4201     		.2byte	0x142
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 37


 1329 030d 68000000 		.4byte	0x68
 1330 0311 34000000 		.4byte	.LLST2
 1331 0315 00       		.byte	0
 1332 0316 10       		.uleb128 0x10
 1333 0317 DD020000 		.4byte	.LASF32
 1334 031b 01       		.byte	0x1
 1335 031c 6A01     		.2byte	0x16a
 1336 031e 68000000 		.4byte	0x68
 1337 0322 00000000 		.4byte	.LFB66
 1338 0326 20000000 		.4byte	.LFE66-.LFB66
 1339 032a 01       		.uleb128 0x1
 1340 032b 9C       		.byte	0x9c
 1341 032c 5B030000 		.4byte	0x35b
 1342 0330 13       		.uleb128 0x13
 1343 0331 0D040000 		.4byte	.LASF33
 1344 0335 01       		.byte	0x1
 1345 0336 6C01     		.2byte	0x16c
 1346 0338 81000000 		.4byte	0x81
 1347 033c 01       		.uleb128 0x1
 1348 033d 52       		.byte	0x52
 1349 033e 14       		.uleb128 0x14
 1350 033f 6900     		.ascii	"i\000"
 1351 0341 01       		.byte	0x1
 1352 0342 6D01     		.2byte	0x16d
 1353 0344 68000000 		.4byte	0x68
 1354 0348 94000000 		.4byte	.LLST3
 1355 034c 13       		.uleb128 0x13
 1356 034d 49010000 		.4byte	.LASF34
 1357 0351 01       		.byte	0x1
 1358 0352 6E01     		.2byte	0x16e
 1359 0354 68000000 		.4byte	0x68
 1360 0358 01       		.uleb128 0x1
 1361 0359 50       		.byte	0x50
 1362 035a 00       		.byte	0
 1363 035b 0A       		.uleb128 0xa
 1364 035c 30010000 		.4byte	.LASF35
 1365 0360 01       		.byte	0x1
 1366 0361 7E01     		.2byte	0x17e
 1367 0363 00000000 		.4byte	.LFB67
 1368 0367 18000000 		.4byte	.LFE67-.LFB67
 1369 036b 01       		.uleb128 0x1
 1370 036c 9C       		.byte	0x9c
 1371 036d 9F030000 		.4byte	0x39f
 1372 0371 0B       		.uleb128 0xb
 1373 0372 06000000 		.4byte	.LVL47
 1374 0376 BB080000 		.4byte	0x8bb
 1375 037a 0B       		.uleb128 0xb
 1376 037b 0A000000 		.4byte	.LVL48
 1377 037f C6080000 		.4byte	0x8c6
 1378 0383 0B       		.uleb128 0xb
 1379 0384 0E000000 		.4byte	.LVL49
 1380 0388 D1080000 		.4byte	0x8d1
 1381 038c 0B       		.uleb128 0xb
 1382 038d 12000000 		.4byte	.LVL50
 1383 0391 DC080000 		.4byte	0x8dc
 1384 0395 0B       		.uleb128 0xb
 1385 0396 16000000 		.4byte	.LVL51
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 38


 1386 039a E7080000 		.4byte	0x8e7
 1387 039e 00       		.byte	0
 1388 039f 0A       		.uleb128 0xa
 1389 03a0 B0000000 		.4byte	.LASF36
 1390 03a4 01       		.byte	0x1
 1391 03a5 9001     		.2byte	0x190
 1392 03a7 00000000 		.4byte	.LFB68
 1393 03ab 28000000 		.4byte	.LFE68-.LFB68
 1394 03af 01       		.uleb128 0x1
 1395 03b0 9C       		.byte	0x9c
 1396 03b1 07040000 		.4byte	0x407
 1397 03b5 0B       		.uleb128 0xb
 1398 03b6 06000000 		.4byte	.LVL52
 1399 03ba F2080000 		.4byte	0x8f2
 1400 03be 0B       		.uleb128 0xb
 1401 03bf 0A000000 		.4byte	.LVL53
 1402 03c3 FD080000 		.4byte	0x8fd
 1403 03c7 0B       		.uleb128 0xb
 1404 03c8 0E000000 		.4byte	.LVL54
 1405 03cc 08090000 		.4byte	0x908
 1406 03d0 0B       		.uleb128 0xb
 1407 03d1 12000000 		.4byte	.LVL55
 1408 03d5 13090000 		.4byte	0x913
 1409 03d9 0B       		.uleb128 0xb
 1410 03da 16000000 		.4byte	.LVL56
 1411 03de 1E090000 		.4byte	0x91e
 1412 03e2 0B       		.uleb128 0xb
 1413 03e3 1A000000 		.4byte	.LVL57
 1414 03e7 29090000 		.4byte	0x929
 1415 03eb 0B       		.uleb128 0xb
 1416 03ec 1E000000 		.4byte	.LVL58
 1417 03f0 34090000 		.4byte	0x934
 1418 03f4 0B       		.uleb128 0xb
 1419 03f5 22000000 		.4byte	.LVL59
 1420 03f9 63080000 		.4byte	0x863
 1421 03fd 0B       		.uleb128 0xb
 1422 03fe 26000000 		.4byte	.LVL60
 1423 0402 3F090000 		.4byte	0x93f
 1424 0406 00       		.byte	0
 1425 0407 15       		.uleb128 0x15
 1426 0408 1C010000 		.4byte	.LASF37
 1427 040c 01       		.byte	0x1
 1428 040d 7F       		.byte	0x7f
 1429 040e 68000000 		.4byte	0x68
 1430 0412 00000000 		.4byte	.LFB64
 1431 0416 AC010000 		.4byte	.LFE64-.LFB64
 1432 041a 01       		.uleb128 0x1
 1433 041b 9C       		.byte	0x9c
 1434 041c F8060000 		.4byte	0x6f8
 1435 0420 16       		.uleb128 0x16
 1436 0421 3B020000 		.4byte	.LASF30
 1437 0425 01       		.byte	0x1
 1438 0426 82       		.byte	0x82
 1439 0427 68000000 		.4byte	0x68
 1440 042b B3000000 		.4byte	.LLST4
 1441 042f 16       		.uleb128 0x16
 1442 0430 0B030000 		.4byte	.LASF38
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 39


 1443 0434 01       		.byte	0x1
 1444 0435 83       		.byte	0x83
 1445 0436 68000000 		.4byte	0x68
 1446 043a 2A010000 		.4byte	.LLST5
 1447 043e 0D       		.uleb128 0xd
 1448 043f 08000000 		.4byte	.LVL62
 1449 0443 9A080000 		.4byte	0x89a
 1450 0447 55040000 		.4byte	0x455
 1451 044b 0E       		.uleb128 0xe
 1452 044c 01       		.uleb128 0x1
 1453 044d 50       		.byte	0x50
 1454 044e 05       		.uleb128 0x5
 1455 044f 03       		.byte	0x3
 1456 0450 00000000 		.4byte	RxIsr
 1457 0454 00       		.byte	0
 1458 0455 0D       		.uleb128 0xd
 1459 0456 12000000 		.4byte	.LVL63
 1460 045a 4A090000 		.4byte	0x94a
 1461 045e 6D040000 		.4byte	0x46d
 1462 0462 0E       		.uleb128 0xe
 1463 0463 01       		.uleb128 0x1
 1464 0464 50       		.byte	0x50
 1465 0465 01       		.uleb128 0x1
 1466 0466 33       		.byte	0x33
 1467 0467 0E       		.uleb128 0xe
 1468 0468 01       		.uleb128 0x1
 1469 0469 51       		.byte	0x51
 1470 046a 01       		.uleb128 0x1
 1471 046b 30       		.byte	0x30
 1472 046c 00       		.byte	0
 1473 046d 0B       		.uleb128 0xb
 1474 046e 16000000 		.4byte	.LVL64
 1475 0472 55090000 		.4byte	0x955
 1476 0476 0D       		.uleb128 0xd
 1477 0477 1C000000 		.4byte	.LVL65
 1478 047b 60090000 		.4byte	0x960
 1479 047f 8D040000 		.4byte	0x48d
 1480 0483 0E       		.uleb128 0xe
 1481 0484 01       		.uleb128 0x1
 1482 0485 50       		.byte	0x50
 1483 0486 05       		.uleb128 0x5
 1484 0487 03       		.byte	0x3
 1485 0488 00000000 		.4byte	watchDogCheck
 1486 048c 00       		.byte	0
 1487 048d 0B       		.uleb128 0xb
 1488 048e 20000000 		.4byte	.LVL66
 1489 0492 8F080000 		.4byte	0x88f
 1490 0496 0B       		.uleb128 0xb
 1491 0497 24000000 		.4byte	.LVL67
 1492 049b 6B090000 		.4byte	0x96b
 1493 049f 0B       		.uleb128 0xb
 1494 04a0 28000000 		.4byte	.LVL68
 1495 04a4 76090000 		.4byte	0x976
 1496 04a8 0B       		.uleb128 0xb
 1497 04a9 2C000000 		.4byte	.LVL69
 1498 04ad E7080000 		.4byte	0x8e7
 1499 04b1 0D       		.uleb128 0xd
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 40


 1500 04b2 32000000 		.4byte	.LVL70
 1501 04b6 81090000 		.4byte	0x981
 1502 04ba C8040000 		.4byte	0x4c8
 1503 04be 0E       		.uleb128 0xe
 1504 04bf 01       		.uleb128 0x1
 1505 04c0 50       		.byte	0x50
 1506 04c1 05       		.uleb128 0x5
 1507 04c2 03       		.byte	0x3
 1508 04c3 00000000 		.4byte	isr_sec
 1509 04c7 00       		.byte	0
 1510 04c8 0D       		.uleb128 0xd
 1511 04c9 38000000 		.4byte	.LVL71
 1512 04cd 8C090000 		.4byte	0x98c
 1513 04d1 DF040000 		.4byte	0x4df
 1514 04d5 0E       		.uleb128 0xe
 1515 04d6 01       		.uleb128 0x1
 1516 04d7 50       		.byte	0x50
 1517 04d8 05       		.uleb128 0x5
 1518 04d9 03       		.byte	0x3
 1519 04da 00000000 		.4byte	wakeUpIsr
 1520 04de 00       		.byte	0
 1521 04df 0D       		.uleb128 0xd
 1522 04e0 40000000 		.4byte	.LVL72
 1523 04e4 37080000 		.4byte	0x837
 1524 04e8 F7040000 		.4byte	0x4f7
 1525 04ec 0E       		.uleb128 0xe
 1526 04ed 01       		.uleb128 0x1
 1527 04ee 50       		.byte	0x50
 1528 04ef 01       		.uleb128 0x1
 1529 04f0 30       		.byte	0x30
 1530 04f1 0E       		.uleb128 0xe
 1531 04f2 01       		.uleb128 0x1
 1532 04f3 51       		.byte	0x51
 1533 04f4 01       		.uleb128 0x1
 1534 04f5 30       		.byte	0x30
 1535 04f6 00       		.byte	0
 1536 04f7 0D       		.uleb128 0xd
 1537 04f8 46000000 		.4byte	.LVL73
 1538 04fc 4D080000 		.4byte	0x84d
 1539 0500 0E050000 		.4byte	0x50e
 1540 0504 0E       		.uleb128 0xe
 1541 0505 01       		.uleb128 0x1
 1542 0506 50       		.byte	0x50
 1543 0507 05       		.uleb128 0x5
 1544 0508 03       		.byte	0x3
 1545 0509 20000000 		.4byte	.LC3
 1546 050d 00       		.byte	0
 1547 050e 0D       		.uleb128 0xd
 1548 050f 4E000000 		.4byte	.LVL74
 1549 0513 37080000 		.4byte	0x837
 1550 0517 26050000 		.4byte	0x526
 1551 051b 0E       		.uleb128 0xe
 1552 051c 01       		.uleb128 0x1
 1553 051d 50       		.byte	0x50
 1554 051e 01       		.uleb128 0x1
 1555 051f 30       		.byte	0x30
 1556 0520 0E       		.uleb128 0xe
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 41


 1557 0521 01       		.uleb128 0x1
 1558 0522 51       		.byte	0x51
 1559 0523 01       		.uleb128 0x1
 1560 0524 30       		.byte	0x30
 1561 0525 00       		.byte	0
 1562 0526 0D       		.uleb128 0xd
 1563 0527 54000000 		.4byte	.LVL75
 1564 052b 4D080000 		.4byte	0x84d
 1565 052f 3D050000 		.4byte	0x53d
 1566 0533 0E       		.uleb128 0xe
 1567 0534 01       		.uleb128 0x1
 1568 0535 50       		.byte	0x50
 1569 0536 05       		.uleb128 0x5
 1570 0537 03       		.byte	0x3
 1571 0538 38000000 		.4byte	.LC4
 1572 053c 00       		.byte	0
 1573 053d 0D       		.uleb128 0xd
 1574 053e 5C000000 		.4byte	.LVL76
 1575 0542 97090000 		.4byte	0x997
 1576 0546 52050000 		.4byte	0x552
 1577 054a 0E       		.uleb128 0xe
 1578 054b 01       		.uleb128 0x1
 1579 054c 50       		.byte	0x50
 1580 054d 03       		.uleb128 0x3
 1581 054e 0A       		.byte	0xa
 1582 054f 8813     		.2byte	0x1388
 1583 0551 00       		.byte	0
 1584 0552 0D       		.uleb128 0xd
 1585 0553 86000000 		.4byte	.LVL78
 1586 0557 CE020000 		.4byte	0x2ce
 1587 055b 66050000 		.4byte	0x566
 1588 055f 0E       		.uleb128 0xe
 1589 0560 01       		.uleb128 0x1
 1590 0561 50       		.byte	0x50
 1591 0562 02       		.uleb128 0x2
 1592 0563 08       		.byte	0x8
 1593 0564 FF       		.byte	0xff
 1594 0565 00       		.byte	0
 1595 0566 0B       		.uleb128 0xb
 1596 0567 96000000 		.4byte	.LVL81
 1597 056b CE020000 		.4byte	0x2ce
 1598 056f 0B       		.uleb128 0xb
 1599 0570 A4000000 		.4byte	.LVL84
 1600 0574 16030000 		.4byte	0x316
 1601 0578 0D       		.uleb128 0xd
 1602 0579 B2000000 		.4byte	.LVL87
 1603 057d CE020000 		.4byte	0x2ce
 1604 0581 8B050000 		.4byte	0x58b
 1605 0585 0E       		.uleb128 0xe
 1606 0586 01       		.uleb128 0x1
 1607 0587 50       		.byte	0x50
 1608 0588 01       		.uleb128 0x1
 1609 0589 31       		.byte	0x31
 1610 058a 00       		.byte	0
 1611 058b 0B       		.uleb128 0xb
 1612 058c CE000000 		.4byte	.LVL92
 1613 0590 A2090000 		.4byte	0x9a2
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 42


 1614 0594 0B       		.uleb128 0xb
 1615 0595 D2000000 		.4byte	.LVL93
 1616 0599 AD090000 		.4byte	0x9ad
 1617 059d 0D       		.uleb128 0xd
 1618 059e D8000000 		.4byte	.LVL94
 1619 05a2 B8090000 		.4byte	0x9b8
 1620 05a6 B0050000 		.4byte	0x5b0
 1621 05aa 0E       		.uleb128 0xe
 1622 05ab 01       		.uleb128 0x1
 1623 05ac 50       		.byte	0x50
 1624 05ad 01       		.uleb128 0x1
 1625 05ae 30       		.byte	0x30
 1626 05af 00       		.byte	0
 1627 05b0 0D       		.uleb128 0xd
 1628 05b1 DE000000 		.4byte	.LVL95
 1629 05b5 97090000 		.4byte	0x997
 1630 05b9 C3050000 		.4byte	0x5c3
 1631 05bd 0E       		.uleb128 0xe
 1632 05be 01       		.uleb128 0x1
 1633 05bf 50       		.byte	0x50
 1634 05c0 01       		.uleb128 0x1
 1635 05c1 44       		.byte	0x44
 1636 05c2 00       		.byte	0
 1637 05c3 0D       		.uleb128 0xd
 1638 05c4 E4000000 		.4byte	.LVL96
 1639 05c8 C3090000 		.4byte	0x9c3
 1640 05cc D6050000 		.4byte	0x5d6
 1641 05d0 0E       		.uleb128 0xe
 1642 05d1 01       		.uleb128 0x1
 1643 05d2 50       		.byte	0x50
 1644 05d3 01       		.uleb128 0x1
 1645 05d4 30       		.byte	0x30
 1646 05d5 00       		.byte	0
 1647 05d6 0B       		.uleb128 0xb
 1648 05d7 F0000000 		.4byte	.LVL97
 1649 05db CE090000 		.4byte	0x9ce
 1650 05df 0B       		.uleb128 0xb
 1651 05e0 F4000000 		.4byte	.LVL98
 1652 05e4 9F030000 		.4byte	0x39f
 1653 05e8 0D       		.uleb128 0xd
 1654 05e9 FE000000 		.4byte	.LVL99
 1655 05ed D9090000 		.4byte	0x9d9
 1656 05f1 02060000 		.4byte	0x602
 1657 05f5 0E       		.uleb128 0xe
 1658 05f6 01       		.uleb128 0x1
 1659 05f7 50       		.byte	0x50
 1660 05f8 01       		.uleb128 0x1
 1661 05f9 30       		.byte	0x30
 1662 05fa 0E       		.uleb128 0xe
 1663 05fb 01       		.uleb128 0x1
 1664 05fc 51       		.byte	0x51
 1665 05fd 03       		.uleb128 0x3
 1666 05fe 0A       		.byte	0xa
 1667 05ff 0008     		.2byte	0x800
 1668 0601 00       		.byte	0
 1669 0602 0D       		.uleb128 0xd
 1670 0603 0C010000 		.4byte	.LVL100
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 43


 1671 0607 E4090000 		.4byte	0x9e4
 1672 060b 19060000 		.4byte	0x619
 1673 060f 0E       		.uleb128 0xe
 1674 0610 01       		.uleb128 0x1
 1675 0611 50       		.byte	0x50
 1676 0612 05       		.uleb128 0x5
 1677 0613 03       		.byte	0x3
 1678 0614 00000000 		.4byte	RxWakeUp
 1679 0618 00       		.byte	0
 1680 0619 0B       		.uleb128 0xb
 1681 061a 18010000 		.4byte	.LVL101
 1682 061e 16080000 		.4byte	0x816
 1683 0622 0B       		.uleb128 0xb
 1684 0623 24010000 		.4byte	.LVL102
 1685 0627 EF090000 		.4byte	0x9ef
 1686 062b 0B       		.uleb128 0xb
 1687 062c 28010000 		.4byte	.LVL103
 1688 0630 FA090000 		.4byte	0x9fa
 1689 0634 0B       		.uleb128 0xb
 1690 0635 2C010000 		.4byte	.LVL104
 1691 0639 5B030000 		.4byte	0x35b
 1692 063d 0D       		.uleb128 0xd
 1693 063e 36010000 		.4byte	.LVL105
 1694 0642 97090000 		.4byte	0x997
 1695 0646 52060000 		.4byte	0x652
 1696 064a 0E       		.uleb128 0xe
 1697 064b 01       		.uleb128 0x1
 1698 064c 50       		.byte	0x50
 1699 064d 03       		.uleb128 0x3
 1700 064e 0A       		.byte	0xa
 1701 064f E803     		.2byte	0x3e8
 1702 0651 00       		.byte	0
 1703 0652 0D       		.uleb128 0xd
 1704 0653 3C010000 		.4byte	.LVL106
 1705 0657 B8090000 		.4byte	0x9b8
 1706 065b 65060000 		.4byte	0x665
 1707 065f 0E       		.uleb128 0xe
 1708 0660 01       		.uleb128 0x1
 1709 0661 50       		.byte	0x50
 1710 0662 01       		.uleb128 0x1
 1711 0663 31       		.byte	0x31
 1712 0664 00       		.byte	0
 1713 0665 0D       		.uleb128 0xd
 1714 0666 42010000 		.4byte	.LVL107
 1715 066a 97090000 		.4byte	0x997
 1716 066e 78060000 		.4byte	0x678
 1717 0672 0E       		.uleb128 0xe
 1718 0673 01       		.uleb128 0x1
 1719 0674 50       		.byte	0x50
 1720 0675 01       		.uleb128 0x1
 1721 0676 44       		.byte	0x44
 1722 0677 00       		.byte	0
 1723 0678 0D       		.uleb128 0xd
 1724 0679 48010000 		.4byte	.LVL108
 1725 067d C3090000 		.4byte	0x9c3
 1726 0681 8B060000 		.4byte	0x68b
 1727 0685 0E       		.uleb128 0xe
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 44


 1728 0686 01       		.uleb128 0x1
 1729 0687 50       		.byte	0x50
 1730 0688 01       		.uleb128 0x1
 1731 0689 31       		.byte	0x31
 1732 068a 00       		.byte	0
 1733 068b 0B       		.uleb128 0xb
 1734 068c 52010000 		.4byte	.LVL109
 1735 0690 76090000 		.4byte	0x976
 1736 0694 0B       		.uleb128 0xb
 1737 0695 56010000 		.4byte	.LVL110
 1738 0699 E7080000 		.4byte	0x8e7
 1739 069d 0D       		.uleb128 0xd
 1740 069e 62010000 		.4byte	.LVL111
 1741 06a2 C3090000 		.4byte	0x9c3
 1742 06a6 B0060000 		.4byte	0x6b0
 1743 06aa 0E       		.uleb128 0xe
 1744 06ab 01       		.uleb128 0x1
 1745 06ac 50       		.byte	0x50
 1746 06ad 01       		.uleb128 0x1
 1747 06ae 31       		.byte	0x31
 1748 06af 00       		.byte	0
 1749 06b0 0B       		.uleb128 0xb
 1750 06b1 66010000 		.4byte	.LVL112
 1751 06b5 76090000 		.4byte	0x976
 1752 06b9 0D       		.uleb128 0xd
 1753 06ba 6C010000 		.4byte	.LVL113
 1754 06be 050A0000 		.4byte	0xa05
 1755 06c2 CC060000 		.4byte	0x6cc
 1756 06c6 0E       		.uleb128 0xe
 1757 06c7 01       		.uleb128 0x1
 1758 06c8 50       		.byte	0x50
 1759 06c9 01       		.uleb128 0x1
 1760 06ca 46       		.byte	0x46
 1761 06cb 00       		.byte	0
 1762 06cc 0D       		.uleb128 0xd
 1763 06cd 72010000 		.4byte	.LVL114
 1764 06d1 100A0000 		.4byte	0xa10
 1765 06d5 DF060000 		.4byte	0x6df
 1766 06d9 0E       		.uleb128 0xe
 1767 06da 01       		.uleb128 0x1
 1768 06db 50       		.byte	0x50
 1769 06dc 01       		.uleb128 0x1
 1770 06dd 3B       		.byte	0x3b
 1771 06de 00       		.byte	0
 1772 06df 0B       		.uleb128 0xb
 1773 06e0 7E010000 		.4byte	.LVL115
 1774 06e4 A2090000 		.4byte	0x9a2
 1775 06e8 0F       		.uleb128 0xf
 1776 06e9 84010000 		.4byte	.LVL116
 1777 06ed C3090000 		.4byte	0x9c3
 1778 06f1 0E       		.uleb128 0xe
 1779 06f2 01       		.uleb128 0x1
 1780 06f3 50       		.byte	0x50
 1781 06f4 01       		.uleb128 0x1
 1782 06f5 30       		.byte	0x30
 1783 06f6 00       		.byte	0
 1784 06f7 00       		.byte	0
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 45


 1785 06f8 17       		.uleb128 0x17
 1786 06f9 60040000 		.4byte	.LASF39
 1787 06fd 01       		.byte	0x1
 1788 06fe 6F       		.byte	0x6f
 1789 06ff 68000000 		.4byte	0x68
 1790 0703 05       		.uleb128 0x5
 1791 0704 03       		.byte	0x3
 1792 0705 00000000 		.4byte	bitTime
 1793 0709 17       		.uleb128 0x17
 1794 070a 91020000 		.4byte	.LASF40
 1795 070e 01       		.byte	0x1
 1796 070f 70       		.byte	0x70
 1797 0710 68000000 		.4byte	0x68
 1798 0714 05       		.uleb128 0x5
 1799 0715 03       		.byte	0x3
 1800 0716 08000000 		.4byte	currentByte
 1801 071a 18       		.uleb128 0x18
 1802 071b C3030000 		.4byte	.LASF44
 1803 071f 01       		.byte	0x1
 1804 0720 71       		.byte	0x71
 1805 0721 68000000 		.4byte	0x68
 1806 0725 17       		.uleb128 0x17
 1807 0726 48050000 		.4byte	.LASF41
 1808 072a 01       		.byte	0x1
 1809 072b 72       		.byte	0x72
 1810 072c 68000000 		.4byte	0x68
 1811 0730 05       		.uleb128 0x5
 1812 0731 03       		.byte	0x3
 1813 0732 14000000 		.4byte	sendDataCount
 1814 0736 17       		.uleb128 0x17
 1815 0737 9B000000 		.4byte	.LASF42
 1816 073b 01       		.byte	0x1
 1817 073c 73       		.byte	0x73
 1818 073d 68000000 		.4byte	0x68
 1819 0741 05       		.uleb128 0x5
 1820 0742 03       		.byte	0x3
 1821 0743 04000000 		.4byte	ParityFlag
 1822 0747 19       		.uleb128 0x19
 1823 0748 58000000 		.4byte	.LASF43
 1824 074c 01       		.byte	0x1
 1825 074d 74       		.byte	0x74
 1826 074e 68000000 		.4byte	0x68
 1827 0752 00       		.byte	0
 1828 0753 18       		.uleb128 0x18
 1829 0754 1E050000 		.4byte	.LASF45
 1830 0758 01       		.byte	0x1
 1831 0759 75       		.byte	0x75
 1832 075a 68000000 		.4byte	0x68
 1833 075e 1A       		.uleb128 0x1a
 1834 075f 56050000 		.4byte	.LASF46
 1835 0763 05       		.byte	0x5
 1836 0764 1207     		.2byte	0x712
 1837 0766 6A070000 		.4byte	0x76a
 1838 076a 06       		.uleb128 0x6
 1839 076b 76000000 		.4byte	0x76
 1840 076f 1B       		.uleb128 0x1b
 1841 0770 42050000 		.4byte	.LASF47
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 46


 1842 0774 01       		.byte	0x1
 1843 0775 68       		.byte	0x68
 1844 0776 68000000 		.4byte	0x68
 1845 077a 05       		.uleb128 0x5
 1846 077b 03       		.byte	0x3
 1847 077c 00000000 		.4byte	error
 1848 0780 1C       		.uleb128 0x1c
 1849 0781 6900     		.ascii	"i\000"
 1850 0783 01       		.byte	0x1
 1851 0784 69       		.byte	0x69
 1852 0785 68000000 		.4byte	0x68
 1853 0789 05       		.uleb128 0x5
 1854 078a 03       		.byte	0x3
 1855 078b 00000000 		.4byte	i
 1856 078f 1B       		.uleb128 0x1b
 1857 0790 13060000 		.4byte	.LASF48
 1858 0794 01       		.byte	0x1
 1859 0795 6A       		.byte	0x6a
 1860 0796 68000000 		.4byte	0x68
 1861 079a 05       		.uleb128 0x5
 1862 079b 03       		.byte	0x3
 1863 079c 00000000 		.4byte	sleepCount
 1864 07a0 1B       		.uleb128 0x1b
 1865 07a1 D2040000 		.4byte	.LASF49
 1866 07a5 01       		.byte	0x1
 1867 07a6 6B       		.byte	0x6b
 1868 07a7 8D000000 		.4byte	0x8d
 1869 07ab 05       		.uleb128 0x5
 1870 07ac 03       		.byte	0x3
 1871 07ad 00000000 		.4byte	count
 1872 07b1 1D       		.uleb128 0x1d
 1873 07b2 A7000000 		.4byte	0xa7
 1874 07b6 C1070000 		.4byte	0x7c1
 1875 07ba 1E       		.uleb128 0x1e
 1876 07bb D2000000 		.4byte	0xd2
 1877 07bf 13       		.byte	0x13
 1878 07c0 00       		.byte	0
 1879 07c1 1B       		.uleb128 0x1b
 1880 07c2 9C040000 		.4byte	.LASF50
 1881 07c6 01       		.byte	0x1
 1882 07c7 6C       		.byte	0x6c
 1883 07c8 B1070000 		.4byte	0x7b1
 1884 07cc 05       		.uleb128 0x5
 1885 07cd 03       		.byte	0x3
 1886 07ce 00000000 		.4byte	lineStr
 1887 07d2 1B       		.uleb128 0x1b
 1888 07d3 21010000 		.4byte	.LASF51
 1889 07d7 01       		.byte	0x1
 1890 07d8 6D       		.byte	0x6d
 1891 07d9 B1070000 		.4byte	0x7b1
 1892 07dd 05       		.uleb128 0x5
 1893 07de 03       		.byte	0x3
 1894 07df 00000000 		.4byte	data
 1895 07e3 1B       		.uleb128 0x1b
 1896 07e4 D8040000 		.4byte	.LASF52
 1897 07e8 01       		.byte	0x1
 1898 07e9 6E       		.byte	0x6e
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 47


 1899 07ea 81000000 		.4byte	0x81
 1900 07ee 05       		.uleb128 0x5
 1901 07ef 03       		.byte	0x3
 1902 07f0 00000000 		.4byte	newDataflag
 1903 07f4 1B       		.uleb128 0x1b
 1904 07f5 EA010000 		.4byte	.LASF53
 1905 07f9 01       		.byte	0x1
 1906 07fa 78       		.byte	0x78
 1907 07fb 81000000 		.4byte	0x81
 1908 07ff 05       		.uleb128 0x5
 1909 0800 03       		.byte	0x3
 1910 0801 00000000 		.4byte	errorStatus
 1911 0805 1B       		.uleb128 0x1b
 1912 0806 29050000 		.4byte	.LASF54
 1913 080a 01       		.byte	0x1
 1914 080b 79       		.byte	0x79
 1915 080c 81000000 		.4byte	0x81
 1916 0810 05       		.uleb128 0x5
 1917 0811 03       		.byte	0x3
 1918 0812 00000000 		.4byte	crabsToSend
 1919 0816 1F       		.uleb128 0x1f
 1920 0817 1E060000 		.4byte	.LASF55
 1921 081b 1E060000 		.4byte	.LASF55
 1922 081f 06       		.byte	0x6
 1923 0820 73       		.byte	0x73
 1924 0821 1F       		.uleb128 0x1f
 1925 0822 9E030000 		.4byte	.LASF56
 1926 0826 9E030000 		.4byte	.LASF56
 1927 082a 07       		.byte	0x7
 1928 082b 26       		.byte	0x26
 1929 082c 1F       		.uleb128 0x1f
 1930 082d 00000000 		.4byte	.LASF57
 1931 0831 00000000 		.4byte	.LASF57
 1932 0835 08       		.byte	0x8
 1933 0836 72       		.byte	0x72
 1934 0837 1F       		.uleb128 0x1f
 1935 0838 35050000 		.4byte	.LASF58
 1936 083c 35050000 		.4byte	.LASF58
 1937 0840 09       		.byte	0x9
 1938 0841 3D       		.byte	0x3d
 1939 0842 1F       		.uleb128 0x1f
 1940 0843 E8020000 		.4byte	.LASF59
 1941 0847 E8020000 		.4byte	.LASF59
 1942 084b 0A       		.byte	0xa
 1943 084c E7       		.byte	0xe7
 1944 084d 1F       		.uleb128 0x1f
 1945 084e 4B030000 		.4byte	.LASF60
 1946 0852 4B030000 		.4byte	.LASF60
 1947 0856 09       		.byte	0x9
 1948 0857 3C       		.byte	0x3c
 1949 0858 1F       		.uleb128 0x1f
 1950 0859 20020000 		.4byte	.LASF61
 1951 085d 20020000 		.4byte	.LASF61
 1952 0861 0B       		.byte	0xb
 1953 0862 27       		.byte	0x27
 1954 0863 1F       		.uleb128 0x1f
 1955 0864 84030000 		.4byte	.LASF62
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 48


 1956 0868 84030000 		.4byte	.LASF62
 1957 086c 0B       		.byte	0xb
 1958 086d 28       		.byte	0x28
 1959 086e 1F       		.uleb128 0x1f
 1960 086f F8030000 		.4byte	.LASF63
 1961 0873 F8030000 		.4byte	.LASF63
 1962 0877 0C       		.byte	0xc
 1963 0878 2B       		.byte	0x2b
 1964 0879 1F       		.uleb128 0x1f
 1965 087a 2C030000 		.4byte	.LASF64
 1966 087e 2C030000 		.4byte	.LASF64
 1967 0882 0D       		.byte	0xd
 1968 0883 20       		.byte	0x20
 1969 0884 1F       		.uleb128 0x1f
 1970 0885 35000000 		.4byte	.LASF65
 1971 0889 35000000 		.4byte	.LASF65
 1972 088d 08       		.byte	0x8
 1973 088e 5E       		.byte	0x5e
 1974 088f 1F       		.uleb128 0x1f
 1975 0890 E5030000 		.4byte	.LASF66
 1976 0894 E5030000 		.4byte	.LASF66
 1977 0898 08       		.byte	0x8
 1978 0899 54       		.byte	0x54
 1979 089a 1F       		.uleb128 0x1f
 1980 089b 50010000 		.4byte	.LASF67
 1981 089f 50010000 		.4byte	.LASF67
 1982 08a3 0B       		.byte	0xb
 1983 08a4 18       		.byte	0x18
 1984 08a5 1F       		.uleb128 0x1f
 1985 08a6 E4040000 		.4byte	.LASF68
 1986 08aa E4040000 		.4byte	.LASF68
 1987 08ae 0E       		.byte	0xe
 1988 08af 28       		.byte	0x28
 1989 08b0 1F       		.uleb128 0x1f
 1990 08b1 CD000000 		.4byte	.LASF69
 1991 08b5 CD000000 		.4byte	.LASF69
 1992 08b9 0E       		.byte	0xe
 1993 08ba 25       		.byte	0x25
 1994 08bb 1F       		.uleb128 0x1f
 1995 08bc 55040000 		.4byte	.LASF70
 1996 08c0 55040000 		.4byte	.LASF70
 1997 08c4 09       		.byte	0x9
 1998 08c5 43       		.byte	0x43
 1999 08c6 1F       		.uleb128 0x1f
 2000 08c7 F9050000 		.4byte	.LASF71
 2001 08cb F9050000 		.4byte	.LASF71
 2002 08cf 0F       		.byte	0xf
 2003 08d0 8F       		.byte	0x8f
 2004 08d1 1F       		.uleb128 0x1f
 2005 08d2 43020000 		.4byte	.LASF72
 2006 08d6 43020000 		.4byte	.LASF72
 2007 08da 10       		.byte	0x10
 2008 08db DD       		.byte	0xdd
 2009 08dc 1F       		.uleb128 0x1f
 2010 08dd F9000000 		.4byte	.LASF73
 2011 08e1 F9000000 		.4byte	.LASF73
 2012 08e5 11       		.byte	0x11
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 49


 2013 08e6 8F       		.byte	0x8f
 2014 08e7 1F       		.uleb128 0x1f
 2015 08e8 41000000 		.4byte	.LASF74
 2016 08ec 41000000 		.4byte	.LASF74
 2017 08f0 11       		.byte	0x11
 2018 08f1 5A       		.byte	0x5a
 2019 08f2 1F       		.uleb128 0x1f
 2020 08f3 87020000 		.4byte	.LASF75
 2021 08f7 87020000 		.4byte	.LASF75
 2022 08fb 09       		.byte	0x9
 2023 08fc 42       		.byte	0x42
 2024 08fd 1F       		.uleb128 0x1f
 2025 08fe 68040000 		.4byte	.LASF76
 2026 0902 68040000 		.4byte	.LASF76
 2027 0906 10       		.byte	0x10
 2028 0907 DC       		.byte	0xdc
 2029 0908 1F       		.uleb128 0x1f
 2030 0909 1E000000 		.4byte	.LASF77
 2031 090d 1E000000 		.4byte	.LASF77
 2032 0911 11       		.byte	0x11
 2033 0912 8E       		.byte	0x8e
 2034 0913 1F       		.uleb128 0x1f
 2035 0914 23040000 		.4byte	.LASF78
 2036 0918 23040000 		.4byte	.LASF78
 2037 091c 0F       		.byte	0xf
 2038 091d 8E       		.byte	0x8e
 2039 091e 1F       		.uleb128 0x1f
 2040 091f D5030000 		.4byte	.LASF79
 2041 0923 D5030000 		.4byte	.LASF79
 2042 0927 08       		.byte	0x8
 2043 0928 5D       		.byte	0x5d
 2044 0929 1F       		.uleb128 0x1f
 2045 092a DE000000 		.4byte	.LASF80
 2046 092e DE000000 		.4byte	.LASF80
 2047 0932 12       		.byte	0x12
 2048 0933 28       		.byte	0x28
 2049 0934 1F       		.uleb128 0x1f
 2050 0935 64000000 		.4byte	.LASF81
 2051 0939 64000000 		.4byte	.LASF81
 2052 093d 13       		.byte	0x13
 2053 093e 28       		.byte	0x28
 2054 093f 1F       		.uleb128 0x1f
 2055 0940 66010000 		.4byte	.LASF82
 2056 0944 66010000 		.4byte	.LASF82
 2057 0948 0D       		.byte	0xd
 2058 0949 1F       		.byte	0x1f
 2059 094a 1F       		.uleb128 0x1f
 2060 094b 18040000 		.4byte	.LASF83
 2061 094f 18040000 		.4byte	.LASF83
 2062 0953 06       		.byte	0x6
 2063 0954 72       		.byte	0x72
 2064 0955 1F       		.uleb128 0x1f
 2065 0956 3C040000 		.4byte	.LASF84
 2066 095a 3C040000 		.4byte	.LASF84
 2067 095e 0F       		.byte	0xf
 2068 095f 5A       		.byte	0x5a
 2069 0960 1F       		.uleb128 0x1f
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 50


 2070 0961 FC010000 		.4byte	.LASF85
 2071 0965 FC010000 		.4byte	.LASF85
 2072 0969 12       		.byte	0x12
 2073 096a 18       		.byte	0x18
 2074 096b 1F       		.uleb128 0x1f
 2075 096c 9D020000 		.4byte	.LASF86
 2076 0970 9D020000 		.4byte	.LASF86
 2077 0974 09       		.byte	0x9
 2078 0975 38       		.byte	0x38
 2079 0976 1F       		.uleb128 0x1f
 2080 0977 88040000 		.4byte	.LASF87
 2081 097b 88040000 		.4byte	.LASF87
 2082 097f 10       		.byte	0x10
 2083 0980 92       		.byte	0x92
 2084 0981 1F       		.uleb128 0x1f
 2085 0982 72020000 		.4byte	.LASF88
 2086 0986 72020000 		.4byte	.LASF88
 2087 098a 13       		.byte	0x13
 2088 098b 18       		.byte	0x18
 2089 098c 1F       		.uleb128 0x1f
 2090 098d 04050000 		.4byte	.LASF89
 2091 0991 04050000 		.4byte	.LASF89
 2092 0995 14       		.byte	0x14
 2093 0996 18       		.byte	0x18
 2094 0997 1F       		.uleb128 0x1f
 2095 0998 F1050000 		.4byte	.LASF90
 2096 099c F1050000 		.4byte	.LASF90
 2097 09a0 06       		.byte	0x6
 2098 09a1 76       		.byte	0x76
 2099 09a2 1F       		.uleb128 0x1f
 2100 09a3 A7020000 		.4byte	.LASF91
 2101 09a7 A7020000 		.4byte	.LASF91
 2102 09ab 10       		.byte	0x10
 2103 09ac 93       		.byte	0x93
 2104 09ad 1F       		.uleb128 0x1f
 2105 09ae AB040000 		.4byte	.LASF92
 2106 09b2 AB040000 		.4byte	.LASF92
 2107 09b6 11       		.byte	0x11
 2108 09b7 5B       		.byte	0x5b
 2109 09b8 1F       		.uleb128 0x1f
 2110 09b9 79000000 		.4byte	.LASF93
 2111 09bd 79000000 		.4byte	.LASF93
 2112 09c1 15       		.byte	0x15
 2113 09c2 26       		.byte	0x26
 2114 09c3 1F       		.uleb128 0x1f
 2115 09c4 0D000000 		.4byte	.LASF94
 2116 09c8 0D000000 		.4byte	.LASF94
 2117 09cc 16       		.byte	0x16
 2118 09cd 26       		.byte	0x26
 2119 09ce 1F       		.uleb128 0x1f
 2120 09cf 58020000 		.4byte	.LASF95
 2121 09d3 58020000 		.4byte	.LASF95
 2122 09d7 0C       		.byte	0xc
 2123 09d8 24       		.byte	0x24
 2124 09d9 1F       		.uleb128 0x1f
 2125 09da 91000000 		.4byte	.LASF96
 2126 09de 91000000 		.4byte	.LASF96
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 51


 2127 09e2 0D       		.byte	0xd
 2128 09e3 22       		.byte	0x22
 2129 09e4 1F       		.uleb128 0x1f
 2130 09e5 C1040000 		.4byte	.LASF97
 2131 09e9 C1040000 		.4byte	.LASF97
 2132 09ed 0E       		.byte	0xe
 2133 09ee 18       		.byte	0x18
 2134 09ef 1F       		.uleb128 0x1f
 2135 09f0 76030000 		.4byte	.LASF98
 2136 09f4 76030000 		.4byte	.LASF98
 2137 09f8 0E       		.byte	0xe
 2138 09f9 19       		.byte	0x19
 2139 09fa 1F       		.uleb128 0x1f
 2140 09fb CC010000 		.4byte	.LASF99
 2141 09ff CC010000 		.4byte	.LASF99
 2142 0a03 0C       		.byte	0xc
 2143 0a04 25       		.byte	0x25
 2144 0a05 1F       		.uleb128 0x1f
 2145 0a06 29060000 		.4byte	.LASF100
 2146 0a0a 29060000 		.4byte	.LASF100
 2147 0a0e 10       		.byte	0x10
 2148 0a0f BE       		.byte	0xbe
 2149 0a10 1F       		.uleb128 0x1f
 2150 0a11 5B030000 		.4byte	.LASF101
 2151 0a15 5B030000 		.4byte	.LASF101
 2152 0a19 10       		.byte	0x10
 2153 0a1a C3       		.byte	0xc3
 2154 0a1b 00       		.byte	0
 2155              		.section	.debug_abbrev,"",%progbits
 2156              	.Ldebug_abbrev0:
 2157 0000 01       		.uleb128 0x1
 2158 0001 11       		.uleb128 0x11
 2159 0002 01       		.byte	0x1
 2160 0003 25       		.uleb128 0x25
 2161 0004 0E       		.uleb128 0xe
 2162 0005 13       		.uleb128 0x13
 2163 0006 0B       		.uleb128 0xb
 2164 0007 03       		.uleb128 0x3
 2165 0008 0E       		.uleb128 0xe
 2166 0009 1B       		.uleb128 0x1b
 2167 000a 0E       		.uleb128 0xe
 2168 000b 55       		.uleb128 0x55
 2169 000c 17       		.uleb128 0x17
 2170 000d 11       		.uleb128 0x11
 2171 000e 01       		.uleb128 0x1
 2172 000f 10       		.uleb128 0x10
 2173 0010 17       		.uleb128 0x17
 2174 0011 00       		.byte	0
 2175 0012 00       		.byte	0
 2176 0013 02       		.uleb128 0x2
 2177 0014 24       		.uleb128 0x24
 2178 0015 00       		.byte	0
 2179 0016 0B       		.uleb128 0xb
 2180 0017 0B       		.uleb128 0xb
 2181 0018 3E       		.uleb128 0x3e
 2182 0019 0B       		.uleb128 0xb
 2183 001a 03       		.uleb128 0x3
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 52


 2184 001b 0E       		.uleb128 0xe
 2185 001c 00       		.byte	0
 2186 001d 00       		.byte	0
 2187 001e 03       		.uleb128 0x3
 2188 001f 16       		.uleb128 0x16
 2189 0020 00       		.byte	0
 2190 0021 03       		.uleb128 0x3
 2191 0022 0E       		.uleb128 0xe
 2192 0023 3A       		.uleb128 0x3a
 2193 0024 0B       		.uleb128 0xb
 2194 0025 3B       		.uleb128 0x3b
 2195 0026 0B       		.uleb128 0xb
 2196 0027 49       		.uleb128 0x49
 2197 0028 13       		.uleb128 0x13
 2198 0029 00       		.byte	0
 2199 002a 00       		.byte	0
 2200 002b 04       		.uleb128 0x4
 2201 002c 24       		.uleb128 0x24
 2202 002d 00       		.byte	0
 2203 002e 0B       		.uleb128 0xb
 2204 002f 0B       		.uleb128 0xb
 2205 0030 3E       		.uleb128 0x3e
 2206 0031 0B       		.uleb128 0xb
 2207 0032 03       		.uleb128 0x3
 2208 0033 08       		.uleb128 0x8
 2209 0034 00       		.byte	0
 2210 0035 00       		.byte	0
 2211 0036 05       		.uleb128 0x5
 2212 0037 16       		.uleb128 0x16
 2213 0038 00       		.byte	0
 2214 0039 03       		.uleb128 0x3
 2215 003a 0E       		.uleb128 0xe
 2216 003b 3A       		.uleb128 0x3a
 2217 003c 0B       		.uleb128 0xb
 2218 003d 3B       		.uleb128 0x3b
 2219 003e 05       		.uleb128 0x5
 2220 003f 49       		.uleb128 0x49
 2221 0040 13       		.uleb128 0x13
 2222 0041 00       		.byte	0
 2223 0042 00       		.byte	0
 2224 0043 06       		.uleb128 0x6
 2225 0044 35       		.uleb128 0x35
 2226 0045 00       		.byte	0
 2227 0046 49       		.uleb128 0x49
 2228 0047 13       		.uleb128 0x13
 2229 0048 00       		.byte	0
 2230 0049 00       		.byte	0
 2231 004a 07       		.uleb128 0x7
 2232 004b 04       		.uleb128 0x4
 2233 004c 01       		.byte	0x1
 2234 004d 03       		.uleb128 0x3
 2235 004e 0E       		.uleb128 0xe
 2236 004f 0B       		.uleb128 0xb
 2237 0050 0B       		.uleb128 0xb
 2238 0051 49       		.uleb128 0x49
 2239 0052 13       		.uleb128 0x13
 2240 0053 3A       		.uleb128 0x3a
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 53


 2241 0054 0B       		.uleb128 0xb
 2242 0055 3B       		.uleb128 0x3b
 2243 0056 0B       		.uleb128 0xb
 2244 0057 01       		.uleb128 0x1
 2245 0058 13       		.uleb128 0x13
 2246 0059 00       		.byte	0
 2247 005a 00       		.byte	0
 2248 005b 08       		.uleb128 0x8
 2249 005c 28       		.uleb128 0x28
 2250 005d 00       		.byte	0
 2251 005e 03       		.uleb128 0x3
 2252 005f 0E       		.uleb128 0xe
 2253 0060 1C       		.uleb128 0x1c
 2254 0061 0B       		.uleb128 0xb
 2255 0062 00       		.byte	0
 2256 0063 00       		.byte	0
 2257 0064 09       		.uleb128 0x9
 2258 0065 2E       		.uleb128 0x2e
 2259 0066 00       		.byte	0
 2260 0067 3F       		.uleb128 0x3f
 2261 0068 19       		.uleb128 0x19
 2262 0069 03       		.uleb128 0x3
 2263 006a 0E       		.uleb128 0xe
 2264 006b 3A       		.uleb128 0x3a
 2265 006c 0B       		.uleb128 0xb
 2266 006d 3B       		.uleb128 0x3b
 2267 006e 05       		.uleb128 0x5
 2268 006f 27       		.uleb128 0x27
 2269 0070 19       		.uleb128 0x19
 2270 0071 11       		.uleb128 0x11
 2271 0072 01       		.uleb128 0x1
 2272 0073 12       		.uleb128 0x12
 2273 0074 06       		.uleb128 0x6
 2274 0075 40       		.uleb128 0x40
 2275 0076 18       		.uleb128 0x18
 2276 0077 9742     		.uleb128 0x2117
 2277 0079 19       		.uleb128 0x19
 2278 007a 00       		.byte	0
 2279 007b 00       		.byte	0
 2280 007c 0A       		.uleb128 0xa
 2281 007d 2E       		.uleb128 0x2e
 2282 007e 01       		.byte	0x1
 2283 007f 3F       		.uleb128 0x3f
 2284 0080 19       		.uleb128 0x19
 2285 0081 03       		.uleb128 0x3
 2286 0082 0E       		.uleb128 0xe
 2287 0083 3A       		.uleb128 0x3a
 2288 0084 0B       		.uleb128 0xb
 2289 0085 3B       		.uleb128 0x3b
 2290 0086 05       		.uleb128 0x5
 2291 0087 27       		.uleb128 0x27
 2292 0088 19       		.uleb128 0x19
 2293 0089 11       		.uleb128 0x11
 2294 008a 01       		.uleb128 0x1
 2295 008b 12       		.uleb128 0x12
 2296 008c 06       		.uleb128 0x6
 2297 008d 40       		.uleb128 0x40
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 54


 2298 008e 18       		.uleb128 0x18
 2299 008f 9742     		.uleb128 0x2117
 2300 0091 19       		.uleb128 0x19
 2301 0092 01       		.uleb128 0x1
 2302 0093 13       		.uleb128 0x13
 2303 0094 00       		.byte	0
 2304 0095 00       		.byte	0
 2305 0096 0B       		.uleb128 0xb
 2306 0097 898201   		.uleb128 0x4109
 2307 009a 00       		.byte	0
 2308 009b 11       		.uleb128 0x11
 2309 009c 01       		.uleb128 0x1
 2310 009d 31       		.uleb128 0x31
 2311 009e 13       		.uleb128 0x13
 2312 009f 00       		.byte	0
 2313 00a0 00       		.byte	0
 2314 00a1 0C       		.uleb128 0xc
 2315 00a2 34       		.uleb128 0x34
 2316 00a3 00       		.byte	0
 2317 00a4 03       		.uleb128 0x3
 2318 00a5 0E       		.uleb128 0xe
 2319 00a6 3A       		.uleb128 0x3a
 2320 00a7 0B       		.uleb128 0xb
 2321 00a8 3B       		.uleb128 0x3b
 2322 00a9 05       		.uleb128 0x5
 2323 00aa 49       		.uleb128 0x49
 2324 00ab 13       		.uleb128 0x13
 2325 00ac 02       		.uleb128 0x2
 2326 00ad 17       		.uleb128 0x17
 2327 00ae 00       		.byte	0
 2328 00af 00       		.byte	0
 2329 00b0 0D       		.uleb128 0xd
 2330 00b1 898201   		.uleb128 0x4109
 2331 00b4 01       		.byte	0x1
 2332 00b5 11       		.uleb128 0x11
 2333 00b6 01       		.uleb128 0x1
 2334 00b7 31       		.uleb128 0x31
 2335 00b8 13       		.uleb128 0x13
 2336 00b9 01       		.uleb128 0x1
 2337 00ba 13       		.uleb128 0x13
 2338 00bb 00       		.byte	0
 2339 00bc 00       		.byte	0
 2340 00bd 0E       		.uleb128 0xe
 2341 00be 8A8201   		.uleb128 0x410a
 2342 00c1 00       		.byte	0
 2343 00c2 02       		.uleb128 0x2
 2344 00c3 18       		.uleb128 0x18
 2345 00c4 9142     		.uleb128 0x2111
 2346 00c6 18       		.uleb128 0x18
 2347 00c7 00       		.byte	0
 2348 00c8 00       		.byte	0
 2349 00c9 0F       		.uleb128 0xf
 2350 00ca 898201   		.uleb128 0x4109
 2351 00cd 01       		.byte	0x1
 2352 00ce 11       		.uleb128 0x11
 2353 00cf 01       		.uleb128 0x1
 2354 00d0 31       		.uleb128 0x31
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 55


 2355 00d1 13       		.uleb128 0x13
 2356 00d2 00       		.byte	0
 2357 00d3 00       		.byte	0
 2358 00d4 10       		.uleb128 0x10
 2359 00d5 2E       		.uleb128 0x2e
 2360 00d6 01       		.byte	0x1
 2361 00d7 3F       		.uleb128 0x3f
 2362 00d8 19       		.uleb128 0x19
 2363 00d9 03       		.uleb128 0x3
 2364 00da 0E       		.uleb128 0xe
 2365 00db 3A       		.uleb128 0x3a
 2366 00dc 0B       		.uleb128 0xb
 2367 00dd 3B       		.uleb128 0x3b
 2368 00de 05       		.uleb128 0x5
 2369 00df 27       		.uleb128 0x27
 2370 00e0 19       		.uleb128 0x19
 2371 00e1 49       		.uleb128 0x49
 2372 00e2 13       		.uleb128 0x13
 2373 00e3 11       		.uleb128 0x11
 2374 00e4 01       		.uleb128 0x1
 2375 00e5 12       		.uleb128 0x12
 2376 00e6 06       		.uleb128 0x6
 2377 00e7 40       		.uleb128 0x40
 2378 00e8 18       		.uleb128 0x18
 2379 00e9 9742     		.uleb128 0x2117
 2380 00eb 19       		.uleb128 0x19
 2381 00ec 01       		.uleb128 0x1
 2382 00ed 13       		.uleb128 0x13
 2383 00ee 00       		.byte	0
 2384 00ef 00       		.byte	0
 2385 00f0 11       		.uleb128 0x11
 2386 00f1 05       		.uleb128 0x5
 2387 00f2 00       		.byte	0
 2388 00f3 03       		.uleb128 0x3
 2389 00f4 0E       		.uleb128 0xe
 2390 00f5 3A       		.uleb128 0x3a
 2391 00f6 0B       		.uleb128 0xb
 2392 00f7 3B       		.uleb128 0x3b
 2393 00f8 05       		.uleb128 0x5
 2394 00f9 49       		.uleb128 0x49
 2395 00fa 13       		.uleb128 0x13
 2396 00fb 02       		.uleb128 0x2
 2397 00fc 17       		.uleb128 0x17
 2398 00fd 00       		.byte	0
 2399 00fe 00       		.byte	0
 2400 00ff 12       		.uleb128 0x12
 2401 0100 05       		.uleb128 0x5
 2402 0101 00       		.byte	0
 2403 0102 03       		.uleb128 0x3
 2404 0103 08       		.uleb128 0x8
 2405 0104 3A       		.uleb128 0x3a
 2406 0105 0B       		.uleb128 0xb
 2407 0106 3B       		.uleb128 0x3b
 2408 0107 05       		.uleb128 0x5
 2409 0108 49       		.uleb128 0x49
 2410 0109 13       		.uleb128 0x13
 2411 010a 02       		.uleb128 0x2
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 56


 2412 010b 18       		.uleb128 0x18
 2413 010c 00       		.byte	0
 2414 010d 00       		.byte	0
 2415 010e 13       		.uleb128 0x13
 2416 010f 34       		.uleb128 0x34
 2417 0110 00       		.byte	0
 2418 0111 03       		.uleb128 0x3
 2419 0112 0E       		.uleb128 0xe
 2420 0113 3A       		.uleb128 0x3a
 2421 0114 0B       		.uleb128 0xb
 2422 0115 3B       		.uleb128 0x3b
 2423 0116 05       		.uleb128 0x5
 2424 0117 49       		.uleb128 0x49
 2425 0118 13       		.uleb128 0x13
 2426 0119 02       		.uleb128 0x2
 2427 011a 18       		.uleb128 0x18
 2428 011b 00       		.byte	0
 2429 011c 00       		.byte	0
 2430 011d 14       		.uleb128 0x14
 2431 011e 34       		.uleb128 0x34
 2432 011f 00       		.byte	0
 2433 0120 03       		.uleb128 0x3
 2434 0121 08       		.uleb128 0x8
 2435 0122 3A       		.uleb128 0x3a
 2436 0123 0B       		.uleb128 0xb
 2437 0124 3B       		.uleb128 0x3b
 2438 0125 05       		.uleb128 0x5
 2439 0126 49       		.uleb128 0x49
 2440 0127 13       		.uleb128 0x13
 2441 0128 02       		.uleb128 0x2
 2442 0129 17       		.uleb128 0x17
 2443 012a 00       		.byte	0
 2444 012b 00       		.byte	0
 2445 012c 15       		.uleb128 0x15
 2446 012d 2E       		.uleb128 0x2e
 2447 012e 01       		.byte	0x1
 2448 012f 3F       		.uleb128 0x3f
 2449 0130 19       		.uleb128 0x19
 2450 0131 03       		.uleb128 0x3
 2451 0132 0E       		.uleb128 0xe
 2452 0133 3A       		.uleb128 0x3a
 2453 0134 0B       		.uleb128 0xb
 2454 0135 3B       		.uleb128 0x3b
 2455 0136 0B       		.uleb128 0xb
 2456 0137 49       		.uleb128 0x49
 2457 0138 13       		.uleb128 0x13
 2458 0139 8701     		.uleb128 0x87
 2459 013b 19       		.uleb128 0x19
 2460 013c 11       		.uleb128 0x11
 2461 013d 01       		.uleb128 0x1
 2462 013e 12       		.uleb128 0x12
 2463 013f 06       		.uleb128 0x6
 2464 0140 40       		.uleb128 0x40
 2465 0141 18       		.uleb128 0x18
 2466 0142 9742     		.uleb128 0x2117
 2467 0144 19       		.uleb128 0x19
 2468 0145 01       		.uleb128 0x1
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 57


 2469 0146 13       		.uleb128 0x13
 2470 0147 00       		.byte	0
 2471 0148 00       		.byte	0
 2472 0149 16       		.uleb128 0x16
 2473 014a 34       		.uleb128 0x34
 2474 014b 00       		.byte	0
 2475 014c 03       		.uleb128 0x3
 2476 014d 0E       		.uleb128 0xe
 2477 014e 3A       		.uleb128 0x3a
 2478 014f 0B       		.uleb128 0xb
 2479 0150 3B       		.uleb128 0x3b
 2480 0151 0B       		.uleb128 0xb
 2481 0152 49       		.uleb128 0x49
 2482 0153 13       		.uleb128 0x13
 2483 0154 02       		.uleb128 0x2
 2484 0155 17       		.uleb128 0x17
 2485 0156 00       		.byte	0
 2486 0157 00       		.byte	0
 2487 0158 17       		.uleb128 0x17
 2488 0159 34       		.uleb128 0x34
 2489 015a 00       		.byte	0
 2490 015b 03       		.uleb128 0x3
 2491 015c 0E       		.uleb128 0xe
 2492 015d 3A       		.uleb128 0x3a
 2493 015e 0B       		.uleb128 0xb
 2494 015f 3B       		.uleb128 0x3b
 2495 0160 0B       		.uleb128 0xb
 2496 0161 49       		.uleb128 0x49
 2497 0162 13       		.uleb128 0x13
 2498 0163 02       		.uleb128 0x2
 2499 0164 18       		.uleb128 0x18
 2500 0165 00       		.byte	0
 2501 0166 00       		.byte	0
 2502 0167 18       		.uleb128 0x18
 2503 0168 34       		.uleb128 0x34
 2504 0169 00       		.byte	0
 2505 016a 03       		.uleb128 0x3
 2506 016b 0E       		.uleb128 0xe
 2507 016c 3A       		.uleb128 0x3a
 2508 016d 0B       		.uleb128 0xb
 2509 016e 3B       		.uleb128 0x3b
 2510 016f 0B       		.uleb128 0xb
 2511 0170 49       		.uleb128 0x49
 2512 0171 13       		.uleb128 0x13
 2513 0172 00       		.byte	0
 2514 0173 00       		.byte	0
 2515 0174 19       		.uleb128 0x19
 2516 0175 34       		.uleb128 0x34
 2517 0176 00       		.byte	0
 2518 0177 03       		.uleb128 0x3
 2519 0178 0E       		.uleb128 0xe
 2520 0179 3A       		.uleb128 0x3a
 2521 017a 0B       		.uleb128 0xb
 2522 017b 3B       		.uleb128 0x3b
 2523 017c 0B       		.uleb128 0xb
 2524 017d 49       		.uleb128 0x49
 2525 017e 13       		.uleb128 0x13
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 58


 2526 017f 1C       		.uleb128 0x1c
 2527 0180 0B       		.uleb128 0xb
 2528 0181 00       		.byte	0
 2529 0182 00       		.byte	0
 2530 0183 1A       		.uleb128 0x1a
 2531 0184 34       		.uleb128 0x34
 2532 0185 00       		.byte	0
 2533 0186 03       		.uleb128 0x3
 2534 0187 0E       		.uleb128 0xe
 2535 0188 3A       		.uleb128 0x3a
 2536 0189 0B       		.uleb128 0xb
 2537 018a 3B       		.uleb128 0x3b
 2538 018b 05       		.uleb128 0x5
 2539 018c 49       		.uleb128 0x49
 2540 018d 13       		.uleb128 0x13
 2541 018e 3F       		.uleb128 0x3f
 2542 018f 19       		.uleb128 0x19
 2543 0190 3C       		.uleb128 0x3c
 2544 0191 19       		.uleb128 0x19
 2545 0192 00       		.byte	0
 2546 0193 00       		.byte	0
 2547 0194 1B       		.uleb128 0x1b
 2548 0195 34       		.uleb128 0x34
 2549 0196 00       		.byte	0
 2550 0197 03       		.uleb128 0x3
 2551 0198 0E       		.uleb128 0xe
 2552 0199 3A       		.uleb128 0x3a
 2553 019a 0B       		.uleb128 0xb
 2554 019b 3B       		.uleb128 0x3b
 2555 019c 0B       		.uleb128 0xb
 2556 019d 49       		.uleb128 0x49
 2557 019e 13       		.uleb128 0x13
 2558 019f 3F       		.uleb128 0x3f
 2559 01a0 19       		.uleb128 0x19
 2560 01a1 02       		.uleb128 0x2
 2561 01a2 18       		.uleb128 0x18
 2562 01a3 00       		.byte	0
 2563 01a4 00       		.byte	0
 2564 01a5 1C       		.uleb128 0x1c
 2565 01a6 34       		.uleb128 0x34
 2566 01a7 00       		.byte	0
 2567 01a8 03       		.uleb128 0x3
 2568 01a9 08       		.uleb128 0x8
 2569 01aa 3A       		.uleb128 0x3a
 2570 01ab 0B       		.uleb128 0xb
 2571 01ac 3B       		.uleb128 0x3b
 2572 01ad 0B       		.uleb128 0xb
 2573 01ae 49       		.uleb128 0x49
 2574 01af 13       		.uleb128 0x13
 2575 01b0 3F       		.uleb128 0x3f
 2576 01b1 19       		.uleb128 0x19
 2577 01b2 02       		.uleb128 0x2
 2578 01b3 18       		.uleb128 0x18
 2579 01b4 00       		.byte	0
 2580 01b5 00       		.byte	0
 2581 01b6 1D       		.uleb128 0x1d
 2582 01b7 01       		.uleb128 0x1
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 59


 2583 01b8 01       		.byte	0x1
 2584 01b9 49       		.uleb128 0x49
 2585 01ba 13       		.uleb128 0x13
 2586 01bb 01       		.uleb128 0x1
 2587 01bc 13       		.uleb128 0x13
 2588 01bd 00       		.byte	0
 2589 01be 00       		.byte	0
 2590 01bf 1E       		.uleb128 0x1e
 2591 01c0 21       		.uleb128 0x21
 2592 01c1 00       		.byte	0
 2593 01c2 49       		.uleb128 0x49
 2594 01c3 13       		.uleb128 0x13
 2595 01c4 2F       		.uleb128 0x2f
 2596 01c5 0B       		.uleb128 0xb
 2597 01c6 00       		.byte	0
 2598 01c7 00       		.byte	0
 2599 01c8 1F       		.uleb128 0x1f
 2600 01c9 2E       		.uleb128 0x2e
 2601 01ca 00       		.byte	0
 2602 01cb 3F       		.uleb128 0x3f
 2603 01cc 19       		.uleb128 0x19
 2604 01cd 3C       		.uleb128 0x3c
 2605 01ce 19       		.uleb128 0x19
 2606 01cf 6E       		.uleb128 0x6e
 2607 01d0 0E       		.uleb128 0xe
 2608 01d1 03       		.uleb128 0x3
 2609 01d2 0E       		.uleb128 0xe
 2610 01d3 3A       		.uleb128 0x3a
 2611 01d4 0B       		.uleb128 0xb
 2612 01d5 3B       		.uleb128 0x3b
 2613 01d6 0B       		.uleb128 0xb
 2614 01d7 00       		.byte	0
 2615 01d8 00       		.byte	0
 2616 01d9 00       		.byte	0
 2617              		.section	.debug_loc,"",%progbits
 2618              	.Ldebug_loc0:
 2619              	.LLST0:
 2620 0000 0E000000 		.4byte	.LVL2
 2621 0004 24000000 		.4byte	.LVL3
 2622 0008 0100     		.2byte	0x1
 2623 000a 53       		.byte	0x53
 2624 000b 00000000 		.4byte	0
 2625 000f 00000000 		.4byte	0
 2626              	.LLST1:
 2627 0013 00000000 		.4byte	.LVL24
 2628 0017 40000000 		.4byte	.LVL40
 2629 001b 0100     		.2byte	0x1
 2630 001d 50       		.byte	0x50
 2631 001e 40000000 		.4byte	.LVL40
 2632 0022 42000000 		.4byte	.LFE65
 2633 0026 0400     		.2byte	0x4
 2634 0028 F3       		.byte	0xf3
 2635 0029 01       		.uleb128 0x1
 2636 002a 50       		.byte	0x50
 2637 002b 9F       		.byte	0x9f
 2638 002c 00000000 		.4byte	0
 2639 0030 00000000 		.4byte	0
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 60


 2640              	.LLST2:
 2641 0034 14000000 		.4byte	.LVL25
 2642 0038 16000000 		.4byte	.LVL26
 2643 003c 0100     		.2byte	0x1
 2644 003e 53       		.byte	0x53
 2645 003f 1A000000 		.4byte	.LVL27
 2646 0043 1C000000 		.4byte	.LVL28
 2647 0047 0100     		.2byte	0x1
 2648 0049 53       		.byte	0x53
 2649 004a 20000000 		.4byte	.LVL29
 2650 004e 22000000 		.4byte	.LVL30
 2651 0052 0100     		.2byte	0x1
 2652 0054 53       		.byte	0x53
 2653 0055 26000000 		.4byte	.LVL31
 2654 0059 28000000 		.4byte	.LVL32
 2655 005d 0100     		.2byte	0x1
 2656 005f 53       		.byte	0x53
 2657 0060 2C000000 		.4byte	.LVL33
 2658 0064 2E000000 		.4byte	.LVL34
 2659 0068 0100     		.2byte	0x1
 2660 006a 53       		.byte	0x53
 2661 006b 32000000 		.4byte	.LVL35
 2662 006f 34000000 		.4byte	.LVL36
 2663 0073 0100     		.2byte	0x1
 2664 0075 53       		.byte	0x53
 2665 0076 38000000 		.4byte	.LVL37
 2666 007a 3A000000 		.4byte	.LVL38
 2667 007e 0100     		.2byte	0x1
 2668 0080 53       		.byte	0x53
 2669 0081 3E000000 		.4byte	.LVL39
 2670 0085 42000000 		.4byte	.LFE65
 2671 0089 0100     		.2byte	0x1
 2672 008b 53       		.byte	0x53
 2673 008c 00000000 		.4byte	0
 2674 0090 00000000 		.4byte	0
 2675              	.LLST3:
 2676 0094 04000000 		.4byte	.LVL41
 2677 0098 0C000000 		.4byte	.LVL43
 2678 009c 0200     		.2byte	0x2
 2679 009e 30       		.byte	0x30
 2680 009f 9F       		.byte	0x9f
 2681 00a0 0C000000 		.4byte	.LVL43
 2682 00a4 20000000 		.4byte	.LFE66
 2683 00a8 0100     		.2byte	0x1
 2684 00aa 53       		.byte	0x53
 2685 00ab 00000000 		.4byte	0
 2686 00af 00000000 		.4byte	0
 2687              	.LLST4:
 2688 00b3 02000000 		.4byte	.LVL61
 2689 00b7 60000000 		.4byte	.LVL77
 2690 00bb 0200     		.2byte	0x2
 2691 00bd 30       		.byte	0x30
 2692 00be 9F       		.byte	0x9f
 2693 00bf 60000000 		.4byte	.LVL77
 2694 00c3 88000000 		.4byte	.LVL79
 2695 00c7 0100     		.2byte	0x1
 2696 00c9 54       		.byte	0x54
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 61


 2697 00ca 88000000 		.4byte	.LVL79
 2698 00ce 8A000000 		.4byte	.LVL80
 2699 00d2 0100     		.2byte	0x1
 2700 00d4 50       		.byte	0x50
 2701 00d5 8A000000 		.4byte	.LVL80
 2702 00d9 98000000 		.4byte	.LVL82
 2703 00dd 0100     		.2byte	0x1
 2704 00df 54       		.byte	0x54
 2705 00e0 98000000 		.4byte	.LVL82
 2706 00e4 9A000000 		.4byte	.LVL83
 2707 00e8 0100     		.2byte	0x1
 2708 00ea 50       		.byte	0x50
 2709 00eb 9A000000 		.4byte	.LVL83
 2710 00ef A6000000 		.4byte	.LVL85
 2711 00f3 0100     		.2byte	0x1
 2712 00f5 54       		.byte	0x54
 2713 00f6 A6000000 		.4byte	.LVL85
 2714 00fa A8000000 		.4byte	.LVL86
 2715 00fe 0100     		.2byte	0x1
 2716 0100 50       		.byte	0x50
 2717 0101 A8000000 		.4byte	.LVL86
 2718 0105 B4000000 		.4byte	.LVL88
 2719 0109 0100     		.2byte	0x1
 2720 010b 54       		.byte	0x54
 2721 010c B4000000 		.4byte	.LVL88
 2722 0110 B6000000 		.4byte	.LVL89
 2723 0114 0100     		.2byte	0x1
 2724 0116 50       		.byte	0x50
 2725 0117 B6000000 		.4byte	.LVL89
 2726 011b AC010000 		.4byte	.LFE64
 2727 011f 0100     		.2byte	0x1
 2728 0121 54       		.byte	0x54
 2729 0122 00000000 		.4byte	0
 2730 0126 00000000 		.4byte	0
 2731              	.LLST5:
 2732 012a 02000000 		.4byte	.LVL61
 2733 012e 60000000 		.4byte	.LVL77
 2734 0132 0200     		.2byte	0x2
 2735 0134 30       		.byte	0x30
 2736 0135 9F       		.byte	0x9f
 2737 0136 60000000 		.4byte	.LVL77
 2738 013a AC010000 		.4byte	.LFE64
 2739 013e 0100     		.2byte	0x1
 2740 0140 55       		.byte	0x55
 2741 0141 00000000 		.4byte	0
 2742 0145 00000000 		.4byte	0
 2743              		.section	.debug_aranges,"",%progbits
 2744 0000 64000000 		.4byte	0x64
 2745 0004 0200     		.2byte	0x2
 2746 0006 00000000 		.4byte	.Ldebug_info0
 2747 000a 04       		.byte	0x4
 2748 000b 00       		.byte	0
 2749 000c 0000     		.2byte	0
 2750 000e 0000     		.2byte	0
 2751 0010 00000000 		.4byte	.LFB69
 2752 0014 38000000 		.4byte	.LFE69-.LFB69
 2753 0018 00000000 		.4byte	.LFB71
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 62


 2754 001c 08000000 		.4byte	.LFE71-.LFB71
 2755 0020 00000000 		.4byte	.LFB70
 2756 0024 B8000000 		.4byte	.LFE70-.LFB70
 2757 0028 00000000 		.4byte	.LFB72
 2758 002c 24000000 		.4byte	.LFE72-.LFB72
 2759 0030 00000000 		.4byte	.LFB73
 2760 0034 28000000 		.4byte	.LFE73-.LFB73
 2761 0038 00000000 		.4byte	.LFB65
 2762 003c 42000000 		.4byte	.LFE65-.LFB65
 2763 0040 00000000 		.4byte	.LFB66
 2764 0044 20000000 		.4byte	.LFE66-.LFB66
 2765 0048 00000000 		.4byte	.LFB67
 2766 004c 18000000 		.4byte	.LFE67-.LFB67
 2767 0050 00000000 		.4byte	.LFB68
 2768 0054 28000000 		.4byte	.LFE68-.LFB68
 2769 0058 00000000 		.4byte	.LFB64
 2770 005c AC010000 		.4byte	.LFE64-.LFB64
 2771 0060 00000000 		.4byte	0
 2772 0064 00000000 		.4byte	0
 2773              		.section	.debug_ranges,"",%progbits
 2774              	.Ldebug_ranges0:
 2775 0000 00000000 		.4byte	.LFB69
 2776 0004 38000000 		.4byte	.LFE69
 2777 0008 00000000 		.4byte	.LFB71
 2778 000c 08000000 		.4byte	.LFE71
 2779 0010 00000000 		.4byte	.LFB70
 2780 0014 B8000000 		.4byte	.LFE70
 2781 0018 00000000 		.4byte	.LFB72
 2782 001c 24000000 		.4byte	.LFE72
 2783 0020 00000000 		.4byte	.LFB73
 2784 0024 28000000 		.4byte	.LFE73
 2785 0028 00000000 		.4byte	.LFB65
 2786 002c 42000000 		.4byte	.LFE65
 2787 0030 00000000 		.4byte	.LFB66
 2788 0034 20000000 		.4byte	.LFE66
 2789 0038 00000000 		.4byte	.LFB67
 2790 003c 18000000 		.4byte	.LFE67
 2791 0040 00000000 		.4byte	.LFB68
 2792 0044 28000000 		.4byte	.LFE68
 2793 0048 00000000 		.4byte	.LFB64
 2794 004c AC010000 		.4byte	.LFE64
 2795 0050 00000000 		.4byte	0
 2796 0054 00000000 		.4byte	0
 2797              		.section	.debug_line,"",%progbits
 2798              	.Ldebug_line0:
 2799 0000 0A040000 		.section	.debug_str,"MS",%progbits,1
 2799      0200B302 
 2799      00000201 
 2799      FB0E0D00 
 2799      01010101 
 2800              	.LASF57:
 2801 0000 55415254 		.ascii	"UART_GetByte\000"
 2801      5F476574 
 2801      42797465 
 2801      00
 2802              	.LASF94:
 2803 000d 5369676E 		.ascii	"SignalBase_Write\000"
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 63


 2803      616C4261 
 2803      73655F57 
 2803      72697465 
 2803      00
 2804              	.LASF77:
 2805 001e 50574D5F 		.ascii	"PWM_Switch_Timer_Sleep\000"
 2805      53776974 
 2805      63685F54 
 2805      696D6572 
 2805      5F536C65 
 2806              	.LASF65:
 2807 0035 55415254 		.ascii	"UART_Wakeup\000"
 2807      5F57616B 
 2807      65757000 
 2808              	.LASF74:
 2809 0041 50574D5F 		.ascii	"PWM_Switch_Timer_Start\000"
 2809      53776974 
 2809      63685F54 
 2809      696D6572 
 2809      5F537461 
 2810              	.LASF43:
 2811 0058 6D617844 		.ascii	"maxDataFlag\000"
 2811      61746146 
 2811      6C616700 
 2812              	.LASF81:
 2813 0064 6973725F 		.ascii	"isr_sec_ClearPending\000"
 2813      7365635F 
 2813      436C6561 
 2813      7250656E 
 2813      64696E67 
 2814              	.LASF93:
 2815 0079 48696768 		.ascii	"HighVoltage_Write\000"
 2815      566F6C74 
 2815      6167655F 
 2815      57726974 
 2815      6500
 2816              	.LASF105:
 2817 008b 73746174 		.ascii	"state\000"
 2817      6500
 2818              	.LASF96:
 2819 0091 4379506D 		.ascii	"CyPmSleep\000"
 2819      536C6565 
 2819      7000
 2820              	.LASF42:
 2821 009b 50617269 		.ascii	"ParityFlag\000"
 2821      7479466C 
 2821      616700
 2822              	.LASF2:
 2823 00a6 73686F72 		.ascii	"short int\000"
 2823      7420696E 
 2823      7400
 2824              	.LASF36:
 2825 00b0 676F546F 		.ascii	"goToSleep\000"
 2825      536C6565 
 2825      7000
 2826              	.LASF26:
 2827 00ba 77616B65 		.ascii	"wakeUpIsr\000"
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 64


 2827      55704973 
 2827      7200
 2828              	.LASF19:
 2829 00c4 73697A65 		.ascii	"sizetype\000"
 2829      74797065 
 2829      00
 2830              	.LASF69:
 2831 00cd 52785761 		.ascii	"RxWakeUp_Disable\000"
 2831      6B655570 
 2831      5F446973 
 2831      61626C65 
 2831      00
 2832              	.LASF80:
 2833 00de 77617463 		.ascii	"watchDogCheck_ClearPending\000"
 2833      68446F67 
 2833      43686563 
 2833      6B5F436C 
 2833      65617250 
 2834              	.LASF73:
 2835 00f9 50574D5F 		.ascii	"PWM_Switch_Timer_Wakeup\000"
 2835      53776974 
 2835      63685F54 
 2835      696D6572 
 2835      5F57616B 
 2836              	.LASF15:
 2837 0111 63686172 		.ascii	"char8\000"
 2837      3800
 2838              	.LASF31:
 2839 0117 42797465 		.ascii	"Byte\000"
 2839      00
 2840              	.LASF37:
 2841 011c 6D61696E 		.ascii	"main\000"
 2841      00
 2842              	.LASF51:
 2843 0121 64617461 		.ascii	"data\000"
 2843      00
 2844              	.LASF28:
 2845 0126 6865785F 		.ascii	"hex_value\000"
 2845      76616C75 
 2845      6500
 2846              	.LASF35:
 2847 0130 77616B65 		.ascii	"wakeUp\000"
 2847      557000
 2848              	.LASF5:
 2849 0137 6C6F6E67 		.ascii	"long unsigned int\000"
 2849      20756E73 
 2849      69676E65 
 2849      6420696E 
 2849      7400
 2850              	.LASF34:
 2851 0149 70617269 		.ascii	"parity\000"
 2851      747900
 2852              	.LASF67:
 2853 0150 6973725F 		.ascii	"isr_rx_StartEx\000"
 2853      72785F53 
 2853      74617274 
 2853      457800
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 65


 2854              	.LASF12:
 2855 015f 75696E74 		.ascii	"uint16\000"
 2855      313600
 2856              	.LASF82:
 2857 0166 4379506D 		.ascii	"CyPmSaveClocks\000"
 2857      53617665 
 2857      436C6F63 
 2857      6B7300
 2858              	.LASF11:
 2859 0175 75696E74 		.ascii	"uint8\000"
 2859      3800
 2860              	.LASF20:
 2861 017b 456E636F 		.ascii	"Encoding_Byte1\000"
 2861      64696E67 
 2861      5F427974 
 2861      653100
 2862              	.LASF104:
 2863 018a 433A5C55 		.ascii	"C:\\Users\\sdysart\\Documents\\UACS\\UACS\\HighFreq"
 2863      73657273 
 2863      5C736479 
 2863      73617274 
 2863      5C446F63 
 2864 01b7 46534B5C 		.ascii	"FSK\\UART_FSKTx.cydsn\000"
 2864      55415254 
 2864      5F46534B 
 2864      54782E63 
 2864      7964736E 
 2865              	.LASF99:
 2866 01cc 536C6565 		.ascii	"SleepTimer_Stop\000"
 2866      7054696D 
 2866      65725F53 
 2866      746F7000 
 2867              	.LASF24:
 2868 01dc 77617463 		.ascii	"watchDogCheck\000"
 2868      68446F67 
 2868      43686563 
 2868      6B00
 2869              	.LASF53:
 2870 01ea 6572726F 		.ascii	"errorStatus\000"
 2870      72537461 
 2870      74757300 
 2871              	.LASF13:
 2872 01f6 666C6F61 		.ascii	"float\000"
 2872      7400
 2873              	.LASF85:
 2874 01fc 77617463 		.ascii	"watchDogCheck_StartEx\000"
 2874      68446F67 
 2874      43686563 
 2874      6B5F5374 
 2874      61727445 
 2875              	.LASF6:
 2876 0212 6C6F6E67 		.ascii	"long long int\000"
 2876      206C6F6E 
 2876      6720696E 
 2876      7400
 2877              	.LASF61:
 2878 0220 6973725F 		.ascii	"isr_rx_SetPending\000"
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 66


 2878      72785F53 
 2878      65745065 
 2878      6E64696E 
 2878      6700
 2879              	.LASF4:
 2880 0232 6C6F6E67 		.ascii	"long int\000"
 2880      20696E74 
 2880      00
 2881              	.LASF30:
 2882 023b 62697443 		.ascii	"bitCase\000"
 2882      61736500 
 2883              	.LASF72:
 2884 0243 50574D5F 		.ascii	"PWM_Modulator_Wakeup\000"
 2884      4D6F6475 
 2884      6C61746F 
 2884      725F5761 
 2884      6B657570 
 2885              	.LASF95:
 2886 0258 536C6565 		.ascii	"SleepTimer_Start\000"
 2886      7054696D 
 2886      65725F53 
 2886      74617274 
 2886      00
 2887              	.LASF27:
 2888 0269 52785761 		.ascii	"RxWakeUp\000"
 2888      6B655570 
 2888      00
 2889              	.LASF88:
 2890 0272 6973725F 		.ascii	"isr_sec_StartEx\000"
 2890      7365635F 
 2890      53746172 
 2890      74457800 
 2891              	.LASF21:
 2892 0282 44617461 		.ascii	"Data\000"
 2892      00
 2893              	.LASF75:
 2894 0287 4C43445F 		.ascii	"LCD_Sleep\000"
 2894      536C6565 
 2894      7000
 2895              	.LASF40:
 2896 0291 63757272 		.ascii	"currentByte\000"
 2896      656E7442 
 2896      79746500 
 2897              	.LASF86:
 2898 029d 4C43445F 		.ascii	"LCD_Start\000"
 2898      53746172 
 2898      7400
 2899              	.LASF91:
 2900 02a7 50574D5F 		.ascii	"PWM_Modulator_Stop\000"
 2900      4D6F6475 
 2900      6C61746F 
 2900      725F5374 
 2900      6F7000
 2901              	.LASF18:
 2902 02ba 6C6F6E67 		.ascii	"long double\000"
 2902      20646F75 
 2902      626C6500 
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 67


 2903              	.LASF29:
 2904 02c6 72785374 		.ascii	"rxStatus\000"
 2904      61747573 
 2904      00
 2905              	.LASF1:
 2906 02cf 756E7369 		.ascii	"unsigned char\000"
 2906      676E6564 
 2906      20636861 
 2906      7200
 2907              	.LASF32:
 2908 02dd 46696E64 		.ascii	"FindParity\000"
 2908      50617269 
 2908      747900
 2909              	.LASF59:
 2910 02e8 73707269 		.ascii	"sprintf\000"
 2910      6E746600 
 2911              	.LASF23:
 2912 02f0 4465636F 		.ascii	"Decoding_Byte1\000"
 2912      64696E67 
 2912      5F427974 
 2912      653100
 2913              	.LASF0:
 2914 02ff 7369676E 		.ascii	"signed char\000"
 2914      65642063 
 2914      68617200 
 2915              	.LASF38:
 2916 030b 64617461 		.ascii	"data_turn\000"
 2916      5F747572 
 2916      6E00
 2917              	.LASF7:
 2918 0315 6C6F6E67 		.ascii	"long long unsigned int\000"
 2918      206C6F6E 
 2918      6720756E 
 2918      7369676E 
 2918      65642069 
 2919              	.LASF64:
 2920 032c 4379506D 		.ascii	"CyPmRestoreClocks\000"
 2920      52657374 
 2920      6F726543 
 2920      6C6F636B 
 2920      7300
 2921              	.LASF8:
 2922 033e 756E7369 		.ascii	"unsigned int\000"
 2922      676E6564 
 2922      20696E74 
 2922      00
 2923              	.LASF60:
 2924 034b 4C43445F 		.ascii	"LCD_PrintString\000"
 2924      5072696E 
 2924      74537472 
 2924      696E6700 
 2925              	.LASF101:
 2926 035b 50574D5F 		.ascii	"PWM_Modulator_WriteCompare\000"
 2926      4D6F6475 
 2926      6C61746F 
 2926      725F5772 
 2926      69746543 
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 68


 2927              	.LASF98:
 2928 0376 52785761 		.ascii	"RxWakeUp_Stop\000"
 2928      6B655570 
 2928      5F53746F 
 2928      7000
 2929              	.LASF62:
 2930 0384 6973725F 		.ascii	"isr_rx_ClearPending\000"
 2930      72785F43 
 2930      6C656172 
 2930      50656E64 
 2930      696E6700 
 2931              	.LASF25:
 2932 0398 52784973 		.ascii	"RxIsr\000"
 2932      7200
 2933              	.LASF56:
 2934 039e 736C6565 		.ascii	"sleepToggle_Write\000"
 2934      70546F67 
 2934      676C655F 
 2934      57726974 
 2934      6500
 2935              	.LASF3:
 2936 03b0 73686F72 		.ascii	"short unsigned int\000"
 2936      7420756E 
 2936      7369676E 
 2936      65642069 
 2936      6E7400
 2937              	.LASF44:
 2938 03c3 70726566 		.ascii	"prefixTime\000"
 2938      69785469 
 2938      6D6500
 2939              	.LASF22:
 2940 03ce 50617269 		.ascii	"Parity\000"
 2940      747900
 2941              	.LASF79:
 2942 03d5 55415254 		.ascii	"UART_Sleep\000"
 2942      5F536C65 
 2942      657000
 2943              	.LASF16:
 2944 03e0 63686172 		.ascii	"char\000"
 2944      00
 2945              	.LASF66:
 2946 03e5 55415254 		.ascii	"UART_Start\000"
 2946      5F537461 
 2946      727400
 2947              	.LASF10:
 2948 03f0 696E7433 		.ascii	"int32_t\000"
 2948      325F7400 
 2949              	.LASF63:
 2950 03f8 536C6565 		.ascii	"SleepTimer_GetStatus\000"
 2950      7054696D 
 2950      65725F47 
 2950      65745374 
 2950      61747573 
 2951              	.LASF33:
 2952 040d 62697454 		.ascii	"bitToCheck\000"
 2952      6F436865 
 2952      636B00
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 69


 2953              	.LASF83:
 2954 0418 43795764 		.ascii	"CyWdtStart\000"
 2954      74537461 
 2954      727400
 2955              	.LASF78:
 2956 0423 63686563 		.ascii	"checkWatchDogTimer_Sleep\000"
 2956      6B576174 
 2956      6368446F 
 2956      6754696D 
 2956      65725F53 
 2957              	.LASF84:
 2958 043c 63686563 		.ascii	"checkWatchDogTimer_Start\000"
 2958      6B576174 
 2958      6368446F 
 2958      6754696D 
 2958      65725F53 
 2959              	.LASF70:
 2960 0455 4C43445F 		.ascii	"LCD_Wakeup\000"
 2960      57616B65 
 2960      757000
 2961              	.LASF39:
 2962 0460 62697454 		.ascii	"bitTime\000"
 2962      696D6500 
 2963              	.LASF76:
 2964 0468 50574D5F 		.ascii	"PWM_Modulator_Sleep\000"
 2964      4D6F6475 
 2964      6C61746F 
 2964      725F536C 
 2964      65657000 
 2965              	.LASF103:
 2966 047c 6D61696E 		.ascii	"main.c\000"
 2966      2E6300
 2967              	.LASF17:
 2968 0483 72656738 		.ascii	"reg8\000"
 2968      00
 2969              	.LASF87:
 2970 0488 50574D5F 		.ascii	"PWM_Modulator_Start\000"
 2970      4D6F6475 
 2970      6C61746F 
 2970      725F5374 
 2970      61727400 
 2971              	.LASF50:
 2972 049c 6C696E65 		.ascii	"lineStr\000"
 2972      53747200 
 2973              	.LASF14:
 2974 04a4 646F7562 		.ascii	"double\000"
 2974      6C6500
 2975              	.LASF92:
 2976 04ab 50574D5F 		.ascii	"PWM_Switch_Timer_Stop\000"
 2976      53776974 
 2976      63685F54 
 2976      696D6572 
 2976      5F53746F 
 2977              	.LASF97:
 2978 04c1 52785761 		.ascii	"RxWakeUp_StartEx\000"
 2978      6B655570 
 2978      5F537461 
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 70


 2978      72744578 
 2978      00
 2979              	.LASF49:
 2980 04d2 636F756E 		.ascii	"count\000"
 2980      7400
 2981              	.LASF52:
 2982 04d8 6E657744 		.ascii	"newDataflag\000"
 2982      61746166 
 2982      6C616700 
 2983              	.LASF68:
 2984 04e4 52785761 		.ascii	"RxWakeUp_ClearPending\000"
 2984      6B655570 
 2984      5F436C65 
 2984      61725065 
 2984      6E64696E 
 2985              	.LASF9:
 2986 04fa 5F5F696E 		.ascii	"__int32_t\000"
 2986      7433325F 
 2986      7400
 2987              	.LASF89:
 2988 0504 536C6565 		.ascii	"Sleep_ISR_StartEx\000"
 2988      705F4953 
 2988      525F5374 
 2988      61727445 
 2988      7800
 2989              	.LASF106:
 2990 0516 6973725F 		.ascii	"isr_sec\000"
 2990      73656300 
 2991              	.LASF45:
 2992 051e 77616B65 		.ascii	"wakeUpData\000"
 2992      55704461 
 2992      746100
 2993              	.LASF54:
 2994 0529 63726162 		.ascii	"crabsToSend\000"
 2994      73546F53 
 2994      656E6400 
 2995              	.LASF58:
 2996 0535 4C43445F 		.ascii	"LCD_Position\000"
 2996      506F7369 
 2996      74696F6E 
 2996      00
 2997              	.LASF47:
 2998 0542 6572726F 		.ascii	"error\000"
 2998      7200
 2999              	.LASF41:
 3000 0548 73656E64 		.ascii	"sendDataCount\000"
 3000      44617461 
 3000      436F756E 
 3000      7400
 3001              	.LASF46:
 3002 0556 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3002      52784275 
 3002      66666572 
 3002      00
 3003              	.LASF102:
 3004 0563 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3004      43313120 
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccWLk1Bk.s 			page 71


 3004      352E342E 
 3004      31203230 
 3004      31363036 
 3005 0596 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3005      20726576 
 3005      6973696F 
 3005      6E203233 
 3005      37373135 
 3006 05c9 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3006      66756E63 
 3006      74696F6E 
 3006      2D736563 
 3006      74696F6E 
 3007              	.LASF90:
 3008 05f1 43794465 		.ascii	"CyDelay\000"
 3008      6C617900 
 3009              	.LASF71:
 3010 05f9 63686563 		.ascii	"checkWatchDogTimer_Wakeup\000"
 3010      6B576174 
 3010      6368446F 
 3010      6754696D 
 3010      65725F57 
 3011              	.LASF48:
 3012 0613 736C6565 		.ascii	"sleepCount\000"
 3012      70436F75 
 3012      6E7400
 3013              	.LASF55:
 3014 061e 43795764 		.ascii	"CyWdtClear\000"
 3014      74436C65 
 3014      617200
 3015              	.LASF100:
 3016 0629 50574D5F 		.ascii	"PWM_Modulator_WritePeriod\000"
 3016      4D6F6475 
 3016      6C61746F 
 3016      725F5772 
 3016      69746550 
 3017              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
