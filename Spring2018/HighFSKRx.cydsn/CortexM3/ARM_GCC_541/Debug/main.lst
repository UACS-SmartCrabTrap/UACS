ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Bit_Timer,"ax",%progbits
  20              		.align	2
  21              		.global	Bit_Timer
  22              		.thumb
  23              		.thumb_func
  24              		.type	Bit_Timer, %function
  25              	Bit_Timer:
  26              	.LFB65:
  27              		.file 1 "main.c"
   1:main.c        **** /* =============================================================================
   2:main.c        ****  * Smart Crab Trap
   3:main.c        ****  * FSK RX 
   4:main.c        ****  * Edited by: Stephanie Salazar
   5:main.c        ****  * Revision: 5/10/18
   6:main.c        ****  * Function: This project takes in a signal from an outside source
   7:main.c        ****  * and reads the data within the signal. This code waits for a pre-fix
   8:main.c        ****  * of 0xFF and then reads the next 4 bits as the data and confirms
   9:main.c        ****  * the message with a post-fix of 0x01. The data is displayed on an LCD display.
  10:main.c        ****  * =============================================================================
  11:main.c        **** */
  12:main.c        **** 
  13:main.c        **** #include "project.h"
  14:main.c        **** #include <stdio.h>
  15:main.c        **** #include "LCD_Char.h"
  16:main.c        **** 
  17:main.c        **** #define ARRAY_SIZE        12
  18:main.c        **** #define COUNT             100
  19:main.c        **** #define PREFIX_ACCURACY   90
  20:main.c        **** #define DATA_ACCURACY     70
  21:main.c        **** #define DATA_LENGTH       7
  22:main.c        **** #define PREFIX            0xFF
  23:main.c        **** #define POSTFIX           0x01
  24:main.c        **** #define BIT_0_MASK        0x1
  25:main.c        **** #define SUCCESS           0x1
  26:main.c        **** #define FAILURE           0x0
  27:main.c        **** #define TRUE              0x1
  28:main.c        **** #define FALSE             0x0
  29:main.c        **** #define FiveSecs          5000
  30:main.c        **** #define TRANSMISSIONS_3    2
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 2


  31:main.c        **** #define Delay              1
  32:main.c        **** 
  33:main.c        **** /*Function Prototypes*/
  34:main.c        **** void Display(void);
  35:main.c        **** int CheckParity(int);
  36:main.c        **** void SendData(void);
  37:main.c        **** void startModules(void);
  38:main.c        **** void stopModules(void);
  39:main.c        **** 
  40:main.c        **** // Interrupt for switching bits 5 ms
  41:main.c        **** CY_ISR_PROTO(Bit_Timer);
  42:main.c        **** CY_ISR_PROTO(watchDogCheck);
  43:main.c        **** CY_ISR_PROTO(wakeUp_ISR);
  44:main.c        **** 
  45:main.c        **** // Global Variables
  46:main.c        **** static uint16 levelCounter = 0; // Timer counter to debounce bit
  47:main.c        **** static uint16 zeroCount = 0; // 0 count used in timer counter debounce
  48:main.c        **** static uint16 oneCount = 0; // 1 count used in timer counter debounce
  49:main.c        **** static uint8 currentBit = 0; // x/10 bit decision for 500 ms bit
  50:main.c        **** static uint8 dataCount = 0; // which bit of data we are looking at
  51:main.c        **** static uint16 data = 0; // byte bits of data
  52:main.c        **** static uint16 crabs = 0; // byte of data transferred from data variable
  53:main.c        **** static uint8 dataFlag = 0; // Flag to start looking for data
  54:main.c        **** static uint8 decodeFlag = 0; // Flag to start looking for post-fix
  55:main.c        **** static int paritySuccess = 0;
  56:main.c        **** static uint8 threeTransmissions = 0; // checks for 3 transmission before reinstatiating sleep timer
  57:main.c        **** static uint8 sleepFlag = FALSE; 
  58:main.c        **** 
  59:main.c        **** // LCD String Variables
  60:main.c        **** char OutputString[ARRAY_SIZE];
  61:main.c        **** char display[ARRAY_SIZE];
  62:main.c        **** 
  63:main.c        **** // FLAGS for turning on messages on LCD screen
  64:main.c        **** static uint8 lcdFlagEncode = FALSE; // Turns on pre-fix message
  65:main.c        **** static uint8 lcdFlagData = FALSE; // Displays data 
  66:main.c        **** static uint8 lcdFlagDecode = FALSE; // good or bad postfix
  67:main.c        **** static uint8 decodeWrong = FALSE;
  68:main.c        **** 
  69:main.c        **** 
  70:main.c        **** int main(void)
  71:main.c        **** {
  72:main.c        ****     
  73:main.c        ****     CyGlobalIntEnable;
  74:main.c        ****     
  75:main.c        ****     startModules(); 
  76:main.c        ****     
  77:main.c        ****     /* Module is turned on- will display again if watchdog timer is enabled */
  78:main.c        ****     sprintf(display, "Starting Module!");
  79:main.c        ****     LCD_Char_Position(0u,0u); // Resets cursor to top of LCD Screen
  80:main.c        ****     LCD_Char_PrintString(display);
  81:main.c        ****     
  82:main.c        ****  
  83:main.c        ****     /* initialization/startup code here */
  84:main.c        ****     Timer_ISR_StartEx(Bit_Timer);
  85:main.c        ****     Sleep_ISR_StartEx(wakeUp_ISR);    
  86:main.c        ****     watchDogCheck_StartEx(watchDogCheck);
  87:main.c        ****     
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 3


  88:main.c        ****     
  89:main.c        ****     // Start watch dog timer to check for blocks in code
  90:main.c        ****     CyWdtStart(CYWDT_1024_TICKS, CYWDT_LPMODE_NOCHANGE);
  91:main.c        ****     
  92:main.c        **** 
  93:main.c        ****     // Displays Loading Message before receiving pre-fix=
  94:main.c        ****     sprintf(display, "counting crabs...");
  95:main.c        ****     LCD_Char_Position(0u,0u); // Resets cursor to top of LCD Screen
  96:main.c        ****     LCD_Char_PrintString(display);
  97:main.c        ****     
  98:main.c        ****     Power_Toggle_Write(TRUE); // Turn analog circuit on
  99:main.c        ****         
 100:main.c        ****     //
 101:main.c        ****       
 102:main.c        ****     SleepTimer_Start();   
 103:main.c        ****     stopModules(); 
 104:main.c        ****     CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW);
 105:main.c        **** 
 106:main.c        ****     for(;;)
 107:main.c        ****     {
 108:main.c        ****         Display();
 109:main.c        ****          // PSoC Sleep command. To adjust sleep time, change in the hardware
 110:main.c        ****         //  block. No sleep time parameters taken in PSoC5LP.
 111:main.c        ****         //  PM_SLEEP_TIME_NONE is a relic of PSoC3
 112:main.c        ****         if(sleepFlag == TRUE){
 113:main.c        ****                 sleepToggle_Write(TRUE);
 114:main.c        ****                 CyDelay(300);
 115:main.c        ****                 sleepToggle_Write(FALSE);
 116:main.c        ****             
 117:main.c        ****             sleepFlag = FALSE; 
 118:main.c        ****             Power_Toggle_Write(FALSE);
 119:main.c        ****             stopModules(); 
 120:main.c        ****             CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW);
 121:main.c        ****         
 122:main.c        ****         }
 123:main.c        **** 
 124:main.c        ****     } // end of for(;;)
 125:main.c        **** } // end of main()
 126:main.c        **** 
 127:main.c        **** 
 128:main.c        **** 
 129:main.c        **** //Bit length = 500 ms
 130:main.c        **** //timer period = 5 ms
 131:main.c        **** //will check bit COUNT times, to debounce
 132:main.c        **** CY_ISR(Bit_Timer){
  28              		.loc 1 132 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
 133:main.c        ****     levelCounter++;
  36              		.loc 1 133 0
  37 0002 484A     		ldr	r2, .L14
  38 0004 1388     		ldrh	r3, [r2]
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 4


  39 0006 0133     		adds	r3, r3, #1
  40 0008 1380     		strh	r3, [r2]	@ movhi
 134:main.c        ****     
 135:main.c        ****     // Count whether bit is currently 1 or 0
 136:main.c        ****     if(Out_Comp_GetCompare() != 0){
  41              		.loc 1 136 0
  42 000a FFF7FEFF 		bl	Out_Comp_GetCompare
  43              	.LVL0:
  44 000e 20B1     		cbz	r0, .L2
 137:main.c        ****         oneCount++;
  45              		.loc 1 137 0
  46 0010 444A     		ldr	r2, .L14
  47 0012 5388     		ldrh	r3, [r2, #2]
  48 0014 0133     		adds	r3, r3, #1
  49 0016 5380     		strh	r3, [r2, #2]	@ movhi
  50 0018 03E0     		b	.L3
  51              	.L2:
 138:main.c        ****     }else{
 139:main.c        ****         zeroCount++;
  52              		.loc 1 139 0
  53 001a 424A     		ldr	r2, .L14
  54 001c 9388     		ldrh	r3, [r2, #4]
  55 001e 0133     		adds	r3, r3, #1
  56 0020 9380     		strh	r3, [r2, #4]	@ movhi
  57              	.L3:
 140:main.c        ****     }
 141:main.c        ****     
 142:main.c        ****     // Debouncing
 143:main.c        ****     if(levelCounter == COUNT){
  58              		.loc 1 143 0
  59 0022 404B     		ldr	r3, .L14
  60 0024 1B88     		ldrh	r3, [r3]
  61 0026 642B     		cmp	r3, #100
  62 0028 7BD1     		bne	.L1
 144:main.c        ****         if((dataFlag == FALSE) && (decodeFlag == FALSE)){ //looking for prefix
  63              		.loc 1 144 0
  64 002a 3E4B     		ldr	r3, .L14
  65 002c 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
  66 002e ABB9     		cbnz	r3, .L5
  67              		.loc 1 144 0 is_stmt 0 discriminator 1
  68 0030 3C4B     		ldr	r3, .L14
  69 0032 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
  70 0034 93B9     		cbnz	r3, .L5
 145:main.c        ****             if(oneCount >= PREFIX_ACCURACY){ // 1 bit must be Accuracy/100 = 1 
  71              		.loc 1 145 0 is_stmt 1
  72 0036 3B4B     		ldr	r3, .L14
  73 0038 5B88     		ldrh	r3, [r3, #2]
  74 003a 592B     		cmp	r3, #89
  75 003c 07D9     		bls	.L6
 146:main.c        ****                 currentBit = 0x01;
  76              		.loc 1 146 0
  77 003e 394B     		ldr	r3, .L14
  78 0040 0120     		movs	r0, #1
  79 0042 1872     		strb	r0, [r3, #8]
 147:main.c        ****                 oneCount = 0;
  80              		.loc 1 147 0
  81 0044 0022     		movs	r2, #0
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 5


  82 0046 5A80     		strh	r2, [r3, #2]	@ movhi
 148:main.c        ****                 Count_Out_Write(1);
  83              		.loc 1 148 0
  84 0048 FFF7FEFF 		bl	Count_Out_Write
  85              	.LVL1:
  86 004c 18E0     		b	.L7
  87              	.L6:
 149:main.c        ****         
 150:main.c        ****             }else{ // if oneCount <= PREFIX_ACCURACY, bit is 0
 151:main.c        ****                 currentBit = 0x00; 
  88              		.loc 1 151 0
  89 004e 354B     		ldr	r3, .L14
  90 0050 0020     		movs	r0, #0
  91 0052 1872     		strb	r0, [r3, #8]
 152:main.c        ****                 zeroCount = 0; 
  92              		.loc 1 152 0
  93 0054 9880     		strh	r0, [r3, #4]	@ movhi
 153:main.c        ****                 Count_Out_Write(0);
  94              		.loc 1 153 0
  95 0056 FFF7FEFF 		bl	Count_Out_Write
  96              	.LVL2:
  97 005a 11E0     		b	.L7
  98              	.L5:
 154:main.c        ****             
 155:main.c        ****             }
 156:main.c        ****         }else{ // looking for data bits, can have less accuracy
 157:main.c        ****             if(oneCount >= DATA_ACCURACY){ // 1 bit must be Accuracy/100 = 1 
  99              		.loc 1 157 0
 100 005c 314B     		ldr	r3, .L14
 101 005e 5B88     		ldrh	r3, [r3, #2]
 102 0060 452B     		cmp	r3, #69
 103 0062 07D9     		bls	.L8
 158:main.c        ****                 currentBit = 0x01;
 104              		.loc 1 158 0
 105 0064 2F4B     		ldr	r3, .L14
 106 0066 0120     		movs	r0, #1
 107 0068 1872     		strb	r0, [r3, #8]
 159:main.c        ****                 oneCount = 0;
 108              		.loc 1 159 0
 109 006a 0022     		movs	r2, #0
 110 006c 5A80     		strh	r2, [r3, #2]	@ movhi
 160:main.c        ****                 Count_Out_Write(1);
 111              		.loc 1 160 0
 112 006e FFF7FEFF 		bl	Count_Out_Write
 113              	.LVL3:
 114 0072 05E0     		b	.L7
 115              	.L8:
 161:main.c        ****         
 162:main.c        ****             }else{ // if oneCount <= DATA_ACCURACY, bit is 0
 163:main.c        ****                 currentBit = 0x00; 
 116              		.loc 1 163 0
 117 0074 2B4B     		ldr	r3, .L14
 118 0076 0020     		movs	r0, #0
 119 0078 1872     		strb	r0, [r3, #8]
 164:main.c        ****                 zeroCount = 0; 
 120              		.loc 1 164 0
 121 007a 9880     		strh	r0, [r3, #4]	@ movhi
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 6


 165:main.c        ****                 Count_Out_Write(0);
 122              		.loc 1 165 0
 123 007c FFF7FEFF 		bl	Count_Out_Write
 124              	.LVL4:
 125              	.L7:
 166:main.c        ****             
 167:main.c        ****             }
 168:main.c        ****         }
 169:main.c        ****         dataCount++; // Keep track of what bit we are on
 126              		.loc 1 169 0
 127 0080 284B     		ldr	r3, .L14
 128 0082 5A7A     		ldrb	r2, [r3, #9]	@ zero_extendqisi2
 129 0084 0132     		adds	r2, r2, #1
 130 0086 D2B2     		uxtb	r2, r2
 131 0088 5A72     		strb	r2, [r3, #9]
 170:main.c        ****         levelCounter = 0; // Reset timer bit debouncer  
 132              		.loc 1 170 0
 133 008a 0021     		movs	r1, #0
 134 008c 1980     		strh	r1, [r3]	@ movhi
 171:main.c        ****         
 172:main.c        ****         //Look for pre-fix
 173:main.c        ****         data = data << 1; // Shift data over to store next bit
 135              		.loc 1 173 0
 136 008e 5989     		ldrh	r1, [r3, #10]
 137 0090 4900     		lsls	r1, r1, #1
 138 0092 89B2     		uxth	r1, r1
 174:main.c        ****         data = data | currentBit;
 139              		.loc 1 174 0
 140 0094 187A     		ldrb	r0, [r3, #8]	@ zero_extendqisi2
 141 0096 0143     		orrs	r1, r1, r0
 142 0098 5981     		strh	r1, [r3, #10]	@ movhi
 175:main.c        ****         // Check if data is prefix(oxFF) but we are not looking for data or decode
 176:main.c        ****         if(((data & PREFIX) == PREFIX) && (dataFlag == FALSE) && (decodeFlag == FALSE)){ 
 143              		.loc 1 176 0
 144 009a CBB2     		uxtb	r3, r1
 145 009c FF2B     		cmp	r3, #255
 146 009e 0DD1     		bne	.L9
 147              		.loc 1 176 0 is_stmt 0 discriminator 1
 148 00a0 204B     		ldr	r3, .L14
 149 00a2 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 150 00a4 53B9     		cbnz	r3, .L9
 151              		.loc 1 176 0 discriminator 2
 152 00a6 1F4B     		ldr	r3, .L14
 153 00a8 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 154 00aa 3BB9     		cbnz	r3, .L9
 177:main.c        ****             dataCount = 0;
 155              		.loc 1 177 0 is_stmt 1
 156 00ac 1D4B     		ldr	r3, .L14
 157 00ae 0022     		movs	r2, #0
 158 00b0 5A72     		strb	r2, [r3, #9]
 178:main.c        ****             data = 0;
 159              		.loc 1 178 0
 160 00b2 5A81     		strh	r2, [r3, #10]	@ movhi
 179:main.c        ****             dataFlag = TRUE; //Start looking for data
 161              		.loc 1 179 0
 162 00b4 0122     		movs	r2, #1
 163 00b6 9A71     		strb	r2, [r3, #6]
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 7


 180:main.c        ****             lcdFlagEncode = TRUE; //Display pre-fix on lcd
 164              		.loc 1 180 0
 165 00b8 1A73     		strb	r2, [r3, #12]
 166 00ba 0EE0     		b	.L10
 167              	.L9:
 181:main.c        ****         
 182:main.c        ****         //Check data by checking next 8 bits and parity (9 bits) after the encoding
 183:main.c        ****         }else if((dataFlag == TRUE) && (dataCount > DATA_LENGTH+1)){
 168              		.loc 1 183 0
 169 00bc 194B     		ldr	r3, .L14
 170 00be 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 171 00c0 012B     		cmp	r3, #1
 172 00c2 0AD1     		bne	.L10
 173              		.loc 1 183 0 is_stmt 0 discriminator 1
 174 00c4 082A     		cmp	r2, #8
 175 00c6 08D9     		bls	.L10
 184:main.c        ****             crabs = data;
 176              		.loc 1 184 0 is_stmt 1
 177 00c8 164B     		ldr	r3, .L14
 178 00ca D981     		strh	r1, [r3, #14]	@ movhi
 185:main.c        ****             data = 0; //Restart data for decode
 179              		.loc 1 185 0
 180 00cc 0022     		movs	r2, #0
 181 00ce 5A81     		strh	r2, [r3, #10]	@ movhi
 186:main.c        ****             dataCount = 0; 
 182              		.loc 1 186 0
 183 00d0 5A72     		strb	r2, [r3, #9]
 187:main.c        ****             lcdFlagEncode = FALSE; //Turn off encode message
 184              		.loc 1 187 0
 185 00d2 1A73     		strb	r2, [r3, #12]
 188:main.c        ****             lcdFlagData = TRUE; //Display data
 186              		.loc 1 188 0
 187 00d4 0122     		movs	r2, #1
 188 00d6 1A74     		strb	r2, [r3, #16]
 189:main.c        ****             decodeFlag = TRUE;
 189              		.loc 1 189 0
 190 00d8 DA71     		strb	r2, [r3, #7]
 191              	.L10:
 190:main.c        ****         }
 191:main.c        ****         
 192:main.c        ****         // Check for 8 bits of post-fix
 193:main.c        ****         if(decodeFlag == TRUE && (dataCount > DATA_LENGTH)){
 192              		.loc 1 193 0
 193 00da 124B     		ldr	r3, .L14
 194 00dc DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 195 00de 012B     		cmp	r3, #1
 196 00e0 1FD1     		bne	.L1
 197              		.loc 1 193 0 is_stmt 0 discriminator 1
 198 00e2 104B     		ldr	r3, .L14
 199 00e4 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 200 00e6 072B     		cmp	r3, #7
 201 00e8 1BD9     		bls	.L1
 194:main.c        ****             // Correct postfix is 0x01
 195:main.c        ****             if(data == POSTFIX){
 202              		.loc 1 195 0 is_stmt 1
 203 00ea 0E4B     		ldr	r3, .L14
 204 00ec 5B89     		ldrh	r3, [r3, #10]
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 8


 205 00ee 012B     		cmp	r3, #1
 206 00f0 03D1     		bne	.L11
 196:main.c        ****              lcdFlagDecode = TRUE; // lcd flag for "good" post-fix
 207              		.loc 1 196 0
 208 00f2 0122     		movs	r2, #1
 209 00f4 0B4B     		ldr	r3, .L14
 210 00f6 5A74     		strb	r2, [r3, #17]
 211 00f8 02E0     		b	.L12
 212              	.L11:
 197:main.c        ****             }else{
 198:main.c        ****                 decodeWrong = TRUE; // lcd flag for "bad" post-fix
 213              		.loc 1 198 0
 214 00fa 0122     		movs	r2, #1
 215 00fc 094B     		ldr	r3, .L14
 216 00fe 9A74     		strb	r2, [r3, #18]
 217              	.L12:
 199:main.c        ****             }
 200:main.c        ****             decodeFlag = FALSE;
 218              		.loc 1 200 0
 219 0100 084A     		ldr	r2, .L14
 220 0102 0023     		movs	r3, #0
 221 0104 D371     		strb	r3, [r2, #7]
 201:main.c        ****             dataFlag = FALSE; //Don't want to check for data anymore
 222              		.loc 1 201 0
 223 0106 9371     		strb	r3, [r2, #6]
 202:main.c        ****             
 203:main.c        ****             threeTransmissions++;
 224              		.loc 1 203 0
 225 0108 D37C     		ldrb	r3, [r2, #19]	@ zero_extendqisi2
 226 010a 0133     		adds	r3, r3, #1
 227 010c DBB2     		uxtb	r3, r3
 228 010e D374     		strb	r3, [r2, #19]
 204:main.c        ****             
 205:main.c        ****             //after 3 transmissions, turn bit timer off and sleep time back on
 206:main.c        ****             if(threeTransmissions == TRANSMISSIONS_3){
 229              		.loc 1 206 0
 230 0110 022B     		cmp	r3, #2
 231 0112 06D1     		bne	.L1
 207:main.c        ****                 threeTransmissions = 0;
 232              		.loc 1 207 0
 233 0114 0022     		movs	r2, #0
 234 0116 034B     		ldr	r3, .L14
 235 0118 DA74     		strb	r2, [r3, #19]
 208:main.c        ****                     SleepTimer_Start();
 236              		.loc 1 208 0
 237 011a FFF7FEFF 		bl	SleepTimer_Start
 238              	.LVL5:
 209:main.c        ****                     Bit_Timer_Stop();
 239              		.loc 1 209 0
 240 011e FFF7FEFF 		bl	Bit_Timer_Stop
 241              	.LVL6:
 242              	.L1:
 243 0122 08BD     		pop	{r3, pc}
 244              	.L15:
 245              		.align	2
 246              	.L14:
 247 0124 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 9


 248              		.cfi_endproc
 249              	.LFE65:
 250              		.size	Bit_Timer, .-Bit_Timer
 251              		.section	.text.watchDogCheck,"ax",%progbits
 252              		.align	2
 253              		.global	watchDogCheck
 254              		.thumb
 255              		.thumb_func
 256              		.type	watchDogCheck, %function
 257              	watchDogCheck:
 258              	.LFB66:
 210:main.c        ****             
 211:main.c        ****             }
 212:main.c        ****         }
 213:main.c        ****         
 214:main.c        ****     } // end of if(levelCounter == COUNT)
 215:main.c        **** } // end of CY_ISR(HighF_LevelCount)
 216:main.c        **** 
 217:main.c        **** 
 218:main.c        **** //Clears watchdog timer to avoid reset unless timing has drifted
 219:main.c        **** CY_ISR(watchDogCheck){
 259              		.loc 1 219 0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263 0000 08B5     		push	{r3, lr}
 264              		.cfi_def_cfa_offset 8
 265              		.cfi_offset 3, -8
 266              		.cfi_offset 14, -4
 220:main.c        ****     
 221:main.c        ****     CyWdtClear();
 267              		.loc 1 221 0
 268 0002 FFF7FEFF 		bl	CyWdtClear
 269              	.LVL7:
 270 0006 08BD     		pop	{r3, pc}
 271              		.cfi_endproc
 272              	.LFE66:
 273              		.size	watchDogCheck, .-watchDogCheck
 274              		.section	.text.CheckParity,"ax",%progbits
 275              		.align	2
 276              		.global	CheckParity
 277              		.thumb
 278              		.thumb_func
 279              		.type	CheckParity, %function
 280              	CheckParity:
 281              	.LFB69:
 222:main.c        **** //    sleepToggle_Write(TRUE);
 223:main.c        **** //    CyDelay(Delay);
 224:main.c        **** //    sleepToggle_Write(FALSE);
 225:main.c        ****        
 226:main.c        ****         
 227:main.c        **** }
 228:main.c        **** 
 229:main.c        **** //check for prefix
 230:main.c        **** //disable sleep if see prefix
 231:main.c        **** //enable timer to restart sleep if false positive
 232:main.c        **** //if no prefix, disbale interrupt and nothing else 
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 10


 233:main.c        **** CY_ISR(wakeUp_ISR){
 234:main.c        ****     
 235:main.c        ****     CyWdtClear();
 236:main.c        ****     startModules();
 237:main.c        ****     SleepTimer_GetStatus(); // Clears the sleep timer interrupt
 238:main.c        ****     Power_Toggle_Write(TRUE);
 239:main.c        ****     
 240:main.c        **** //    sleepToggle_Write(TRUE);
 241:main.c        **** //    CyDelay(Delay);
 242:main.c        **** //    sleepToggle_Write(FALSE);
 243:main.c        ****        
 244:main.c        ****     
 245:main.c        ****     if(Out_Comp_GetCompare() != 0){
 246:main.c        ****         SleepTimer_Stop();
 247:main.c        ****         Bit_Timer_Start();
 248:main.c        ****         //trigger interrupt to avoid data loss 
 249:main.c        ****         Timer_ISR_Enable();
 250:main.c        ****     }
 251:main.c        ****     
 252:main.c        ****     sleepFlag = TRUE; 
 253:main.c        **** 
 254:main.c        **** }
 255:main.c        **** 
 256:main.c        **** 
 257:main.c        **** ///*
 258:main.c        **** // * function: void Display(void)
 259:main.c        **** // * parameters: void
 260:main.c        **** // * returns: void
 261:main.c        **** // * description: Displays current data on LCD display depending
 262:main.c        **** // * on what flags are set
 263:main.c        **** // */
 264:main.c        **** void Display()
 265:main.c        **** {
 266:main.c        ****     // LCD Screen Messages
 267:main.c        ****     // If encode is received, display message
 268:main.c        ****     if(lcdFlagEncode == TRUE){
 269:main.c        ****         LCD_Char_ClearDisplay();
 270:main.c        ****         LCD_Char_PrintString("0xFF pre-fix");
 271:main.c        ****         lcdFlagEncode = FALSE; 
 272:main.c        ****     // When 9 bits are received, data will display at top of screen
 273:main.c        ****     }else if(lcdFlagData == TRUE){
 274:main.c        ****         paritySuccess = CheckParity(crabs);
 275:main.c        ****         crabs = crabs >> 1;
 276:main.c        ****         sprintf(OutputString, "Crabs:%i Err:%i",crabs, !paritySuccess);
 277:main.c        ****         LCD_Char_ClearDisplay();
 278:main.c        ****         LCD_Char_Position(0u,0u);
 279:main.c        ****         LCD_Char_PrintString(OutputString);
 280:main.c        ****         dataFlag = FALSE;
 281:main.c        ****         lcdFlagData = FALSE;
 282:main.c        ****     // Postfix will display good or bad below data on screen
 283:main.c        ****     }else if(lcdFlagDecode == TRUE){
 284:main.c        ****         LCD_Char_Position(1u,0u);
 285:main.c        ****         char8 displayG[] = "good";
 286:main.c        ****         LCD_Char_PrintString(displayG);
 287:main.c        ****         dataFlag = FALSE;
 288:main.c        ****         lcdFlagDecode = FALSE;
 289:main.c        ****     }else if(decodeWrong == TRUE){
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 11


 290:main.c        ****         LCD_Char_Position(1u,0u);
 291:main.c        ****         char8 displayB[] = "bad";
 292:main.c        ****         LCD_Char_PrintString(displayB);
 293:main.c        ****         decodeWrong = FALSE;
 294:main.c        ****     }
 295:main.c        **** }//end Display()
 296:main.c        **** 
 297:main.c        **** ///*
 298:main.c        **** // * function: void CheckParity(void)
 299:main.c        **** // * parameters: void
 300:main.c        **** // * returns: void
 301:main.c        **** // * description: XORs each bit of data to get even or odd parity for
 302:main.c        **** // * error checking
 303:main.c        **** // */
 304:main.c        **** int CheckParity(int crabs)
 305:main.c        **** {
 282              		.loc 1 305 0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 286              		@ link register save eliminated.
 287              	.LVL8:
 288 0000 10B4     		push	{r4}
 289              		.cfi_def_cfa_offset 4
 290              		.cfi_offset 4, -4
 291              	.LVL9:
 306:main.c        ****     int i = 0;
 307:main.c        ****     int bitToCheck = crabs >> 1; // Remove parity from data
 292              		.loc 1 307 0
 293 0002 4210     		asrs	r2, r0, #1
 294              	.LVL10:
 308:main.c        ****     int receivedParity = (crabs & BIT_0_MASK); //Save parity from data received
 295              		.loc 1 308 0
 296 0004 00F00100 		and	r0, r0, #1
 297              	.LVL11:
 309:main.c        ****     int parity = bitToCheck & BIT_0_MASK; // Get first bit of data to XOR
 298              		.loc 1 309 0
 299 0008 02F00101 		and	r1, r2, #1
 300              	.LVL12:
 310:main.c        ****     for(i = 0; i < DATA_LENGTH; i++){
 301              		.loc 1 310 0
 302 000c 0023     		movs	r3, #0
 303 000e 04E0     		b	.L19
 304              	.LVL13:
 305              	.L20:
 311:main.c        ****         bitToCheck = bitToCheck >> 1; // shift mask over
 306              		.loc 1 311 0 discriminator 3
 307 0010 5210     		asrs	r2, r2, #1
 308              	.LVL14:
 312:main.c        ****         parity = (bitToCheck & BIT_0_MASK) ^ parity; // XOR new bit
 309              		.loc 1 312 0 discriminator 3
 310 0012 02F00104 		and	r4, r2, #1
 311 0016 6140     		eors	r1, r1, r4
 312              	.LVL15:
 310:main.c        ****     for(i = 0; i < DATA_LENGTH; i++){
 313              		.loc 1 310 0 discriminator 3
 314 0018 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 12


 315              	.LVL16:
 316              	.L19:
 310:main.c        ****     for(i = 0; i < DATA_LENGTH; i++){
 317              		.loc 1 310 0 is_stmt 0 discriminator 1
 318 001a 062B     		cmp	r3, #6
 319 001c F8DD     		ble	.L20
 313:main.c        ****     }
 314:main.c        ****     if(parity == receivedParity){
 320              		.loc 1 314 0 is_stmt 1
 321 001e 8142     		cmp	r1, r0
 322 0020 01D1     		bne	.L22
 315:main.c        ****         return SUCCESS;
 323              		.loc 1 315 0
 324 0022 0120     		movs	r0, #1
 325              	.LVL17:
 326 0024 00E0     		b	.L21
 327              	.LVL18:
 328              	.L22:
 316:main.c        ****     }else{
 317:main.c        ****         return FAILURE;
 329              		.loc 1 317 0
 330 0026 0020     		movs	r0, #0
 331              	.LVL19:
 332              	.L21:
 318:main.c        ****     }
 319:main.c        **** }   
 333              		.loc 1 319 0
 334 0028 10BC     		pop	{r4}
 335              		.cfi_restore 4
 336              		.cfi_def_cfa_offset 0
 337 002a 7047     		bx	lr
 338              		.cfi_endproc
 339              	.LFE69:
 340              		.size	CheckParity, .-CheckParity
 341              		.section	.text.Display,"ax",%progbits
 342              		.align	2
 343              		.global	Display
 344              		.thumb
 345              		.thumb_func
 346              		.type	Display, %function
 347              	Display:
 348              	.LFB68:
 265:main.c        ****     // LCD Screen Messages
 349              		.loc 1 265 0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 8
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353 0000 30B5     		push	{r4, r5, lr}
 354              		.cfi_def_cfa_offset 12
 355              		.cfi_offset 4, -12
 356              		.cfi_offset 5, -8
 357              		.cfi_offset 14, -4
 358 0002 83B0     		sub	sp, sp, #12
 359              		.cfi_def_cfa_offset 24
 268:main.c        ****         LCD_Char_ClearDisplay();
 360              		.loc 1 268 0
 361 0004 2C4B     		ldr	r3, .L30
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 13


 362 0006 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 363 0008 012B     		cmp	r3, #1
 364 000a 09D1     		bne	.L25
 269:main.c        ****         LCD_Char_PrintString("0xFF pre-fix");
 365              		.loc 1 269 0
 366 000c 0120     		movs	r0, #1
 367 000e FFF7FEFF 		bl	LCD_Char_WriteControl
 368              	.LVL20:
 270:main.c        ****         lcdFlagEncode = FALSE; 
 369              		.loc 1 270 0
 370 0012 2A48     		ldr	r0, .L30+4
 371 0014 FFF7FEFF 		bl	LCD_Char_PrintString
 372              	.LVL21:
 271:main.c        ****     // When 9 bits are received, data will display at top of screen
 373              		.loc 1 271 0
 374 0018 0022     		movs	r2, #0
 375 001a 274B     		ldr	r3, .L30
 376 001c 1A73     		strb	r2, [r3, #12]
 377 001e 48E0     		b	.L24
 378              	.L25:
 273:main.c        ****         paritySuccess = CheckParity(crabs);
 379              		.loc 1 273 0
 380 0020 254B     		ldr	r3, .L30
 381 0022 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 382 0024 012B     		cmp	r3, #1
 383 0026 1DD1     		bne	.L27
 274:main.c        ****         crabs = crabs >> 1;
 384              		.loc 1 274 0
 385 0028 234C     		ldr	r4, .L30
 386 002a E589     		ldrh	r5, [r4, #14]
 387 002c 2846     		mov	r0, r5
 388 002e FFF7FEFF 		bl	CheckParity
 389              	.LVL22:
 390 0032 6061     		str	r0, [r4, #20]
 275:main.c        ****         sprintf(OutputString, "Crabs:%i Err:%i",crabs, !paritySuccess);
 391              		.loc 1 275 0
 392 0034 6A08     		lsrs	r2, r5, #1
 393 0036 E281     		strh	r2, [r4, #14]	@ movhi
 276:main.c        ****         LCD_Char_ClearDisplay();
 394              		.loc 1 276 0
 395 0038 214D     		ldr	r5, .L30+8
 396 003a B0FA80F3 		clz	r3, r0
 397 003e 5B09     		lsrs	r3, r3, #5
 398 0040 2049     		ldr	r1, .L30+12
 399 0042 2846     		mov	r0, r5
 400 0044 FFF7FEFF 		bl	sprintf
 401              	.LVL23:
 277:main.c        ****         LCD_Char_Position(0u,0u);
 402              		.loc 1 277 0
 403 0048 0120     		movs	r0, #1
 404 004a FFF7FEFF 		bl	LCD_Char_WriteControl
 405              	.LVL24:
 278:main.c        ****         LCD_Char_PrintString(OutputString);
 406              		.loc 1 278 0
 407 004e 0021     		movs	r1, #0
 408 0050 0846     		mov	r0, r1
 409 0052 FFF7FEFF 		bl	LCD_Char_Position
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 14


 410              	.LVL25:
 279:main.c        ****         dataFlag = FALSE;
 411              		.loc 1 279 0
 412 0056 2846     		mov	r0, r5
 413 0058 FFF7FEFF 		bl	LCD_Char_PrintString
 414              	.LVL26:
 280:main.c        ****         lcdFlagData = FALSE;
 415              		.loc 1 280 0
 416 005c 0023     		movs	r3, #0
 417 005e A371     		strb	r3, [r4, #6]
 281:main.c        ****     // Postfix will display good or bad below data on screen
 418              		.loc 1 281 0
 419 0060 2374     		strb	r3, [r4, #16]
 420 0062 26E0     		b	.L24
 421              	.L27:
 283:main.c        ****         LCD_Char_Position(1u,0u);
 422              		.loc 1 283 0
 423 0064 144B     		ldr	r3, .L30
 424 0066 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
 425 0068 012B     		cmp	r3, #1
 426 006a 11D1     		bne	.L28
 427              	.LBB2:
 284:main.c        ****         char8 displayG[] = "good";
 428              		.loc 1 284 0
 429 006c 0021     		movs	r1, #0
 430 006e 0120     		movs	r0, #1
 431 0070 FFF7FEFF 		bl	LCD_Char_Position
 432              	.LVL27:
 285:main.c        ****         LCD_Char_PrintString(displayG);
 433              		.loc 1 285 0
 434 0074 144B     		ldr	r3, .L30+16
 435 0076 93E80300 		ldmia	r3, {r0, r1}
 436 007a 0090     		str	r0, [sp]
 437 007c 8DF80410 		strb	r1, [sp, #4]
 286:main.c        ****         dataFlag = FALSE;
 438              		.loc 1 286 0
 439 0080 6846     		mov	r0, sp
 440 0082 FFF7FEFF 		bl	LCD_Char_PrintString
 441              	.LVL28:
 287:main.c        ****         lcdFlagDecode = FALSE;
 442              		.loc 1 287 0
 443 0086 0C4B     		ldr	r3, .L30
 444 0088 0022     		movs	r2, #0
 445 008a 9A71     		strb	r2, [r3, #6]
 288:main.c        ****     }else if(decodeWrong == TRUE){
 446              		.loc 1 288 0
 447 008c 5A74     		strb	r2, [r3, #17]
 448              	.LBE2:
 449 008e 10E0     		b	.L24
 450              	.L28:
 289:main.c        ****         LCD_Char_Position(1u,0u);
 451              		.loc 1 289 0
 452 0090 094B     		ldr	r3, .L30
 453 0092 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
 454 0094 012B     		cmp	r3, #1
 455 0096 0CD1     		bne	.L24
 456              	.LBB3:
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 15


 290:main.c        ****         char8 displayB[] = "bad";
 457              		.loc 1 290 0
 458 0098 0021     		movs	r1, #0
 459 009a 0120     		movs	r0, #1
 460 009c FFF7FEFF 		bl	LCD_Char_Position
 461              	.LVL29:
 291:main.c        ****         LCD_Char_PrintString(displayB);
 462              		.loc 1 291 0
 463 00a0 02A8     		add	r0, sp, #8
 464 00a2 0A4B     		ldr	r3, .L30+20
 465 00a4 40F8083D 		str	r3, [r0, #-8]!
 292:main.c        ****         decodeWrong = FALSE;
 466              		.loc 1 292 0
 467 00a8 FFF7FEFF 		bl	LCD_Char_PrintString
 468              	.LVL30:
 293:main.c        ****     }
 469              		.loc 1 293 0
 470 00ac 0022     		movs	r2, #0
 471 00ae 024B     		ldr	r3, .L30
 472 00b0 9A74     		strb	r2, [r3, #18]
 473              	.L24:
 474              	.LBE3:
 295:main.c        **** 
 475              		.loc 1 295 0
 476 00b2 03B0     		add	sp, sp, #12
 477              		.cfi_def_cfa_offset 12
 478              		@ sp needed
 479 00b4 30BD     		pop	{r4, r5, pc}
 480              	.L31:
 481 00b6 00BF     		.align	2
 482              	.L30:
 483 00b8 00000000 		.word	.LANCHOR0
 484 00bc 00000000 		.word	.LC0
 485 00c0 00000000 		.word	OutputString
 486 00c4 10000000 		.word	.LC1
 487 00c8 20000000 		.word	.LC2
 488 00cc 62616400 		.word	6578530
 489              		.cfi_endproc
 490              	.LFE68:
 491              		.size	Display, .-Display
 492              		.section	.text.SendData,"ax",%progbits
 493              		.align	2
 494              		.global	SendData
 495              		.thumb
 496              		.thumb_func
 497              		.type	SendData, %function
 498              	SendData:
 499              	.LFB70:
 320:main.c        **** 
 321:main.c        **** void SendData()
 322:main.c        **** {
 500              		.loc 1 322 0
 501              		.cfi_startproc
 502              		@ args = 0, pretend = 0, frame = 0
 503              		@ frame_needed = 0, uses_anonymous_args = 0
 504 0000 10B5     		push	{r4, lr}
 505              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 16


 506              		.cfi_offset 4, -8
 507              		.cfi_offset 14, -4
 323:main.c        ****     UART_WriteTxData(crabs);
 508              		.loc 1 323 0
 509 0002 094C     		ldr	r4, .L36
 510 0004 A07B     		ldrb	r0, [r4, #14]	@ zero_extendqisi2
 511 0006 FFF7FEFF 		bl	UART_WriteTxData
 512              	.LVL31:
 324:main.c        ****     if((paritySuccess == SUCCESS) && (decodeWrong != TRUE)){
 513              		.loc 1 324 0
 514 000a 6369     		ldr	r3, [r4, #20]
 515 000c 012B     		cmp	r3, #1
 516 000e 06D1     		bne	.L33
 517              		.loc 1 324 0 is_stmt 0 discriminator 1
 518 0010 A37C     		ldrb	r3, [r4, #18]	@ zero_extendqisi2
 519 0012 012B     		cmp	r3, #1
 520 0014 03D0     		beq	.L33
 325:main.c        ****         UART_WriteTxData(SUCCESS);
 521              		.loc 1 325 0 is_stmt 1
 522 0016 0120     		movs	r0, #1
 523 0018 FFF7FEFF 		bl	UART_WriteTxData
 524              	.LVL32:
 525 001c 10BD     		pop	{r4, pc}
 526              	.L33:
 326:main.c        ****     }else{
 327:main.c        ****         UART_WriteTxData(FAILURE);
 527              		.loc 1 327 0
 528 001e 0020     		movs	r0, #0
 529 0020 FFF7FEFF 		bl	UART_WriteTxData
 530              	.LVL33:
 531 0024 10BD     		pop	{r4, pc}
 532              	.L37:
 533 0026 00BF     		.align	2
 534              	.L36:
 535 0028 00000000 		.word	.LANCHOR0
 536              		.cfi_endproc
 537              	.LFE70:
 538              		.size	SendData, .-SendData
 539              		.section	.text.stopModules,"ax",%progbits
 540              		.align	2
 541              		.global	stopModules
 542              		.thumb
 543              		.thumb_func
 544              		.type	stopModules, %function
 545              	stopModules:
 546              	.LFB71:
 328:main.c        ****     }
 329:main.c        **** }
 330:main.c        **** 
 331:main.c        **** void stopModules(void){
 547              		.loc 1 331 0
 548              		.cfi_startproc
 549              		@ args = 0, pretend = 0, frame = 0
 550              		@ frame_needed = 0, uses_anonymous_args = 0
 551 0000 08B5     		push	{r3, lr}
 552              		.cfi_def_cfa_offset 8
 553              		.cfi_offset 3, -8
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 17


 554              		.cfi_offset 14, -4
 332:main.c        ****     
 333:main.c        ****     LCD_Char_Stop();
 555              		.loc 1 333 0
 556 0002 FFF7FEFF 		bl	LCD_Char_Stop
 557              	.LVL34:
 334:main.c        ****     UART_Stop();
 558              		.loc 1 334 0
 559 0006 FFF7FEFF 		bl	UART_Stop
 560              	.LVL35:
 335:main.c        ****     PWM_Recon_Stop();
 561              		.loc 1 335 0
 562 000a FFF7FEFF 		bl	PWM_Recon_Stop
 563              	.LVL36:
 336:main.c        ****     Shift_Reg_Stop();
 564              		.loc 1 336 0
 565 000e FFF7FEFF 		bl	Shift_Reg_Stop
 566              	.LVL37:
 337:main.c        ****     Out_Comp_Stop();
 567              		.loc 1 337 0
 568 0012 FFF7FEFF 		bl	Out_Comp_Stop
 569              	.LVL38:
 338:main.c        ****     Bit_Timer_Stop();
 570              		.loc 1 338 0
 571 0016 FFF7FEFF 		bl	Bit_Timer_Stop
 572              	.LVL39:
 339:main.c        ****     checkWatchDogTimer_Stop();
 573              		.loc 1 339 0
 574 001a FFF7FEFF 		bl	checkWatchDogTimer_Stop
 575              	.LVL40:
 576 001e 08BD     		pop	{r3, pc}
 577              		.cfi_endproc
 578              	.LFE71:
 579              		.size	stopModules, .-stopModules
 580              		.section	.text.startModules,"ax",%progbits
 581              		.align	2
 582              		.global	startModules
 583              		.thumb
 584              		.thumb_func
 585              		.type	startModules, %function
 586              	startModules:
 587              	.LFB72:
 340:main.c        **** 
 341:main.c        **** 
 342:main.c        **** }
 343:main.c        **** void startModules(void){
 588              		.loc 1 343 0
 589              		.cfi_startproc
 590              		@ args = 0, pretend = 0, frame = 0
 591              		@ frame_needed = 0, uses_anonymous_args = 0
 592 0000 08B5     		push	{r3, lr}
 593              		.cfi_def_cfa_offset 8
 594              		.cfi_offset 3, -8
 595              		.cfi_offset 14, -4
 344:main.c        ****     
 345:main.c        ****     LCD_Char_Start();
 596              		.loc 1 345 0
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 18


 597 0002 FFF7FEFF 		bl	LCD_Char_Start
 598              	.LVL41:
 346:main.c        ****     UART_Start();
 599              		.loc 1 346 0
 600 0006 FFF7FEFF 		bl	UART_Start
 601              	.LVL42:
 347:main.c        ****     PWM_Recon_Start();
 602              		.loc 1 347 0
 603 000a FFF7FEFF 		bl	PWM_Recon_Start
 604              	.LVL43:
 348:main.c        ****     Shift_Reg_Start();
 605              		.loc 1 348 0
 606 000e FFF7FEFF 		bl	Shift_Reg_Start
 607              	.LVL44:
 349:main.c        ****     Out_Comp_Start();
 608              		.loc 1 349 0
 609 0012 FFF7FEFF 		bl	Out_Comp_Start
 610              	.LVL45:
 350:main.c        ****     //Bit_Timer_Start();
 351:main.c        ****     // Start timer to clear watch dog
 352:main.c        ****     checkWatchDogTimer_Start();
 611              		.loc 1 352 0
 612 0016 FFF7FEFF 		bl	checkWatchDogTimer_Start
 613              	.LVL46:
 614 001a 08BD     		pop	{r3, pc}
 615              		.cfi_endproc
 616              	.LFE72:
 617              		.size	startModules, .-startModules
 618              		.section	.text.main,"ax",%progbits
 619              		.align	2
 620              		.global	main
 621              		.thumb
 622              		.thumb_func
 623              		.type	main, %function
 624              	main:
 625              	.LFB64:
  71:main.c        ****     
 626              		.loc 1 71 0
 627              		.cfi_startproc
 628              		@ Volatile: function does not return.
 629              		@ args = 0, pretend = 0, frame = 0
 630              		@ frame_needed = 0, uses_anonymous_args = 0
 631 0000 08B5     		push	{r3, lr}
 632              		.cfi_def_cfa_offset 8
 633              		.cfi_offset 3, -8
 634              		.cfi_offset 14, -4
  73:main.c        ****     
 635              		.loc 1 73 0
 636              		.syntax unified
 637              	@ 73 "main.c" 1
 638 0002 62B6     		CPSIE   i
 639              	@ 0 "" 2
  75:main.c        ****     
 640              		.loc 1 75 0
 641              		.thumb
 642              		.syntax unified
 643 0004 FFF7FEFF 		bl	startModules
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 19


 644              	.LVL47:
  78:main.c        ****     LCD_Char_Position(0u,0u); // Resets cursor to top of LCD Screen
 645              		.loc 1 78 0
 646 0008 2A4C     		ldr	r4, .L46
 647 000a 2B4D     		ldr	r5, .L46+4
 648 000c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 649 000e 2060     		str	r0, [r4]	@ unaligned
 650 0010 6160     		str	r1, [r4, #4]	@ unaligned
 651 0012 A260     		str	r2, [r4, #8]	@ unaligned
 652 0014 E360     		str	r3, [r4, #12]	@ unaligned
 653 0016 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 654 0018 2374     		strb	r3, [r4, #16]
  79:main.c        ****     LCD_Char_PrintString(display);
 655              		.loc 1 79 0
 656 001a 0021     		movs	r1, #0
 657 001c 0846     		mov	r0, r1
 658 001e FFF7FEFF 		bl	LCD_Char_Position
 659              	.LVL48:
  80:main.c        ****     
 660              		.loc 1 80 0
 661 0022 2046     		mov	r0, r4
 662 0024 FFF7FEFF 		bl	LCD_Char_PrintString
 663              	.LVL49:
  84:main.c        ****     Sleep_ISR_StartEx(wakeUp_ISR);    
 664              		.loc 1 84 0
 665 0028 2448     		ldr	r0, .L46+8
 666 002a FFF7FEFF 		bl	Timer_ISR_StartEx
 667              	.LVL50:
  85:main.c        ****     watchDogCheck_StartEx(watchDogCheck);
 668              		.loc 1 85 0
 669 002e 2448     		ldr	r0, .L46+12
 670 0030 FFF7FEFF 		bl	Sleep_ISR_StartEx
 671              	.LVL51:
  86:main.c        ****     
 672              		.loc 1 86 0
 673 0034 2348     		ldr	r0, .L46+16
 674 0036 FFF7FEFF 		bl	watchDogCheck_StartEx
 675              	.LVL52:
  90:main.c        ****     
 676              		.loc 1 90 0
 677 003a 0021     		movs	r1, #0
 678 003c 0320     		movs	r0, #3
 679 003e FFF7FEFF 		bl	CyWdtStart
 680              	.LVL53:
  94:main.c        ****     LCD_Char_Position(0u,0u); // Resets cursor to top of LCD Screen
 681              		.loc 1 94 0
 682 0042 214D     		ldr	r5, .L46+20
 683 0044 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 684 0046 2060     		str	r0, [r4]	@ unaligned
 685 0048 6160     		str	r1, [r4, #4]	@ unaligned
 686 004a A260     		str	r2, [r4, #8]	@ unaligned
 687 004c E360     		str	r3, [r4, #12]	@ unaligned
 688 004e 2B88     		ldrh	r3, [r5]	@ unaligned
 689 0050 2382     		strh	r3, [r4, #16]	@ unaligned
  95:main.c        ****     LCD_Char_PrintString(display);
 690              		.loc 1 95 0
 691 0052 0021     		movs	r1, #0
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 20


 692 0054 0846     		mov	r0, r1
 693 0056 FFF7FEFF 		bl	LCD_Char_Position
 694              	.LVL54:
  96:main.c        ****     
 695              		.loc 1 96 0
 696 005a 2046     		mov	r0, r4
 697 005c FFF7FEFF 		bl	LCD_Char_PrintString
 698              	.LVL55:
  98:main.c        ****         
 699              		.loc 1 98 0
 700 0060 0120     		movs	r0, #1
 701 0062 FFF7FEFF 		bl	Power_Toggle_Write
 702              	.LVL56:
 102:main.c        ****     stopModules(); 
 703              		.loc 1 102 0
 704 0066 FFF7FEFF 		bl	SleepTimer_Start
 705              	.LVL57:
 103:main.c        ****     CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW);
 706              		.loc 1 103 0
 707 006a FFF7FEFF 		bl	stopModules
 708              	.LVL58:
 104:main.c        **** 
 709              		.loc 1 104 0
 710 006e 4FF40061 		mov	r1, #2048
 711 0072 0020     		movs	r0, #0
 712 0074 FFF7FEFF 		bl	CyPmSleep
 713              	.LVL59:
 714              	.L43:
 108:main.c        ****          // PSoC Sleep command. To adjust sleep time, change in the hardware
 715              		.loc 1 108 0
 716 0078 FFF7FEFF 		bl	Display
 717              	.LVL60:
 112:main.c        ****                 sleepToggle_Write(TRUE);
 718              		.loc 1 112 0
 719 007c 134B     		ldr	r3, .L46+24
 720 007e 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 721 0080 012B     		cmp	r3, #1
 722 0082 F9D1     		bne	.L43
 113:main.c        ****                 CyDelay(300);
 723              		.loc 1 113 0
 724 0084 0120     		movs	r0, #1
 725 0086 FFF7FEFF 		bl	sleepToggle_Write
 726              	.LVL61:
 114:main.c        ****                 sleepToggle_Write(FALSE);
 727              		.loc 1 114 0
 728 008a 4FF49670 		mov	r0, #300
 729 008e FFF7FEFF 		bl	CyDelay
 730              	.LVL62:
 115:main.c        ****             
 731              		.loc 1 115 0
 732 0092 0020     		movs	r0, #0
 733 0094 FFF7FEFF 		bl	sleepToggle_Write
 734              	.LVL63:
 117:main.c        ****             Power_Toggle_Write(FALSE);
 735              		.loc 1 117 0
 736 0098 0024     		movs	r4, #0
 737 009a 0C4B     		ldr	r3, .L46+24
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 21


 738 009c 1C76     		strb	r4, [r3, #24]
 118:main.c        ****             stopModules(); 
 739              		.loc 1 118 0
 740 009e 2046     		mov	r0, r4
 741 00a0 FFF7FEFF 		bl	Power_Toggle_Write
 742              	.LVL64:
 119:main.c        ****             CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_CTW);
 743              		.loc 1 119 0
 744 00a4 FFF7FEFF 		bl	stopModules
 745              	.LVL65:
 120:main.c        ****         
 746              		.loc 1 120 0
 747 00a8 4FF40061 		mov	r1, #2048
 748 00ac 2046     		mov	r0, r4
 749 00ae FFF7FEFF 		bl	CyPmSleep
 750              	.LVL66:
 751 00b2 E1E7     		b	.L43
 752              	.L47:
 753              		.align	2
 754              	.L46:
 755 00b4 00000000 		.word	display
 756 00b8 28000000 		.word	.LC3
 757 00bc 00000000 		.word	Bit_Timer
 758 00c0 00000000 		.word	wakeUp_ISR
 759 00c4 00000000 		.word	watchDogCheck
 760 00c8 3C000000 		.word	.LC4
 761 00cc 00000000 		.word	.LANCHOR0
 762              		.cfi_endproc
 763              	.LFE64:
 764              		.size	main, .-main
 765              		.section	.text.wakeUp_ISR,"ax",%progbits
 766              		.align	2
 767              		.global	wakeUp_ISR
 768              		.thumb
 769              		.thumb_func
 770              		.type	wakeUp_ISR, %function
 771              	wakeUp_ISR:
 772              	.LFB67:
 233:main.c        ****     
 773              		.loc 1 233 0
 774              		.cfi_startproc
 775              		@ args = 0, pretend = 0, frame = 0
 776              		@ frame_needed = 0, uses_anonymous_args = 0
 777 0000 08B5     		push	{r3, lr}
 778              		.cfi_def_cfa_offset 8
 779              		.cfi_offset 3, -8
 780              		.cfi_offset 14, -4
 235:main.c        ****     startModules();
 781              		.loc 1 235 0
 782 0002 FFF7FEFF 		bl	CyWdtClear
 783              	.LVL67:
 236:main.c        ****     SleepTimer_GetStatus(); // Clears the sleep timer interrupt
 784              		.loc 1 236 0
 785 0006 FFF7FEFF 		bl	startModules
 786              	.LVL68:
 237:main.c        ****     Power_Toggle_Write(TRUE);
 787              		.loc 1 237 0
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 22


 788 000a FFF7FEFF 		bl	SleepTimer_GetStatus
 789              	.LVL69:
 238:main.c        ****     
 790              		.loc 1 238 0
 791 000e 0120     		movs	r0, #1
 792 0010 FFF7FEFF 		bl	Power_Toggle_Write
 793              	.LVL70:
 245:main.c        ****         SleepTimer_Stop();
 794              		.loc 1 245 0
 795 0014 FFF7FEFF 		bl	Out_Comp_GetCompare
 796              	.LVL71:
 797 0018 28B1     		cbz	r0, .L49
 246:main.c        ****         Bit_Timer_Start();
 798              		.loc 1 246 0
 799 001a FFF7FEFF 		bl	SleepTimer_Stop
 800              	.LVL72:
 247:main.c        ****         //trigger interrupt to avoid data loss 
 801              		.loc 1 247 0
 802 001e FFF7FEFF 		bl	Bit_Timer_Start
 803              	.LVL73:
 249:main.c        ****     }
 804              		.loc 1 249 0
 805 0022 FFF7FEFF 		bl	Timer_ISR_Enable
 806              	.LVL74:
 807              	.L49:
 252:main.c        **** 
 808              		.loc 1 252 0
 809 0026 0122     		movs	r2, #1
 810 0028 014B     		ldr	r3, .L51
 811 002a 1A76     		strb	r2, [r3, #24]
 812 002c 08BD     		pop	{r3, pc}
 813              	.L52:
 814 002e 00BF     		.align	2
 815              	.L51:
 816 0030 00000000 		.word	.LANCHOR0
 817              		.cfi_endproc
 818              	.LFE67:
 819              		.size	wakeUp_ISR, .-wakeUp_ISR
 820              		.comm	display,12,4
 821              		.comm	OutputString,12,4
 822              		.section	.rodata.str1.4,"aMS",%progbits,1
 823              		.align	2
 824              	.LC0:
 825 0000 30784646 		.ascii	"0xFF pre-fix\000"
 825      20707265 
 825      2D666978 
 825      00
 826 000d 000000   		.space	3
 827              	.LC1:
 828 0010 43726162 		.ascii	"Crabs:%i Err:%i\000"
 828      733A2569 
 828      20457272 
 828      3A256900 
 829              	.LC2:
 830 0020 676F6F64 		.ascii	"good\000"
 830      00
 831 0025 000000   		.space	3
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 23


 832              	.LC3:
 833 0028 53746172 		.ascii	"Starting Module!\000"
 833      74696E67 
 833      204D6F64 
 833      756C6521 
 833      00
 834 0039 000000   		.space	3
 835              	.LC4:
 836 003c 636F756E 		.ascii	"counting crabs...\000"
 836      74696E67 
 836      20637261 
 836      62732E2E 
 836      2E00
 837              		.bss
 838              		.align	2
 839              		.set	.LANCHOR0,. + 0
 840              		.type	levelCounter, %object
 841              		.size	levelCounter, 2
 842              	levelCounter:
 843 0000 0000     		.space	2
 844              		.type	oneCount, %object
 845              		.size	oneCount, 2
 846              	oneCount:
 847 0002 0000     		.space	2
 848              		.type	zeroCount, %object
 849              		.size	zeroCount, 2
 850              	zeroCount:
 851 0004 0000     		.space	2
 852              		.type	dataFlag, %object
 853              		.size	dataFlag, 1
 854              	dataFlag:
 855 0006 00       		.space	1
 856              		.type	decodeFlag, %object
 857              		.size	decodeFlag, 1
 858              	decodeFlag:
 859 0007 00       		.space	1
 860              		.type	currentBit, %object
 861              		.size	currentBit, 1
 862              	currentBit:
 863 0008 00       		.space	1
 864              		.type	dataCount, %object
 865              		.size	dataCount, 1
 866              	dataCount:
 867 0009 00       		.space	1
 868              		.type	data, %object
 869              		.size	data, 2
 870              	data:
 871 000a 0000     		.space	2
 872              		.type	lcdFlagEncode, %object
 873              		.size	lcdFlagEncode, 1
 874              	lcdFlagEncode:
 875 000c 00       		.space	1
 876 000d 00       		.space	1
 877              		.type	crabs, %object
 878              		.size	crabs, 2
 879              	crabs:
 880 000e 0000     		.space	2
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 24


 881              		.type	lcdFlagData, %object
 882              		.size	lcdFlagData, 1
 883              	lcdFlagData:
 884 0010 00       		.space	1
 885              		.type	lcdFlagDecode, %object
 886              		.size	lcdFlagDecode, 1
 887              	lcdFlagDecode:
 888 0011 00       		.space	1
 889              		.type	decodeWrong, %object
 890              		.size	decodeWrong, 1
 891              	decodeWrong:
 892 0012 00       		.space	1
 893              		.type	threeTransmissions, %object
 894              		.size	threeTransmissions, 1
 895              	threeTransmissions:
 896 0013 00       		.space	1
 897              		.type	paritySuccess, %object
 898              		.size	paritySuccess, 4
 899              	paritySuccess:
 900 0014 00000000 		.space	4
 901              		.type	sleepFlag, %object
 902              		.size	sleepFlag, 1
 903              	sleepFlag:
 904 0018 00       		.space	1
 905              		.text
 906              	.Letext0:
 907              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 908              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 909              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 910              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 911              		.file 6 "Generated_Source\\PSoC5/Out_Comp.h"
 912              		.file 7 "Generated_Source\\PSoC5/Count_Out.h"
 913              		.file 8 "Generated_Source\\PSoC5/SleepTimer.h"
 914              		.file 9 "Generated_Source\\PSoC5/Bit_Timer.h"
 915              		.file 10 "Generated_Source\\PSoC5/CyLib.h"
 916              		.file 11 "Generated_Source\\PSoC5/LCD_Char.h"
 917              		.file 12 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4
 918              		.file 13 "Generated_Source\\PSoC5/UART.h"
 919              		.file 14 "Generated_Source\\PSoC5/PWM_Recon.h"
 920              		.file 15 "Generated_Source\\PSoC5/Shift_Reg.h"
 921              		.file 16 "Generated_Source\\PSoC5/checkWatchDogTimer.h"
 922              		.file 17 "Generated_Source\\PSoC5/Timer_ISR.h"
 923              		.file 18 "Generated_Source\\PSoC5/Sleep_ISR.h"
 924              		.file 19 "Generated_Source\\PSoC5/watchDogCheck.h"
 925              		.file 20 "Generated_Source\\PSoC5/Power_Toggle.h"
 926              		.file 21 "Generated_Source\\PSoC5/cyPm.h"
 927              		.file 22 "Generated_Source\\PSoC5/sleepToggle.h"
 928              		.section	.debug_info,"",%progbits
 929              	.Ldebug_info0:
 930 0000 C2080000 		.4byte	0x8c2
 931 0004 0400     		.2byte	0x4
 932 0006 00000000 		.4byte	.Ldebug_abbrev0
 933 000a 04       		.byte	0x4
 934 000b 01       		.uleb128 0x1
 935 000c F5020000 		.4byte	.LASF84
 936 0010 0C       		.byte	0xc
 937 0011 2F040000 		.4byte	.LASF85
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 25


 938 0015 66020000 		.4byte	.LASF86
 939 0019 00000000 		.4byte	.Ldebug_ranges0+0
 940 001d 00000000 		.4byte	0
 941 0021 00000000 		.4byte	.Ldebug_line0
 942 0025 02       		.uleb128 0x2
 943 0026 01       		.byte	0x1
 944 0027 06       		.byte	0x6
 945 0028 34020000 		.4byte	.LASF0
 946 002c 02       		.uleb128 0x2
 947 002d 01       		.byte	0x1
 948 002e 08       		.byte	0x8
 949 002f 00020000 		.4byte	.LASF1
 950 0033 02       		.uleb128 0x2
 951 0034 02       		.byte	0x2
 952 0035 05       		.byte	0x5
 953 0036 34000000 		.4byte	.LASF2
 954 003a 02       		.uleb128 0x2
 955 003b 02       		.byte	0x2
 956 003c 07       		.byte	0x7
 957 003d 0F040000 		.4byte	.LASF3
 958 0041 03       		.uleb128 0x3
 959 0042 80040000 		.4byte	.LASF9
 960 0046 02       		.byte	0x2
 961 0047 3F       		.byte	0x3f
 962 0048 4C000000 		.4byte	0x4c
 963 004c 02       		.uleb128 0x2
 964 004d 04       		.byte	0x4
 965 004e 05       		.byte	0x5
 966 004f 55010000 		.4byte	.LASF4
 967 0053 02       		.uleb128 0x2
 968 0054 04       		.byte	0x4
 969 0055 07       		.byte	0x7
 970 0056 45040000 		.4byte	.LASF5
 971 005a 02       		.uleb128 0x2
 972 005b 08       		.byte	0x8
 973 005c 05       		.byte	0x5
 974 005d 26010000 		.4byte	.LASF6
 975 0061 02       		.uleb128 0x2
 976 0062 08       		.byte	0x8
 977 0063 07       		.byte	0x7
 978 0064 4F020000 		.4byte	.LASF7
 979 0068 04       		.uleb128 0x4
 980 0069 04       		.byte	0x4
 981 006a 05       		.byte	0x5
 982 006b 696E7400 		.ascii	"int\000"
 983 006f 02       		.uleb128 0x2
 984 0070 04       		.byte	0x4
 985 0071 07       		.byte	0x7
 986 0072 A5020000 		.4byte	.LASF8
 987 0076 03       		.uleb128 0x3
 988 0077 9E030000 		.4byte	.LASF10
 989 007b 03       		.byte	0x3
 990 007c 2C       		.byte	0x2c
 991 007d 41000000 		.4byte	0x41
 992 0081 05       		.uleb128 0x5
 993 0082 B1000000 		.4byte	.LASF11
 994 0086 04       		.byte	0x4
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 26


 995 0087 9201     		.2byte	0x192
 996 0089 2C000000 		.4byte	0x2c
 997 008d 05       		.uleb128 0x5
 998 008e 9A000000 		.4byte	.LASF12
 999 0092 04       		.byte	0x4
 1000 0093 9301     		.2byte	0x193
 1001 0095 3A000000 		.4byte	0x3a
 1002 0099 02       		.uleb128 0x2
 1003 009a 04       		.byte	0x4
 1004 009b 04       		.byte	0x4
 1005 009c 01010000 		.4byte	.LASF13
 1006 00a0 02       		.uleb128 0x2
 1007 00a1 08       		.byte	0x8
 1008 00a2 04       		.byte	0x4
 1009 00a3 57040000 		.4byte	.LASF14
 1010 00a7 05       		.uleb128 0x5
 1011 00a8 64000000 		.4byte	.LASF15
 1012 00ac 04       		.byte	0x4
 1013 00ad A301     		.2byte	0x1a3
 1014 00af B3000000 		.4byte	0xb3
 1015 00b3 02       		.uleb128 0x2
 1016 00b4 01       		.byte	0x1
 1017 00b5 08       		.byte	0x8
 1018 00b6 47010000 		.4byte	.LASF16
 1019 00ba 02       		.uleb128 0x2
 1020 00bb 08       		.byte	0x8
 1021 00bc 04       		.byte	0x4
 1022 00bd F4010000 		.4byte	.LASF17
 1023 00c1 02       		.uleb128 0x2
 1024 00c2 04       		.byte	0x4
 1025 00c3 07       		.byte	0x7
 1026 00c4 4A000000 		.4byte	.LASF18
 1027 00c8 06       		.uleb128 0x6
 1028 00c9 D2000000 		.4byte	.LASF19
 1029 00cd 01       		.byte	0x1
 1030 00ce 84       		.byte	0x84
 1031 00cf 00000000 		.4byte	.LFB65
 1032 00d3 28010000 		.4byte	.LFE65-.LFB65
 1033 00d7 01       		.uleb128 0x1
 1034 00d8 9C       		.byte	0x9c
 1035 00d9 45010000 		.4byte	0x145
 1036 00dd 07       		.uleb128 0x7
 1037 00de 0E000000 		.4byte	.LVL0
 1038 00e2 4F070000 		.4byte	0x74f
 1039 00e6 08       		.uleb128 0x8
 1040 00e7 4C000000 		.4byte	.LVL1
 1041 00eb 5A070000 		.4byte	0x75a
 1042 00ef F9000000 		.4byte	0xf9
 1043 00f3 09       		.uleb128 0x9
 1044 00f4 01       		.uleb128 0x1
 1045 00f5 50       		.byte	0x50
 1046 00f6 01       		.uleb128 0x1
 1047 00f7 31       		.byte	0x31
 1048 00f8 00       		.byte	0
 1049 00f9 08       		.uleb128 0x8
 1050 00fa 5A000000 		.4byte	.LVL2
 1051 00fe 5A070000 		.4byte	0x75a
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 27


 1052 0102 0C010000 		.4byte	0x10c
 1053 0106 09       		.uleb128 0x9
 1054 0107 01       		.uleb128 0x1
 1055 0108 50       		.byte	0x50
 1056 0109 01       		.uleb128 0x1
 1057 010a 30       		.byte	0x30
 1058 010b 00       		.byte	0
 1059 010c 08       		.uleb128 0x8
 1060 010d 72000000 		.4byte	.LVL3
 1061 0111 5A070000 		.4byte	0x75a
 1062 0115 1F010000 		.4byte	0x11f
 1063 0119 09       		.uleb128 0x9
 1064 011a 01       		.uleb128 0x1
 1065 011b 50       		.byte	0x50
 1066 011c 01       		.uleb128 0x1
 1067 011d 31       		.byte	0x31
 1068 011e 00       		.byte	0
 1069 011f 08       		.uleb128 0x8
 1070 0120 80000000 		.4byte	.LVL4
 1071 0124 5A070000 		.4byte	0x75a
 1072 0128 32010000 		.4byte	0x132
 1073 012c 09       		.uleb128 0x9
 1074 012d 01       		.uleb128 0x1
 1075 012e 50       		.byte	0x50
 1076 012f 01       		.uleb128 0x1
 1077 0130 30       		.byte	0x30
 1078 0131 00       		.byte	0
 1079 0132 07       		.uleb128 0x7
 1080 0133 1E010000 		.4byte	.LVL5
 1081 0137 65070000 		.4byte	0x765
 1082 013b 07       		.uleb128 0x7
 1083 013c 22010000 		.4byte	.LVL6
 1084 0140 70070000 		.4byte	0x770
 1085 0144 00       		.byte	0
 1086 0145 06       		.uleb128 0x6
 1087 0146 0E020000 		.4byte	.LASF20
 1088 014a 01       		.byte	0x1
 1089 014b DB       		.byte	0xdb
 1090 014c 00000000 		.4byte	.LFB66
 1091 0150 08000000 		.4byte	.LFE66-.LFB66
 1092 0154 01       		.uleb128 0x1
 1093 0155 9C       		.byte	0x9c
 1094 0156 64010000 		.4byte	0x164
 1095 015a 07       		.uleb128 0x7
 1096 015b 06000000 		.4byte	.LVL7
 1097 015f 7B070000 		.4byte	0x77b
 1098 0163 00       		.byte	0
 1099 0164 0A       		.uleb128 0xa
 1100 0165 3E000000 		.4byte	.LASF87
 1101 0169 01       		.byte	0x1
 1102 016a 3001     		.2byte	0x130
 1103 016c 68000000 		.4byte	0x68
 1104 0170 00000000 		.4byte	.LFB69
 1105 0174 2C000000 		.4byte	.LFE69-.LFB69
 1106 0178 01       		.uleb128 0x1
 1107 0179 9C       		.byte	0x9c
 1108 017a C9010000 		.4byte	0x1c9
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 28


 1109 017e 0B       		.uleb128 0xb
 1110 017f D1030000 		.4byte	.LASF37
 1111 0183 01       		.byte	0x1
 1112 0184 3001     		.2byte	0x130
 1113 0186 68000000 		.4byte	0x68
 1114 018a 00000000 		.4byte	.LLST0
 1115 018e 0C       		.uleb128 0xc
 1116 018f 6900     		.ascii	"i\000"
 1117 0191 01       		.byte	0x1
 1118 0192 3201     		.2byte	0x132
 1119 0194 68000000 		.4byte	0x68
 1120 0198 21000000 		.4byte	.LLST1
 1121 019c 0D       		.uleb128 0xd
 1122 019d BB030000 		.4byte	.LASF21
 1123 01a1 01       		.byte	0x1
 1124 01a2 3301     		.2byte	0x133
 1125 01a4 68000000 		.4byte	0x68
 1126 01a8 01       		.uleb128 0x1
 1127 01a9 52       		.byte	0x52
 1128 01aa 0E       		.uleb128 0xe
 1129 01ab 40020000 		.4byte	.LASF22
 1130 01af 01       		.byte	0x1
 1131 01b0 3401     		.2byte	0x134
 1132 01b2 68000000 		.4byte	0x68
 1133 01b6 40000000 		.4byte	.LLST2
 1134 01ba 0D       		.uleb128 0xd
 1135 01bb A6010000 		.4byte	.LASF23
 1136 01bf 01       		.byte	0x1
 1137 01c0 3501     		.2byte	0x135
 1138 01c2 68000000 		.4byte	0x68
 1139 01c6 01       		.uleb128 0x1
 1140 01c7 51       		.byte	0x51
 1141 01c8 00       		.byte	0
 1142 01c9 0F       		.uleb128 0xf
 1143 01ca CA010000 		.4byte	.LASF24
 1144 01ce 01       		.byte	0x1
 1145 01cf 0801     		.2byte	0x108
 1146 01d1 00000000 		.4byte	.LFB68
 1147 01d5 D0000000 		.4byte	.LFE68-.LFB68
 1148 01d9 01       		.uleb128 0x1
 1149 01da 9C       		.byte	0x9c
 1150 01db 00030000 		.4byte	0x300
 1151 01df 10       		.uleb128 0x10
 1152 01e0 6C000000 		.4byte	.LBB2
 1153 01e4 22000000 		.4byte	.LBE2-.LBB2
 1154 01e8 24020000 		.4byte	0x224
 1155 01ec 0D       		.uleb128 0xd
 1156 01ed 34010000 		.4byte	.LASF25
 1157 01f1 01       		.byte	0x1
 1158 01f2 1D01     		.2byte	0x11d
 1159 01f4 00030000 		.4byte	0x300
 1160 01f8 02       		.uleb128 0x2
 1161 01f9 91       		.byte	0x91
 1162 01fa 68       		.sleb128 -24
 1163 01fb 08       		.uleb128 0x8
 1164 01fc 74000000 		.4byte	.LVL27
 1165 0200 86070000 		.4byte	0x786
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 29


 1166 0204 13020000 		.4byte	0x213
 1167 0208 09       		.uleb128 0x9
 1168 0209 01       		.uleb128 0x1
 1169 020a 50       		.byte	0x50
 1170 020b 01       		.uleb128 0x1
 1171 020c 31       		.byte	0x31
 1172 020d 09       		.uleb128 0x9
 1173 020e 01       		.uleb128 0x1
 1174 020f 51       		.byte	0x51
 1175 0210 01       		.uleb128 0x1
 1176 0211 30       		.byte	0x30
 1177 0212 00       		.byte	0
 1178 0213 11       		.uleb128 0x11
 1179 0214 86000000 		.4byte	.LVL28
 1180 0218 91070000 		.4byte	0x791
 1181 021c 09       		.uleb128 0x9
 1182 021d 01       		.uleb128 0x1
 1183 021e 50       		.byte	0x50
 1184 021f 02       		.uleb128 0x2
 1185 0220 7D       		.byte	0x7d
 1186 0221 00       		.sleb128 0
 1187 0222 00       		.byte	0
 1188 0223 00       		.byte	0
 1189 0224 10       		.uleb128 0x10
 1190 0225 98000000 		.4byte	.LBB3
 1191 0229 1A000000 		.4byte	.LBE3-.LBB3
 1192 022d 69020000 		.4byte	0x269
 1193 0231 0D       		.uleb128 0xd
 1194 0232 07010000 		.4byte	.LASF26
 1195 0236 01       		.byte	0x1
 1196 0237 2301     		.2byte	0x123
 1197 0239 10030000 		.4byte	0x310
 1198 023d 02       		.uleb128 0x2
 1199 023e 91       		.byte	0x91
 1200 023f 68       		.sleb128 -24
 1201 0240 08       		.uleb128 0x8
 1202 0241 A0000000 		.4byte	.LVL29
 1203 0245 86070000 		.4byte	0x786
 1204 0249 58020000 		.4byte	0x258
 1205 024d 09       		.uleb128 0x9
 1206 024e 01       		.uleb128 0x1
 1207 024f 50       		.byte	0x50
 1208 0250 01       		.uleb128 0x1
 1209 0251 31       		.byte	0x31
 1210 0252 09       		.uleb128 0x9
 1211 0253 01       		.uleb128 0x1
 1212 0254 51       		.byte	0x51
 1213 0255 01       		.uleb128 0x1
 1214 0256 30       		.byte	0x30
 1215 0257 00       		.byte	0
 1216 0258 11       		.uleb128 0x11
 1217 0259 AC000000 		.4byte	.LVL30
 1218 025d 91070000 		.4byte	0x791
 1219 0261 09       		.uleb128 0x9
 1220 0262 01       		.uleb128 0x1
 1221 0263 50       		.byte	0x50
 1222 0264 02       		.uleb128 0x2
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 30


 1223 0265 91       		.byte	0x91
 1224 0266 68       		.sleb128 -24
 1225 0267 00       		.byte	0
 1226 0268 00       		.byte	0
 1227 0269 08       		.uleb128 0x8
 1228 026a 12000000 		.4byte	.LVL20
 1229 026e 9C070000 		.4byte	0x79c
 1230 0272 7C020000 		.4byte	0x27c
 1231 0276 09       		.uleb128 0x9
 1232 0277 01       		.uleb128 0x1
 1233 0278 50       		.byte	0x50
 1234 0279 01       		.uleb128 0x1
 1235 027a 31       		.byte	0x31
 1236 027b 00       		.byte	0
 1237 027c 08       		.uleb128 0x8
 1238 027d 18000000 		.4byte	.LVL21
 1239 0281 91070000 		.4byte	0x791
 1240 0285 93020000 		.4byte	0x293
 1241 0289 09       		.uleb128 0x9
 1242 028a 01       		.uleb128 0x1
 1243 028b 50       		.byte	0x50
 1244 028c 05       		.uleb128 0x5
 1245 028d 03       		.byte	0x3
 1246 028e 00000000 		.4byte	.LC0
 1247 0292 00       		.byte	0
 1248 0293 08       		.uleb128 0x8
 1249 0294 32000000 		.4byte	.LVL22
 1250 0298 64010000 		.4byte	0x164
 1251 029c A7020000 		.4byte	0x2a7
 1252 02a0 09       		.uleb128 0x9
 1253 02a1 01       		.uleb128 0x1
 1254 02a2 50       		.byte	0x50
 1255 02a3 02       		.uleb128 0x2
 1256 02a4 75       		.byte	0x75
 1257 02a5 00       		.sleb128 0
 1258 02a6 00       		.byte	0
 1259 02a7 08       		.uleb128 0x8
 1260 02a8 48000000 		.4byte	.LVL23
 1261 02ac A7070000 		.4byte	0x7a7
 1262 02b0 C4020000 		.4byte	0x2c4
 1263 02b4 09       		.uleb128 0x9
 1264 02b5 01       		.uleb128 0x1
 1265 02b6 50       		.byte	0x50
 1266 02b7 02       		.uleb128 0x2
 1267 02b8 75       		.byte	0x75
 1268 02b9 00       		.sleb128 0
 1269 02ba 09       		.uleb128 0x9
 1270 02bb 01       		.uleb128 0x1
 1271 02bc 51       		.byte	0x51
 1272 02bd 05       		.uleb128 0x5
 1273 02be 03       		.byte	0x3
 1274 02bf 10000000 		.4byte	.LC1
 1275 02c3 00       		.byte	0
 1276 02c4 08       		.uleb128 0x8
 1277 02c5 4E000000 		.4byte	.LVL24
 1278 02c9 9C070000 		.4byte	0x79c
 1279 02cd D7020000 		.4byte	0x2d7
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 31


 1280 02d1 09       		.uleb128 0x9
 1281 02d2 01       		.uleb128 0x1
 1282 02d3 50       		.byte	0x50
 1283 02d4 01       		.uleb128 0x1
 1284 02d5 31       		.byte	0x31
 1285 02d6 00       		.byte	0
 1286 02d7 08       		.uleb128 0x8
 1287 02d8 56000000 		.4byte	.LVL25
 1288 02dc 86070000 		.4byte	0x786
 1289 02e0 EF020000 		.4byte	0x2ef
 1290 02e4 09       		.uleb128 0x9
 1291 02e5 01       		.uleb128 0x1
 1292 02e6 50       		.byte	0x50
 1293 02e7 01       		.uleb128 0x1
 1294 02e8 30       		.byte	0x30
 1295 02e9 09       		.uleb128 0x9
 1296 02ea 01       		.uleb128 0x1
 1297 02eb 51       		.byte	0x51
 1298 02ec 01       		.uleb128 0x1
 1299 02ed 30       		.byte	0x30
 1300 02ee 00       		.byte	0
 1301 02ef 11       		.uleb128 0x11
 1302 02f0 5C000000 		.4byte	.LVL26
 1303 02f4 91070000 		.4byte	0x791
 1304 02f8 09       		.uleb128 0x9
 1305 02f9 01       		.uleb128 0x1
 1306 02fa 50       		.byte	0x50
 1307 02fb 02       		.uleb128 0x2
 1308 02fc 75       		.byte	0x75
 1309 02fd 00       		.sleb128 0
 1310 02fe 00       		.byte	0
 1311 02ff 00       		.byte	0
 1312 0300 12       		.uleb128 0x12
 1313 0301 A7000000 		.4byte	0xa7
 1314 0305 10030000 		.4byte	0x310
 1315 0309 13       		.uleb128 0x13
 1316 030a C1000000 		.4byte	0xc1
 1317 030e 04       		.byte	0x4
 1318 030f 00       		.byte	0
 1319 0310 12       		.uleb128 0x12
 1320 0311 A7000000 		.4byte	0xa7
 1321 0315 20030000 		.4byte	0x320
 1322 0319 13       		.uleb128 0x13
 1323 031a C1000000 		.4byte	0xc1
 1324 031e 03       		.byte	0x3
 1325 031f 00       		.byte	0
 1326 0320 0F       		.uleb128 0xf
 1327 0321 21000000 		.4byte	.LASF27
 1328 0325 01       		.byte	0x1
 1329 0326 4101     		.2byte	0x141
 1330 0328 00000000 		.4byte	.LFB70
 1331 032c 2C000000 		.4byte	.LFE70-.LFB70
 1332 0330 01       		.uleb128 0x1
 1333 0331 9C       		.byte	0x9c
 1334 0332 62030000 		.4byte	0x362
 1335 0336 07       		.uleb128 0x7
 1336 0337 0A000000 		.4byte	.LVL31
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 32


 1337 033b B2070000 		.4byte	0x7b2
 1338 033f 08       		.uleb128 0x8
 1339 0340 1C000000 		.4byte	.LVL32
 1340 0344 B2070000 		.4byte	0x7b2
 1341 0348 52030000 		.4byte	0x352
 1342 034c 09       		.uleb128 0x9
 1343 034d 01       		.uleb128 0x1
 1344 034e 50       		.byte	0x50
 1345 034f 01       		.uleb128 0x1
 1346 0350 31       		.byte	0x31
 1347 0351 00       		.byte	0
 1348 0352 11       		.uleb128 0x11
 1349 0353 24000000 		.4byte	.LVL33
 1350 0357 B2070000 		.4byte	0x7b2
 1351 035b 09       		.uleb128 0x9
 1352 035c 01       		.uleb128 0x1
 1353 035d 50       		.byte	0x50
 1354 035e 01       		.uleb128 0x1
 1355 035f 30       		.byte	0x30
 1356 0360 00       		.byte	0
 1357 0361 00       		.byte	0
 1358 0362 0F       		.uleb128 0xf
 1359 0363 DD010000 		.4byte	.LASF28
 1360 0367 01       		.byte	0x1
 1361 0368 4B01     		.2byte	0x14b
 1362 036a 00000000 		.4byte	.LFB71
 1363 036e 20000000 		.4byte	.LFE71-.LFB71
 1364 0372 01       		.uleb128 0x1
 1365 0373 9C       		.byte	0x9c
 1366 0374 B8030000 		.4byte	0x3b8
 1367 0378 07       		.uleb128 0x7
 1368 0379 06000000 		.4byte	.LVL34
 1369 037d BD070000 		.4byte	0x7bd
 1370 0381 07       		.uleb128 0x7
 1371 0382 0A000000 		.4byte	.LVL35
 1372 0386 C8070000 		.4byte	0x7c8
 1373 038a 07       		.uleb128 0x7
 1374 038b 0E000000 		.4byte	.LVL36
 1375 038f D3070000 		.4byte	0x7d3
 1376 0393 07       		.uleb128 0x7
 1377 0394 12000000 		.4byte	.LVL37
 1378 0398 DE070000 		.4byte	0x7de
 1379 039c 07       		.uleb128 0x7
 1380 039d 16000000 		.4byte	.LVL38
 1381 03a1 E9070000 		.4byte	0x7e9
 1382 03a5 07       		.uleb128 0x7
 1383 03a6 1A000000 		.4byte	.LVL39
 1384 03aa 70070000 		.4byte	0x770
 1385 03ae 07       		.uleb128 0x7
 1386 03af 1E000000 		.4byte	.LVL40
 1387 03b3 F4070000 		.4byte	0x7f4
 1388 03b7 00       		.byte	0
 1389 03b8 0F       		.uleb128 0xf
 1390 03b9 C5000000 		.4byte	.LASF29
 1391 03bd 01       		.byte	0x1
 1392 03be 5701     		.2byte	0x157
 1393 03c0 00000000 		.4byte	.LFB72
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 33


 1394 03c4 1C000000 		.4byte	.LFE72-.LFB72
 1395 03c8 01       		.uleb128 0x1
 1396 03c9 9C       		.byte	0x9c
 1397 03ca 05040000 		.4byte	0x405
 1398 03ce 07       		.uleb128 0x7
 1399 03cf 06000000 		.4byte	.LVL41
 1400 03d3 FF070000 		.4byte	0x7ff
 1401 03d7 07       		.uleb128 0x7
 1402 03d8 0A000000 		.4byte	.LVL42
 1403 03dc 0A080000 		.4byte	0x80a
 1404 03e0 07       		.uleb128 0x7
 1405 03e1 0E000000 		.4byte	.LVL43
 1406 03e5 15080000 		.4byte	0x815
 1407 03e9 07       		.uleb128 0x7
 1408 03ea 12000000 		.4byte	.LVL44
 1409 03ee 20080000 		.4byte	0x820
 1410 03f2 07       		.uleb128 0x7
 1411 03f3 16000000 		.4byte	.LVL45
 1412 03f7 2B080000 		.4byte	0x82b
 1413 03fb 07       		.uleb128 0x7
 1414 03fc 1A000000 		.4byte	.LVL46
 1415 0400 36080000 		.4byte	0x836
 1416 0404 00       		.byte	0
 1417 0405 14       		.uleb128 0x14
 1418 0406 6A000000 		.4byte	.LASF88
 1419 040a 01       		.byte	0x1
 1420 040b 46       		.byte	0x46
 1421 040c 68000000 		.4byte	0x68
 1422 0410 00000000 		.4byte	.LFB64
 1423 0414 D0000000 		.4byte	.LFE64-.LFB64
 1424 0418 01       		.uleb128 0x1
 1425 0419 9C       		.byte	0x9c
 1426 041a 94050000 		.4byte	0x594
 1427 041e 07       		.uleb128 0x7
 1428 041f 08000000 		.4byte	.LVL47
 1429 0423 B8030000 		.4byte	0x3b8
 1430 0427 08       		.uleb128 0x8
 1431 0428 22000000 		.4byte	.LVL48
 1432 042c 86070000 		.4byte	0x786
 1433 0430 3F040000 		.4byte	0x43f
 1434 0434 09       		.uleb128 0x9
 1435 0435 01       		.uleb128 0x1
 1436 0436 50       		.byte	0x50
 1437 0437 01       		.uleb128 0x1
 1438 0438 30       		.byte	0x30
 1439 0439 09       		.uleb128 0x9
 1440 043a 01       		.uleb128 0x1
 1441 043b 51       		.byte	0x51
 1442 043c 01       		.uleb128 0x1
 1443 043d 30       		.byte	0x30
 1444 043e 00       		.byte	0
 1445 043f 08       		.uleb128 0x8
 1446 0440 28000000 		.4byte	.LVL49
 1447 0444 91070000 		.4byte	0x791
 1448 0448 53040000 		.4byte	0x453
 1449 044c 09       		.uleb128 0x9
 1450 044d 01       		.uleb128 0x1
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 34


 1451 044e 50       		.byte	0x50
 1452 044f 02       		.uleb128 0x2
 1453 0450 74       		.byte	0x74
 1454 0451 00       		.sleb128 0
 1455 0452 00       		.byte	0
 1456 0453 08       		.uleb128 0x8
 1457 0454 2E000000 		.4byte	.LVL50
 1458 0458 41080000 		.4byte	0x841
 1459 045c 6A040000 		.4byte	0x46a
 1460 0460 09       		.uleb128 0x9
 1461 0461 01       		.uleb128 0x1
 1462 0462 50       		.byte	0x50
 1463 0463 05       		.uleb128 0x5
 1464 0464 03       		.byte	0x3
 1465 0465 00000000 		.4byte	Bit_Timer
 1466 0469 00       		.byte	0
 1467 046a 08       		.uleb128 0x8
 1468 046b 34000000 		.4byte	.LVL51
 1469 046f 4C080000 		.4byte	0x84c
 1470 0473 81040000 		.4byte	0x481
 1471 0477 09       		.uleb128 0x9
 1472 0478 01       		.uleb128 0x1
 1473 0479 50       		.byte	0x50
 1474 047a 05       		.uleb128 0x5
 1475 047b 03       		.byte	0x3
 1476 047c 00000000 		.4byte	wakeUp_ISR
 1477 0480 00       		.byte	0
 1478 0481 08       		.uleb128 0x8
 1479 0482 3A000000 		.4byte	.LVL52
 1480 0486 57080000 		.4byte	0x857
 1481 048a 98040000 		.4byte	0x498
 1482 048e 09       		.uleb128 0x9
 1483 048f 01       		.uleb128 0x1
 1484 0490 50       		.byte	0x50
 1485 0491 05       		.uleb128 0x5
 1486 0492 03       		.byte	0x3
 1487 0493 00000000 		.4byte	watchDogCheck
 1488 0497 00       		.byte	0
 1489 0498 08       		.uleb128 0x8
 1490 0499 42000000 		.4byte	.LVL53
 1491 049d 62080000 		.4byte	0x862
 1492 04a1 B0040000 		.4byte	0x4b0
 1493 04a5 09       		.uleb128 0x9
 1494 04a6 01       		.uleb128 0x1
 1495 04a7 50       		.byte	0x50
 1496 04a8 01       		.uleb128 0x1
 1497 04a9 33       		.byte	0x33
 1498 04aa 09       		.uleb128 0x9
 1499 04ab 01       		.uleb128 0x1
 1500 04ac 51       		.byte	0x51
 1501 04ad 01       		.uleb128 0x1
 1502 04ae 30       		.byte	0x30
 1503 04af 00       		.byte	0
 1504 04b0 08       		.uleb128 0x8
 1505 04b1 5A000000 		.4byte	.LVL54
 1506 04b5 86070000 		.4byte	0x786
 1507 04b9 C8040000 		.4byte	0x4c8
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 35


 1508 04bd 09       		.uleb128 0x9
 1509 04be 01       		.uleb128 0x1
 1510 04bf 50       		.byte	0x50
 1511 04c0 01       		.uleb128 0x1
 1512 04c1 30       		.byte	0x30
 1513 04c2 09       		.uleb128 0x9
 1514 04c3 01       		.uleb128 0x1
 1515 04c4 51       		.byte	0x51
 1516 04c5 01       		.uleb128 0x1
 1517 04c6 30       		.byte	0x30
 1518 04c7 00       		.byte	0
 1519 04c8 08       		.uleb128 0x8
 1520 04c9 60000000 		.4byte	.LVL55
 1521 04cd 91070000 		.4byte	0x791
 1522 04d1 DC040000 		.4byte	0x4dc
 1523 04d5 09       		.uleb128 0x9
 1524 04d6 01       		.uleb128 0x1
 1525 04d7 50       		.byte	0x50
 1526 04d8 02       		.uleb128 0x2
 1527 04d9 74       		.byte	0x74
 1528 04da 00       		.sleb128 0
 1529 04db 00       		.byte	0
 1530 04dc 08       		.uleb128 0x8
 1531 04dd 66000000 		.4byte	.LVL56
 1532 04e1 6D080000 		.4byte	0x86d
 1533 04e5 EF040000 		.4byte	0x4ef
 1534 04e9 09       		.uleb128 0x9
 1535 04ea 01       		.uleb128 0x1
 1536 04eb 50       		.byte	0x50
 1537 04ec 01       		.uleb128 0x1
 1538 04ed 31       		.byte	0x31
 1539 04ee 00       		.byte	0
 1540 04ef 07       		.uleb128 0x7
 1541 04f0 6A000000 		.4byte	.LVL57
 1542 04f4 65070000 		.4byte	0x765
 1543 04f8 07       		.uleb128 0x7
 1544 04f9 6E000000 		.4byte	.LVL58
 1545 04fd 62030000 		.4byte	0x362
 1546 0501 08       		.uleb128 0x8
 1547 0502 78000000 		.4byte	.LVL59
 1548 0506 78080000 		.4byte	0x878
 1549 050a 1B050000 		.4byte	0x51b
 1550 050e 09       		.uleb128 0x9
 1551 050f 01       		.uleb128 0x1
 1552 0510 50       		.byte	0x50
 1553 0511 01       		.uleb128 0x1
 1554 0512 30       		.byte	0x30
 1555 0513 09       		.uleb128 0x9
 1556 0514 01       		.uleb128 0x1
 1557 0515 51       		.byte	0x51
 1558 0516 03       		.uleb128 0x3
 1559 0517 0A       		.byte	0xa
 1560 0518 0008     		.2byte	0x800
 1561 051a 00       		.byte	0
 1562 051b 07       		.uleb128 0x7
 1563 051c 7C000000 		.4byte	.LVL60
 1564 0520 C9010000 		.4byte	0x1c9
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 36


 1565 0524 08       		.uleb128 0x8
 1566 0525 8A000000 		.4byte	.LVL61
 1567 0529 83080000 		.4byte	0x883
 1568 052d 37050000 		.4byte	0x537
 1569 0531 09       		.uleb128 0x9
 1570 0532 01       		.uleb128 0x1
 1571 0533 50       		.byte	0x50
 1572 0534 01       		.uleb128 0x1
 1573 0535 31       		.byte	0x31
 1574 0536 00       		.byte	0
 1575 0537 08       		.uleb128 0x8
 1576 0538 92000000 		.4byte	.LVL62
 1577 053c 8E080000 		.4byte	0x88e
 1578 0540 4C050000 		.4byte	0x54c
 1579 0544 09       		.uleb128 0x9
 1580 0545 01       		.uleb128 0x1
 1581 0546 50       		.byte	0x50
 1582 0547 03       		.uleb128 0x3
 1583 0548 0A       		.byte	0xa
 1584 0549 2C01     		.2byte	0x12c
 1585 054b 00       		.byte	0
 1586 054c 08       		.uleb128 0x8
 1587 054d 98000000 		.4byte	.LVL63
 1588 0551 83080000 		.4byte	0x883
 1589 0555 5F050000 		.4byte	0x55f
 1590 0559 09       		.uleb128 0x9
 1591 055a 01       		.uleb128 0x1
 1592 055b 50       		.byte	0x50
 1593 055c 01       		.uleb128 0x1
 1594 055d 30       		.byte	0x30
 1595 055e 00       		.byte	0
 1596 055f 08       		.uleb128 0x8
 1597 0560 A4000000 		.4byte	.LVL64
 1598 0564 6D080000 		.4byte	0x86d
 1599 0568 73050000 		.4byte	0x573
 1600 056c 09       		.uleb128 0x9
 1601 056d 01       		.uleb128 0x1
 1602 056e 50       		.byte	0x50
 1603 056f 02       		.uleb128 0x2
 1604 0570 74       		.byte	0x74
 1605 0571 00       		.sleb128 0
 1606 0572 00       		.byte	0
 1607 0573 07       		.uleb128 0x7
 1608 0574 A8000000 		.4byte	.LVL65
 1609 0578 62030000 		.4byte	0x362
 1610 057c 11       		.uleb128 0x11
 1611 057d B2000000 		.4byte	.LVL66
 1612 0581 78080000 		.4byte	0x878
 1613 0585 09       		.uleb128 0x9
 1614 0586 01       		.uleb128 0x1
 1615 0587 50       		.byte	0x50
 1616 0588 02       		.uleb128 0x2
 1617 0589 74       		.byte	0x74
 1618 058a 00       		.sleb128 0
 1619 058b 09       		.uleb128 0x9
 1620 058c 01       		.uleb128 0x1
 1621 058d 51       		.byte	0x51
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 37


 1622 058e 03       		.uleb128 0x3
 1623 058f 0A       		.byte	0xa
 1624 0590 0008     		.2byte	0x800
 1625 0592 00       		.byte	0
 1626 0593 00       		.byte	0
 1627 0594 06       		.uleb128 0x6
 1628 0595 D2010000 		.4byte	.LASF30
 1629 0599 01       		.byte	0x1
 1630 059a E9       		.byte	0xe9
 1631 059b 00000000 		.4byte	.LFB67
 1632 059f 34000000 		.4byte	.LFE67-.LFB67
 1633 05a3 01       		.uleb128 0x1
 1634 05a4 9C       		.byte	0x9c
 1635 05a5 FC050000 		.4byte	0x5fc
 1636 05a9 07       		.uleb128 0x7
 1637 05aa 06000000 		.4byte	.LVL67
 1638 05ae 7B070000 		.4byte	0x77b
 1639 05b2 07       		.uleb128 0x7
 1640 05b3 0A000000 		.4byte	.LVL68
 1641 05b7 B8030000 		.4byte	0x3b8
 1642 05bb 07       		.uleb128 0x7
 1643 05bc 0E000000 		.4byte	.LVL69
 1644 05c0 99080000 		.4byte	0x899
 1645 05c4 08       		.uleb128 0x8
 1646 05c5 14000000 		.4byte	.LVL70
 1647 05c9 6D080000 		.4byte	0x86d
 1648 05cd D7050000 		.4byte	0x5d7
 1649 05d1 09       		.uleb128 0x9
 1650 05d2 01       		.uleb128 0x1
 1651 05d3 50       		.byte	0x50
 1652 05d4 01       		.uleb128 0x1
 1653 05d5 31       		.byte	0x31
 1654 05d6 00       		.byte	0
 1655 05d7 07       		.uleb128 0x7
 1656 05d8 18000000 		.4byte	.LVL71
 1657 05dc 4F070000 		.4byte	0x74f
 1658 05e0 07       		.uleb128 0x7
 1659 05e1 1E000000 		.4byte	.LVL72
 1660 05e5 A4080000 		.4byte	0x8a4
 1661 05e9 07       		.uleb128 0x7
 1662 05ea 22000000 		.4byte	.LVL73
 1663 05ee AF080000 		.4byte	0x8af
 1664 05f2 07       		.uleb128 0x7
 1665 05f3 26000000 		.4byte	.LVL74
 1666 05f7 BA080000 		.4byte	0x8ba
 1667 05fb 00       		.byte	0
 1668 05fc 15       		.uleb128 0x15
 1669 05fd 68010000 		.4byte	.LASF31
 1670 0601 01       		.byte	0x1
 1671 0602 2E       		.byte	0x2e
 1672 0603 8D000000 		.4byte	0x8d
 1673 0607 05       		.uleb128 0x5
 1674 0608 03       		.byte	0x3
 1675 0609 00000000 		.4byte	levelCounter
 1676 060d 15       		.uleb128 0x15
 1677 060e 3D010000 		.4byte	.LASF32
 1678 0612 01       		.byte	0x1
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 38


 1679 0613 2F       		.byte	0x2f
 1680 0614 8D000000 		.4byte	0x8d
 1681 0618 05       		.uleb128 0x5
 1682 0619 03       		.byte	0x3
 1683 061a 04000000 		.4byte	zeroCount
 1684 061e 15       		.uleb128 0x15
 1685 061f 4C010000 		.4byte	.LASF33
 1686 0623 01       		.byte	0x1
 1687 0624 30       		.byte	0x30
 1688 0625 8D000000 		.4byte	0x8d
 1689 0629 05       		.uleb128 0x5
 1690 062a 03       		.byte	0x3
 1691 062b 02000000 		.4byte	oneCount
 1692 062f 15       		.uleb128 0x15
 1693 0630 00000000 		.4byte	.LASF34
 1694 0634 01       		.byte	0x1
 1695 0635 31       		.byte	0x31
 1696 0636 81000000 		.4byte	0x81
 1697 063a 05       		.uleb128 0x5
 1698 063b 03       		.byte	0x3
 1699 063c 08000000 		.4byte	currentBit
 1700 0640 15       		.uleb128 0x15
 1701 0641 5E010000 		.4byte	.LASF35
 1702 0645 01       		.byte	0x1
 1703 0646 32       		.byte	0x32
 1704 0647 81000000 		.4byte	0x81
 1705 064b 05       		.uleb128 0x5
 1706 064c 03       		.byte	0x3
 1707 064d 09000000 		.4byte	dataCount
 1708 0651 15       		.uleb128 0x15
 1709 0652 EC030000 		.4byte	.LASF36
 1710 0656 01       		.byte	0x1
 1711 0657 33       		.byte	0x33
 1712 0658 8D000000 		.4byte	0x8d
 1713 065c 05       		.uleb128 0x5
 1714 065d 03       		.byte	0x3
 1715 065e 0A000000 		.4byte	data
 1716 0662 15       		.uleb128 0x15
 1717 0663 D1030000 		.4byte	.LASF37
 1718 0667 01       		.byte	0x1
 1719 0668 34       		.byte	0x34
 1720 0669 8D000000 		.4byte	0x8d
 1721 066d 05       		.uleb128 0x5
 1722 066e 03       		.byte	0x3
 1723 066f 0E000000 		.4byte	crabs
 1724 0673 15       		.uleb128 0x15
 1725 0674 B0040000 		.4byte	.LASF38
 1726 0678 01       		.byte	0x1
 1727 0679 35       		.byte	0x35
 1728 067a 81000000 		.4byte	0x81
 1729 067e 05       		.uleb128 0x5
 1730 067f 03       		.byte	0x3
 1731 0680 06000000 		.4byte	dataFlag
 1732 0684 15       		.uleb128 0x15
 1733 0685 E9010000 		.4byte	.LASF39
 1734 0689 01       		.byte	0x1
 1735 068a 36       		.byte	0x36
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 39


 1736 068b 81000000 		.4byte	0x81
 1737 068f 05       		.uleb128 0x5
 1738 0690 03       		.byte	0x3
 1739 0691 07000000 		.4byte	decodeFlag
 1740 0695 15       		.uleb128 0x15
 1741 0696 01040000 		.4byte	.LASF40
 1742 069a 01       		.byte	0x1
 1743 069b 37       		.byte	0x37
 1744 069c 68000000 		.4byte	0x68
 1745 06a0 05       		.uleb128 0x5
 1746 06a1 03       		.byte	0x3
 1747 06a2 14000000 		.4byte	paritySuccess
 1748 06a6 15       		.uleb128 0x15
 1749 06a7 DC000000 		.4byte	.LASF41
 1750 06ab 01       		.byte	0x1
 1751 06ac 38       		.byte	0x38
 1752 06ad 81000000 		.4byte	0x81
 1753 06b1 05       		.uleb128 0x5
 1754 06b2 03       		.byte	0x3
 1755 06b3 13000000 		.4byte	threeTransmissions
 1756 06b7 15       		.uleb128 0x15
 1757 06b8 C0020000 		.4byte	.LASF42
 1758 06bc 01       		.byte	0x1
 1759 06bd 39       		.byte	0x39
 1760 06be 81000000 		.4byte	0x81
 1761 06c2 05       		.uleb128 0x5
 1762 06c3 03       		.byte	0x3
 1763 06c4 18000000 		.4byte	sleepFlag
 1764 06c8 15       		.uleb128 0x15
 1765 06c9 AD010000 		.4byte	.LASF43
 1766 06cd 01       		.byte	0x1
 1767 06ce 40       		.byte	0x40
 1768 06cf 81000000 		.4byte	0x81
 1769 06d3 05       		.uleb128 0x5
 1770 06d4 03       		.byte	0x3
 1771 06d5 0C000000 		.4byte	lcdFlagEncode
 1772 06d9 15       		.uleb128 0x15
 1773 06da E2040000 		.4byte	.LASF44
 1774 06de 01       		.byte	0x1
 1775 06df 41       		.byte	0x41
 1776 06e0 81000000 		.4byte	0x81
 1777 06e4 05       		.uleb128 0x5
 1778 06e5 03       		.byte	0x3
 1779 06e6 10000000 		.4byte	lcdFlagData
 1780 06ea 15       		.uleb128 0x15
 1781 06eb B7000000 		.4byte	.LASF45
 1782 06ef 01       		.byte	0x1
 1783 06f0 42       		.byte	0x42
 1784 06f1 81000000 		.4byte	0x81
 1785 06f5 05       		.uleb128 0x5
 1786 06f6 03       		.byte	0x3
 1787 06f7 11000000 		.4byte	lcdFlagDecode
 1788 06fb 15       		.uleb128 0x15
 1789 06fc 74040000 		.4byte	.LASF46
 1790 0700 01       		.byte	0x1
 1791 0701 43       		.byte	0x43
 1792 0702 81000000 		.4byte	0x81
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 40


 1793 0706 05       		.uleb128 0x5
 1794 0707 03       		.byte	0x3
 1795 0708 12000000 		.4byte	decodeWrong
 1796 070c 16       		.uleb128 0x16
 1797 070d D5040000 		.4byte	.LASF47
 1798 0711 05       		.byte	0x5
 1799 0712 1207     		.2byte	0x712
 1800 0714 18070000 		.4byte	0x718
 1801 0718 17       		.uleb128 0x17
 1802 0719 76000000 		.4byte	0x76
 1803 071d 12       		.uleb128 0x12
 1804 071e B3000000 		.4byte	0xb3
 1805 0722 2D070000 		.4byte	0x72d
 1806 0726 13       		.uleb128 0x13
 1807 0727 C1000000 		.4byte	0xc1
 1808 072b 0B       		.byte	0xb
 1809 072c 00       		.byte	0
 1810 072d 18       		.uleb128 0x18
 1811 072e 22040000 		.4byte	.LASF48
 1812 0732 01       		.byte	0x1
 1813 0733 3C       		.byte	0x3c
 1814 0734 1D070000 		.4byte	0x71d
 1815 0738 05       		.uleb128 0x5
 1816 0739 03       		.byte	0x3
 1817 073a 00000000 		.4byte	OutputString
 1818 073e 18       		.uleb128 0x18
 1819 073f 5E040000 		.4byte	.LASF49
 1820 0743 01       		.byte	0x1
 1821 0744 3D       		.byte	0x3d
 1822 0745 1D070000 		.4byte	0x71d
 1823 0749 05       		.uleb128 0x5
 1824 074a 03       		.byte	0x3
 1825 074b 00000000 		.4byte	display
 1826 074f 19       		.uleb128 0x19
 1827 0750 9C040000 		.4byte	.LASF50
 1828 0754 9C040000 		.4byte	.LASF50
 1829 0758 06       		.byte	0x6
 1830 0759 42       		.byte	0x42
 1831 075a 19       		.uleb128 0x19
 1832 075b F1030000 		.4byte	.LASF51
 1833 075f F1030000 		.4byte	.LASF51
 1834 0763 07       		.byte	0x7
 1835 0764 26       		.byte	0x26
 1836 0765 19       		.uleb128 0x19
 1837 0766 95010000 		.4byte	.LASF52
 1838 076a 95010000 		.4byte	.LASF52
 1839 076e 08       		.byte	0x8
 1840 076f 24       		.byte	0x24
 1841 0770 19       		.uleb128 0x19
 1842 0771 BB010000 		.4byte	.LASF53
 1843 0775 BB010000 		.4byte	.LASF53
 1844 0779 09       		.byte	0x9
 1845 077a 5B       		.byte	0x5b
 1846 077b 19       		.uleb128 0x19
 1847 077c 15050000 		.4byte	.LASF54
 1848 0780 15050000 		.4byte	.LASF54
 1849 0784 0A       		.byte	0xa
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 41


 1850 0785 73       		.byte	0x73
 1851 0786 19       		.uleb128 0x19
 1852 0787 B9040000 		.4byte	.LASF55
 1853 078b B9040000 		.4byte	.LASF55
 1854 078f 0B       		.byte	0xb
 1855 0790 3D       		.byte	0x3d
 1856 0791 19       		.uleb128 0x19
 1857 0792 D7030000 		.4byte	.LASF56
 1858 0796 D7030000 		.4byte	.LASF56
 1859 079a 0B       		.byte	0xb
 1860 079b 3C       		.byte	0x3c
 1861 079c 19       		.uleb128 0x19
 1862 079d 0B000000 		.4byte	.LASF57
 1863 07a1 0B000000 		.4byte	.LASF57
 1864 07a5 0B       		.byte	0xb
 1865 07a6 3A       		.byte	0x3a
 1866 07a7 19       		.uleb128 0x19
 1867 07a8 1C020000 		.4byte	.LASF58
 1868 07ac 1C020000 		.4byte	.LASF58
 1869 07b0 0C       		.byte	0xc
 1870 07b1 E7       		.byte	0xe7
 1871 07b2 19       		.uleb128 0x19
 1872 07b3 53000000 		.4byte	.LASF59
 1873 07b7 53000000 		.4byte	.LASF59
 1874 07bb 0D       		.byte	0xd
 1875 07bc 88       		.byte	0x88
 1876 07bd 19       		.uleb128 0x19
 1877 07be 66040000 		.4byte	.LASF60
 1878 07c2 66040000 		.4byte	.LASF60
 1879 07c6 0B       		.byte	0xb
 1880 07c7 39       		.byte	0x39
 1881 07c8 19       		.uleb128 0x19
 1882 07c9 CB040000 		.4byte	.LASF61
 1883 07cd CB040000 		.4byte	.LASF61
 1884 07d1 0D       		.byte	0xd
 1885 07d2 55       		.byte	0x55
 1886 07d3 19       		.uleb128 0x19
 1887 07d4 20050000 		.4byte	.LASF62
 1888 07d8 20050000 		.4byte	.LASF62
 1889 07dc 0E       		.byte	0xe
 1890 07dd 93       		.byte	0x93
 1891 07de 19       		.uleb128 0x19
 1892 07df 36040000 		.4byte	.LASF63
 1893 07e3 36040000 		.4byte	.LASF63
 1894 07e7 0F       		.byte	0xf
 1895 07e8 3D       		.byte	0x3d
 1896 07e9 19       		.uleb128 0x19
 1897 07ea B2020000 		.4byte	.LASF64
 1898 07ee B2020000 		.4byte	.LASF64
 1899 07f2 06       		.byte	0x6
 1900 07f3 40       		.byte	0x40
 1901 07f4 19       		.uleb128 0x19
 1902 07f5 82000000 		.4byte	.LASF65
 1903 07f9 82000000 		.4byte	.LASF65
 1904 07fd 10       		.byte	0x10
 1905 07fe 5B       		.byte	0x5b
 1906 07ff 19       		.uleb128 0x19
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 42


 1907 0800 06050000 		.4byte	.LASF66
 1908 0804 06050000 		.4byte	.LASF66
 1909 0808 0B       		.byte	0xb
 1910 0809 38       		.byte	0x38
 1911 080a 19       		.uleb128 0x19
 1912 080b 93030000 		.4byte	.LASF67
 1913 080f 93030000 		.4byte	.LASF67
 1914 0813 0D       		.byte	0xd
 1915 0814 54       		.byte	0x54
 1916 0815 19       		.uleb128 0x19
 1917 0816 24020000 		.4byte	.LASF68
 1918 081a 24020000 		.4byte	.LASF68
 1919 081e 0E       		.byte	0xe
 1920 081f 92       		.byte	0x92
 1921 0820 19       		.uleb128 0x19
 1922 0821 F6040000 		.4byte	.LASF69
 1923 0825 F6040000 		.4byte	.LASF69
 1924 0829 0F       		.byte	0xf
 1925 082a 3C       		.byte	0x3c
 1926 082b 19       		.uleb128 0x19
 1927 082c 75010000 		.4byte	.LASF70
 1928 0830 75010000 		.4byte	.LASF70
 1929 0834 06       		.byte	0x6
 1930 0835 3F       		.byte	0x3f
 1931 0836 19       		.uleb128 0x19
 1932 0837 DC020000 		.4byte	.LASF71
 1933 083b DC020000 		.4byte	.LASF71
 1934 083f 10       		.byte	0x10
 1935 0840 5A       		.byte	0x5a
 1936 0841 19       		.uleb128 0x19
 1937 0842 EF000000 		.4byte	.LASF72
 1938 0846 EF000000 		.4byte	.LASF72
 1939 084a 11       		.byte	0x11
 1940 084b 18       		.byte	0x18
 1941 084c 19       		.uleb128 0x19
 1942 084d 8A040000 		.4byte	.LASF73
 1943 0851 8A040000 		.4byte	.LASF73
 1944 0855 12       		.byte	0x12
 1945 0856 18       		.byte	0x18
 1946 0857 19       		.uleb128 0x19
 1947 0858 10010000 		.4byte	.LASF74
 1948 085c 10010000 		.4byte	.LASF74
 1949 0860 13       		.byte	0x13
 1950 0861 18       		.byte	0x18
 1951 0862 19       		.uleb128 0x19
 1952 0863 C6030000 		.4byte	.LASF75
 1953 0867 C6030000 		.4byte	.LASF75
 1954 086b 0A       		.byte	0xa
 1955 086c 72       		.byte	0x72
 1956 086d 19       		.uleb128 0x19
 1957 086e 6F000000 		.4byte	.LASF76
 1958 0872 6F000000 		.4byte	.LASF76
 1959 0876 14       		.byte	0x14
 1960 0877 26       		.byte	0x26
 1961 0878 19       		.uleb128 0x19
 1962 0879 2A000000 		.4byte	.LASF77
 1963 087d 2A000000 		.4byte	.LASF77
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 43


 1964 0881 15       		.byte	0x15
 1965 0882 22       		.byte	0x22
 1966 0883 19       		.uleb128 0x19
 1967 0884 CA020000 		.4byte	.LASF78
 1968 0888 CA020000 		.4byte	.LASF78
 1969 088c 16       		.byte	0x16
 1970 088d 26       		.byte	0x26
 1971 088e 19       		.uleb128 0x19
 1972 088f EE040000 		.4byte	.LASF79
 1973 0893 EE040000 		.4byte	.LASF79
 1974 0897 0A       		.byte	0xa
 1975 0898 76       		.byte	0x76
 1976 0899 19       		.uleb128 0x19
 1977 089a A6030000 		.4byte	.LASF80
 1978 089e A6030000 		.4byte	.LASF80
 1979 08a2 08       		.byte	0x8
 1980 08a3 2B       		.byte	0x2b
 1981 08a4 19       		.uleb128 0x19
 1982 08a5 83030000 		.4byte	.LASF81
 1983 08a9 83030000 		.4byte	.LASF81
 1984 08ad 08       		.byte	0x8
 1985 08ae 25       		.byte	0x25
 1986 08af 19       		.uleb128 0x19
 1987 08b0 A1000000 		.4byte	.LASF82
 1988 08b4 A1000000 		.4byte	.LASF82
 1989 08b8 09       		.byte	0x9
 1990 08b9 5A       		.byte	0x5a
 1991 08ba 19       		.uleb128 0x19
 1992 08bb 84010000 		.4byte	.LASF83
 1993 08bf 84010000 		.4byte	.LASF83
 1994 08c3 11       		.byte	0x11
 1995 08c4 23       		.byte	0x23
 1996 08c5 00       		.byte	0
 1997              		.section	.debug_abbrev,"",%progbits
 1998              	.Ldebug_abbrev0:
 1999 0000 01       		.uleb128 0x1
 2000 0001 11       		.uleb128 0x11
 2001 0002 01       		.byte	0x1
 2002 0003 25       		.uleb128 0x25
 2003 0004 0E       		.uleb128 0xe
 2004 0005 13       		.uleb128 0x13
 2005 0006 0B       		.uleb128 0xb
 2006 0007 03       		.uleb128 0x3
 2007 0008 0E       		.uleb128 0xe
 2008 0009 1B       		.uleb128 0x1b
 2009 000a 0E       		.uleb128 0xe
 2010 000b 55       		.uleb128 0x55
 2011 000c 17       		.uleb128 0x17
 2012 000d 11       		.uleb128 0x11
 2013 000e 01       		.uleb128 0x1
 2014 000f 10       		.uleb128 0x10
 2015 0010 17       		.uleb128 0x17
 2016 0011 00       		.byte	0
 2017 0012 00       		.byte	0
 2018 0013 02       		.uleb128 0x2
 2019 0014 24       		.uleb128 0x24
 2020 0015 00       		.byte	0
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 44


 2021 0016 0B       		.uleb128 0xb
 2022 0017 0B       		.uleb128 0xb
 2023 0018 3E       		.uleb128 0x3e
 2024 0019 0B       		.uleb128 0xb
 2025 001a 03       		.uleb128 0x3
 2026 001b 0E       		.uleb128 0xe
 2027 001c 00       		.byte	0
 2028 001d 00       		.byte	0
 2029 001e 03       		.uleb128 0x3
 2030 001f 16       		.uleb128 0x16
 2031 0020 00       		.byte	0
 2032 0021 03       		.uleb128 0x3
 2033 0022 0E       		.uleb128 0xe
 2034 0023 3A       		.uleb128 0x3a
 2035 0024 0B       		.uleb128 0xb
 2036 0025 3B       		.uleb128 0x3b
 2037 0026 0B       		.uleb128 0xb
 2038 0027 49       		.uleb128 0x49
 2039 0028 13       		.uleb128 0x13
 2040 0029 00       		.byte	0
 2041 002a 00       		.byte	0
 2042 002b 04       		.uleb128 0x4
 2043 002c 24       		.uleb128 0x24
 2044 002d 00       		.byte	0
 2045 002e 0B       		.uleb128 0xb
 2046 002f 0B       		.uleb128 0xb
 2047 0030 3E       		.uleb128 0x3e
 2048 0031 0B       		.uleb128 0xb
 2049 0032 03       		.uleb128 0x3
 2050 0033 08       		.uleb128 0x8
 2051 0034 00       		.byte	0
 2052 0035 00       		.byte	0
 2053 0036 05       		.uleb128 0x5
 2054 0037 16       		.uleb128 0x16
 2055 0038 00       		.byte	0
 2056 0039 03       		.uleb128 0x3
 2057 003a 0E       		.uleb128 0xe
 2058 003b 3A       		.uleb128 0x3a
 2059 003c 0B       		.uleb128 0xb
 2060 003d 3B       		.uleb128 0x3b
 2061 003e 05       		.uleb128 0x5
 2062 003f 49       		.uleb128 0x49
 2063 0040 13       		.uleb128 0x13
 2064 0041 00       		.byte	0
 2065 0042 00       		.byte	0
 2066 0043 06       		.uleb128 0x6
 2067 0044 2E       		.uleb128 0x2e
 2068 0045 01       		.byte	0x1
 2069 0046 3F       		.uleb128 0x3f
 2070 0047 19       		.uleb128 0x19
 2071 0048 03       		.uleb128 0x3
 2072 0049 0E       		.uleb128 0xe
 2073 004a 3A       		.uleb128 0x3a
 2074 004b 0B       		.uleb128 0xb
 2075 004c 3B       		.uleb128 0x3b
 2076 004d 0B       		.uleb128 0xb
 2077 004e 27       		.uleb128 0x27
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 45


 2078 004f 19       		.uleb128 0x19
 2079 0050 11       		.uleb128 0x11
 2080 0051 01       		.uleb128 0x1
 2081 0052 12       		.uleb128 0x12
 2082 0053 06       		.uleb128 0x6
 2083 0054 40       		.uleb128 0x40
 2084 0055 18       		.uleb128 0x18
 2085 0056 9742     		.uleb128 0x2117
 2086 0058 19       		.uleb128 0x19
 2087 0059 01       		.uleb128 0x1
 2088 005a 13       		.uleb128 0x13
 2089 005b 00       		.byte	0
 2090 005c 00       		.byte	0
 2091 005d 07       		.uleb128 0x7
 2092 005e 898201   		.uleb128 0x4109
 2093 0061 00       		.byte	0
 2094 0062 11       		.uleb128 0x11
 2095 0063 01       		.uleb128 0x1
 2096 0064 31       		.uleb128 0x31
 2097 0065 13       		.uleb128 0x13
 2098 0066 00       		.byte	0
 2099 0067 00       		.byte	0
 2100 0068 08       		.uleb128 0x8
 2101 0069 898201   		.uleb128 0x4109
 2102 006c 01       		.byte	0x1
 2103 006d 11       		.uleb128 0x11
 2104 006e 01       		.uleb128 0x1
 2105 006f 31       		.uleb128 0x31
 2106 0070 13       		.uleb128 0x13
 2107 0071 01       		.uleb128 0x1
 2108 0072 13       		.uleb128 0x13
 2109 0073 00       		.byte	0
 2110 0074 00       		.byte	0
 2111 0075 09       		.uleb128 0x9
 2112 0076 8A8201   		.uleb128 0x410a
 2113 0079 00       		.byte	0
 2114 007a 02       		.uleb128 0x2
 2115 007b 18       		.uleb128 0x18
 2116 007c 9142     		.uleb128 0x2111
 2117 007e 18       		.uleb128 0x18
 2118 007f 00       		.byte	0
 2119 0080 00       		.byte	0
 2120 0081 0A       		.uleb128 0xa
 2121 0082 2E       		.uleb128 0x2e
 2122 0083 01       		.byte	0x1
 2123 0084 3F       		.uleb128 0x3f
 2124 0085 19       		.uleb128 0x19
 2125 0086 03       		.uleb128 0x3
 2126 0087 0E       		.uleb128 0xe
 2127 0088 3A       		.uleb128 0x3a
 2128 0089 0B       		.uleb128 0xb
 2129 008a 3B       		.uleb128 0x3b
 2130 008b 05       		.uleb128 0x5
 2131 008c 27       		.uleb128 0x27
 2132 008d 19       		.uleb128 0x19
 2133 008e 49       		.uleb128 0x49
 2134 008f 13       		.uleb128 0x13
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 46


 2135 0090 11       		.uleb128 0x11
 2136 0091 01       		.uleb128 0x1
 2137 0092 12       		.uleb128 0x12
 2138 0093 06       		.uleb128 0x6
 2139 0094 40       		.uleb128 0x40
 2140 0095 18       		.uleb128 0x18
 2141 0096 9742     		.uleb128 0x2117
 2142 0098 19       		.uleb128 0x19
 2143 0099 01       		.uleb128 0x1
 2144 009a 13       		.uleb128 0x13
 2145 009b 00       		.byte	0
 2146 009c 00       		.byte	0
 2147 009d 0B       		.uleb128 0xb
 2148 009e 05       		.uleb128 0x5
 2149 009f 00       		.byte	0
 2150 00a0 03       		.uleb128 0x3
 2151 00a1 0E       		.uleb128 0xe
 2152 00a2 3A       		.uleb128 0x3a
 2153 00a3 0B       		.uleb128 0xb
 2154 00a4 3B       		.uleb128 0x3b
 2155 00a5 05       		.uleb128 0x5
 2156 00a6 49       		.uleb128 0x49
 2157 00a7 13       		.uleb128 0x13
 2158 00a8 02       		.uleb128 0x2
 2159 00a9 17       		.uleb128 0x17
 2160 00aa 00       		.byte	0
 2161 00ab 00       		.byte	0
 2162 00ac 0C       		.uleb128 0xc
 2163 00ad 34       		.uleb128 0x34
 2164 00ae 00       		.byte	0
 2165 00af 03       		.uleb128 0x3
 2166 00b0 08       		.uleb128 0x8
 2167 00b1 3A       		.uleb128 0x3a
 2168 00b2 0B       		.uleb128 0xb
 2169 00b3 3B       		.uleb128 0x3b
 2170 00b4 05       		.uleb128 0x5
 2171 00b5 49       		.uleb128 0x49
 2172 00b6 13       		.uleb128 0x13
 2173 00b7 02       		.uleb128 0x2
 2174 00b8 17       		.uleb128 0x17
 2175 00b9 00       		.byte	0
 2176 00ba 00       		.byte	0
 2177 00bb 0D       		.uleb128 0xd
 2178 00bc 34       		.uleb128 0x34
 2179 00bd 00       		.byte	0
 2180 00be 03       		.uleb128 0x3
 2181 00bf 0E       		.uleb128 0xe
 2182 00c0 3A       		.uleb128 0x3a
 2183 00c1 0B       		.uleb128 0xb
 2184 00c2 3B       		.uleb128 0x3b
 2185 00c3 05       		.uleb128 0x5
 2186 00c4 49       		.uleb128 0x49
 2187 00c5 13       		.uleb128 0x13
 2188 00c6 02       		.uleb128 0x2
 2189 00c7 18       		.uleb128 0x18
 2190 00c8 00       		.byte	0
 2191 00c9 00       		.byte	0
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 47


 2192 00ca 0E       		.uleb128 0xe
 2193 00cb 34       		.uleb128 0x34
 2194 00cc 00       		.byte	0
 2195 00cd 03       		.uleb128 0x3
 2196 00ce 0E       		.uleb128 0xe
 2197 00cf 3A       		.uleb128 0x3a
 2198 00d0 0B       		.uleb128 0xb
 2199 00d1 3B       		.uleb128 0x3b
 2200 00d2 05       		.uleb128 0x5
 2201 00d3 49       		.uleb128 0x49
 2202 00d4 13       		.uleb128 0x13
 2203 00d5 02       		.uleb128 0x2
 2204 00d6 17       		.uleb128 0x17
 2205 00d7 00       		.byte	0
 2206 00d8 00       		.byte	0
 2207 00d9 0F       		.uleb128 0xf
 2208 00da 2E       		.uleb128 0x2e
 2209 00db 01       		.byte	0x1
 2210 00dc 3F       		.uleb128 0x3f
 2211 00dd 19       		.uleb128 0x19
 2212 00de 03       		.uleb128 0x3
 2213 00df 0E       		.uleb128 0xe
 2214 00e0 3A       		.uleb128 0x3a
 2215 00e1 0B       		.uleb128 0xb
 2216 00e2 3B       		.uleb128 0x3b
 2217 00e3 05       		.uleb128 0x5
 2218 00e4 27       		.uleb128 0x27
 2219 00e5 19       		.uleb128 0x19
 2220 00e6 11       		.uleb128 0x11
 2221 00e7 01       		.uleb128 0x1
 2222 00e8 12       		.uleb128 0x12
 2223 00e9 06       		.uleb128 0x6
 2224 00ea 40       		.uleb128 0x40
 2225 00eb 18       		.uleb128 0x18
 2226 00ec 9742     		.uleb128 0x2117
 2227 00ee 19       		.uleb128 0x19
 2228 00ef 01       		.uleb128 0x1
 2229 00f0 13       		.uleb128 0x13
 2230 00f1 00       		.byte	0
 2231 00f2 00       		.byte	0
 2232 00f3 10       		.uleb128 0x10
 2233 00f4 0B       		.uleb128 0xb
 2234 00f5 01       		.byte	0x1
 2235 00f6 11       		.uleb128 0x11
 2236 00f7 01       		.uleb128 0x1
 2237 00f8 12       		.uleb128 0x12
 2238 00f9 06       		.uleb128 0x6
 2239 00fa 01       		.uleb128 0x1
 2240 00fb 13       		.uleb128 0x13
 2241 00fc 00       		.byte	0
 2242 00fd 00       		.byte	0
 2243 00fe 11       		.uleb128 0x11
 2244 00ff 898201   		.uleb128 0x4109
 2245 0102 01       		.byte	0x1
 2246 0103 11       		.uleb128 0x11
 2247 0104 01       		.uleb128 0x1
 2248 0105 31       		.uleb128 0x31
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 48


 2249 0106 13       		.uleb128 0x13
 2250 0107 00       		.byte	0
 2251 0108 00       		.byte	0
 2252 0109 12       		.uleb128 0x12
 2253 010a 01       		.uleb128 0x1
 2254 010b 01       		.byte	0x1
 2255 010c 49       		.uleb128 0x49
 2256 010d 13       		.uleb128 0x13
 2257 010e 01       		.uleb128 0x1
 2258 010f 13       		.uleb128 0x13
 2259 0110 00       		.byte	0
 2260 0111 00       		.byte	0
 2261 0112 13       		.uleb128 0x13
 2262 0113 21       		.uleb128 0x21
 2263 0114 00       		.byte	0
 2264 0115 49       		.uleb128 0x49
 2265 0116 13       		.uleb128 0x13
 2266 0117 2F       		.uleb128 0x2f
 2267 0118 0B       		.uleb128 0xb
 2268 0119 00       		.byte	0
 2269 011a 00       		.byte	0
 2270 011b 14       		.uleb128 0x14
 2271 011c 2E       		.uleb128 0x2e
 2272 011d 01       		.byte	0x1
 2273 011e 3F       		.uleb128 0x3f
 2274 011f 19       		.uleb128 0x19
 2275 0120 03       		.uleb128 0x3
 2276 0121 0E       		.uleb128 0xe
 2277 0122 3A       		.uleb128 0x3a
 2278 0123 0B       		.uleb128 0xb
 2279 0124 3B       		.uleb128 0x3b
 2280 0125 0B       		.uleb128 0xb
 2281 0126 27       		.uleb128 0x27
 2282 0127 19       		.uleb128 0x19
 2283 0128 49       		.uleb128 0x49
 2284 0129 13       		.uleb128 0x13
 2285 012a 8701     		.uleb128 0x87
 2286 012c 19       		.uleb128 0x19
 2287 012d 11       		.uleb128 0x11
 2288 012e 01       		.uleb128 0x1
 2289 012f 12       		.uleb128 0x12
 2290 0130 06       		.uleb128 0x6
 2291 0131 40       		.uleb128 0x40
 2292 0132 18       		.uleb128 0x18
 2293 0133 9742     		.uleb128 0x2117
 2294 0135 19       		.uleb128 0x19
 2295 0136 01       		.uleb128 0x1
 2296 0137 13       		.uleb128 0x13
 2297 0138 00       		.byte	0
 2298 0139 00       		.byte	0
 2299 013a 15       		.uleb128 0x15
 2300 013b 34       		.uleb128 0x34
 2301 013c 00       		.byte	0
 2302 013d 03       		.uleb128 0x3
 2303 013e 0E       		.uleb128 0xe
 2304 013f 3A       		.uleb128 0x3a
 2305 0140 0B       		.uleb128 0xb
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 49


 2306 0141 3B       		.uleb128 0x3b
 2307 0142 0B       		.uleb128 0xb
 2308 0143 49       		.uleb128 0x49
 2309 0144 13       		.uleb128 0x13
 2310 0145 02       		.uleb128 0x2
 2311 0146 18       		.uleb128 0x18
 2312 0147 00       		.byte	0
 2313 0148 00       		.byte	0
 2314 0149 16       		.uleb128 0x16
 2315 014a 34       		.uleb128 0x34
 2316 014b 00       		.byte	0
 2317 014c 03       		.uleb128 0x3
 2318 014d 0E       		.uleb128 0xe
 2319 014e 3A       		.uleb128 0x3a
 2320 014f 0B       		.uleb128 0xb
 2321 0150 3B       		.uleb128 0x3b
 2322 0151 05       		.uleb128 0x5
 2323 0152 49       		.uleb128 0x49
 2324 0153 13       		.uleb128 0x13
 2325 0154 3F       		.uleb128 0x3f
 2326 0155 19       		.uleb128 0x19
 2327 0156 3C       		.uleb128 0x3c
 2328 0157 19       		.uleb128 0x19
 2329 0158 00       		.byte	0
 2330 0159 00       		.byte	0
 2331 015a 17       		.uleb128 0x17
 2332 015b 35       		.uleb128 0x35
 2333 015c 00       		.byte	0
 2334 015d 49       		.uleb128 0x49
 2335 015e 13       		.uleb128 0x13
 2336 015f 00       		.byte	0
 2337 0160 00       		.byte	0
 2338 0161 18       		.uleb128 0x18
 2339 0162 34       		.uleb128 0x34
 2340 0163 00       		.byte	0
 2341 0164 03       		.uleb128 0x3
 2342 0165 0E       		.uleb128 0xe
 2343 0166 3A       		.uleb128 0x3a
 2344 0167 0B       		.uleb128 0xb
 2345 0168 3B       		.uleb128 0x3b
 2346 0169 0B       		.uleb128 0xb
 2347 016a 49       		.uleb128 0x49
 2348 016b 13       		.uleb128 0x13
 2349 016c 3F       		.uleb128 0x3f
 2350 016d 19       		.uleb128 0x19
 2351 016e 02       		.uleb128 0x2
 2352 016f 18       		.uleb128 0x18
 2353 0170 00       		.byte	0
 2354 0171 00       		.byte	0
 2355 0172 19       		.uleb128 0x19
 2356 0173 2E       		.uleb128 0x2e
 2357 0174 00       		.byte	0
 2358 0175 3F       		.uleb128 0x3f
 2359 0176 19       		.uleb128 0x19
 2360 0177 3C       		.uleb128 0x3c
 2361 0178 19       		.uleb128 0x19
 2362 0179 6E       		.uleb128 0x6e
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 50


 2363 017a 0E       		.uleb128 0xe
 2364 017b 03       		.uleb128 0x3
 2365 017c 0E       		.uleb128 0xe
 2366 017d 3A       		.uleb128 0x3a
 2367 017e 0B       		.uleb128 0xb
 2368 017f 3B       		.uleb128 0x3b
 2369 0180 0B       		.uleb128 0xb
 2370 0181 00       		.byte	0
 2371 0182 00       		.byte	0
 2372 0183 00       		.byte	0
 2373              		.section	.debug_loc,"",%progbits
 2374              	.Ldebug_loc0:
 2375              	.LLST0:
 2376 0000 00000000 		.4byte	.LVL8
 2377 0004 08000000 		.4byte	.LVL11
 2378 0008 0100     		.2byte	0x1
 2379 000a 50       		.byte	0x50
 2380 000b 08000000 		.4byte	.LVL11
 2381 000f 2C000000 		.4byte	.LFE69
 2382 0013 0400     		.2byte	0x4
 2383 0015 F3       		.byte	0xf3
 2384 0016 01       		.uleb128 0x1
 2385 0017 50       		.byte	0x50
 2386 0018 9F       		.byte	0x9f
 2387 0019 00000000 		.4byte	0
 2388 001d 00000000 		.4byte	0
 2389              	.LLST1:
 2390 0021 02000000 		.4byte	.LVL9
 2391 0025 10000000 		.4byte	.LVL13
 2392 0029 0200     		.2byte	0x2
 2393 002b 30       		.byte	0x30
 2394 002c 9F       		.byte	0x9f
 2395 002d 10000000 		.4byte	.LVL13
 2396 0031 2C000000 		.4byte	.LFE69
 2397 0035 0100     		.2byte	0x1
 2398 0037 53       		.byte	0x53
 2399 0038 00000000 		.4byte	0
 2400 003c 00000000 		.4byte	0
 2401              	.LLST2:
 2402 0040 08000000 		.4byte	.LVL11
 2403 0044 24000000 		.4byte	.LVL17
 2404 0048 0100     		.2byte	0x1
 2405 004a 50       		.byte	0x50
 2406 004b 24000000 		.4byte	.LVL17
 2407 004f 26000000 		.4byte	.LVL18
 2408 0053 0600     		.2byte	0x6
 2409 0055 F3       		.byte	0xf3
 2410 0056 01       		.uleb128 0x1
 2411 0057 50       		.byte	0x50
 2412 0058 31       		.byte	0x31
 2413 0059 1A       		.byte	0x1a
 2414 005a 9F       		.byte	0x9f
 2415 005b 26000000 		.4byte	.LVL18
 2416 005f 28000000 		.4byte	.LVL19
 2417 0063 0100     		.2byte	0x1
 2418 0065 50       		.byte	0x50
 2419 0066 28000000 		.4byte	.LVL19
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 51


 2420 006a 2C000000 		.4byte	.LFE69
 2421 006e 0600     		.2byte	0x6
 2422 0070 F3       		.byte	0xf3
 2423 0071 01       		.uleb128 0x1
 2424 0072 50       		.byte	0x50
 2425 0073 31       		.byte	0x31
 2426 0074 1A       		.byte	0x1a
 2427 0075 9F       		.byte	0x9f
 2428 0076 00000000 		.4byte	0
 2429 007a 00000000 		.4byte	0
 2430              		.section	.debug_aranges,"",%progbits
 2431 0000 5C000000 		.4byte	0x5c
 2432 0004 0200     		.2byte	0x2
 2433 0006 00000000 		.4byte	.Ldebug_info0
 2434 000a 04       		.byte	0x4
 2435 000b 00       		.byte	0
 2436 000c 0000     		.2byte	0
 2437 000e 0000     		.2byte	0
 2438 0010 00000000 		.4byte	.LFB65
 2439 0014 28010000 		.4byte	.LFE65-.LFB65
 2440 0018 00000000 		.4byte	.LFB66
 2441 001c 08000000 		.4byte	.LFE66-.LFB66
 2442 0020 00000000 		.4byte	.LFB69
 2443 0024 2C000000 		.4byte	.LFE69-.LFB69
 2444 0028 00000000 		.4byte	.LFB68
 2445 002c D0000000 		.4byte	.LFE68-.LFB68
 2446 0030 00000000 		.4byte	.LFB70
 2447 0034 2C000000 		.4byte	.LFE70-.LFB70
 2448 0038 00000000 		.4byte	.LFB71
 2449 003c 20000000 		.4byte	.LFE71-.LFB71
 2450 0040 00000000 		.4byte	.LFB72
 2451 0044 1C000000 		.4byte	.LFE72-.LFB72
 2452 0048 00000000 		.4byte	.LFB64
 2453 004c D0000000 		.4byte	.LFE64-.LFB64
 2454 0050 00000000 		.4byte	.LFB67
 2455 0054 34000000 		.4byte	.LFE67-.LFB67
 2456 0058 00000000 		.4byte	0
 2457 005c 00000000 		.4byte	0
 2458              		.section	.debug_ranges,"",%progbits
 2459              	.Ldebug_ranges0:
 2460 0000 00000000 		.4byte	.LFB65
 2461 0004 28010000 		.4byte	.LFE65
 2462 0008 00000000 		.4byte	.LFB66
 2463 000c 08000000 		.4byte	.LFE66
 2464 0010 00000000 		.4byte	.LFB69
 2465 0014 2C000000 		.4byte	.LFE69
 2466 0018 00000000 		.4byte	.LFB68
 2467 001c D0000000 		.4byte	.LFE68
 2468 0020 00000000 		.4byte	.LFB70
 2469 0024 2C000000 		.4byte	.LFE70
 2470 0028 00000000 		.4byte	.LFB71
 2471 002c 20000000 		.4byte	.LFE71
 2472 0030 00000000 		.4byte	.LFB72
 2473 0034 1C000000 		.4byte	.LFE72
 2474 0038 00000000 		.4byte	.LFB64
 2475 003c D0000000 		.4byte	.LFE64
 2476 0040 00000000 		.4byte	.LFB67
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 52


 2477 0044 34000000 		.4byte	.LFE67
 2478 0048 00000000 		.4byte	0
 2479 004c 00000000 		.4byte	0
 2480              		.section	.debug_line,"",%progbits
 2481              	.Ldebug_line0:
 2482 0000 0A040000 		.section	.debug_str,"MS",%progbits,1
 2482      0200B202 
 2482      00000201 
 2482      FB0E0D00 
 2482      01010101 
 2483              	.LASF34:
 2484 0000 63757272 		.ascii	"currentBit\000"
 2484      656E7442 
 2484      697400
 2485              	.LASF57:
 2486 000b 4C43445F 		.ascii	"LCD_Char_WriteControl\000"
 2486      43686172 
 2486      5F577269 
 2486      7465436F 
 2486      6E74726F 
 2487              	.LASF27:
 2488 0021 53656E64 		.ascii	"SendData\000"
 2488      44617461 
 2488      00
 2489              	.LASF77:
 2490 002a 4379506D 		.ascii	"CyPmSleep\000"
 2490      536C6565 
 2490      7000
 2491              	.LASF2:
 2492 0034 73686F72 		.ascii	"short int\000"
 2492      7420696E 
 2492      7400
 2493              	.LASF87:
 2494 003e 43686563 		.ascii	"CheckParity\000"
 2494      6B506172 
 2494      69747900 
 2495              	.LASF18:
 2496 004a 73697A65 		.ascii	"sizetype\000"
 2496      74797065 
 2496      00
 2497              	.LASF59:
 2498 0053 55415254 		.ascii	"UART_WriteTxData\000"
 2498      5F577269 
 2498      74655478 
 2498      44617461 
 2498      00
 2499              	.LASF15:
 2500 0064 63686172 		.ascii	"char8\000"
 2500      3800
 2501              	.LASF88:
 2502 006a 6D61696E 		.ascii	"main\000"
 2502      00
 2503              	.LASF76:
 2504 006f 506F7765 		.ascii	"Power_Toggle_Write\000"
 2504      725F546F 
 2504      67676C65 
 2504      5F577269 
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 53


 2504      746500
 2505              	.LASF65:
 2506 0082 63686563 		.ascii	"checkWatchDogTimer_Stop\000"
 2506      6B576174 
 2506      6368446F 
 2506      6754696D 
 2506      65725F53 
 2507              	.LASF12:
 2508 009a 75696E74 		.ascii	"uint16\000"
 2508      313600
 2509              	.LASF82:
 2510 00a1 4269745F 		.ascii	"Bit_Timer_Start\000"
 2510      54696D65 
 2510      725F5374 
 2510      61727400 
 2511              	.LASF11:
 2512 00b1 75696E74 		.ascii	"uint8\000"
 2512      3800
 2513              	.LASF45:
 2514 00b7 6C636446 		.ascii	"lcdFlagDecode\000"
 2514      6C616744 
 2514      65636F64 
 2514      6500
 2515              	.LASF29:
 2516 00c5 73746172 		.ascii	"startModules\000"
 2516      744D6F64 
 2516      756C6573 
 2516      00
 2517              	.LASF19:
 2518 00d2 4269745F 		.ascii	"Bit_Timer\000"
 2518      54696D65 
 2518      7200
 2519              	.LASF41:
 2520 00dc 74687265 		.ascii	"threeTransmissions\000"
 2520      65547261 
 2520      6E736D69 
 2520      7373696F 
 2520      6E7300
 2521              	.LASF72:
 2522 00ef 54696D65 		.ascii	"Timer_ISR_StartEx\000"
 2522      725F4953 
 2522      525F5374 
 2522      61727445 
 2522      7800
 2523              	.LASF13:
 2524 0101 666C6F61 		.ascii	"float\000"
 2524      7400
 2525              	.LASF26:
 2526 0107 64697370 		.ascii	"displayB\000"
 2526      6C617942 
 2526      00
 2527              	.LASF74:
 2528 0110 77617463 		.ascii	"watchDogCheck_StartEx\000"
 2528      68446F67 
 2528      43686563 
 2528      6B5F5374 
 2528      61727445 
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 54


 2529              	.LASF6:
 2530 0126 6C6F6E67 		.ascii	"long long int\000"
 2530      206C6F6E 
 2530      6720696E 
 2530      7400
 2531              	.LASF25:
 2532 0134 64697370 		.ascii	"displayG\000"
 2532      6C617947 
 2532      00
 2533              	.LASF32:
 2534 013d 7A65726F 		.ascii	"zeroCount\000"
 2534      436F756E 
 2534      7400
 2535              	.LASF16:
 2536 0147 63686172 		.ascii	"char\000"
 2536      00
 2537              	.LASF33:
 2538 014c 6F6E6543 		.ascii	"oneCount\000"
 2538      6F756E74 
 2538      00
 2539              	.LASF4:
 2540 0155 6C6F6E67 		.ascii	"long int\000"
 2540      20696E74 
 2540      00
 2541              	.LASF35:
 2542 015e 64617461 		.ascii	"dataCount\000"
 2542      436F756E 
 2542      7400
 2543              	.LASF31:
 2544 0168 6C657665 		.ascii	"levelCounter\000"
 2544      6C436F75 
 2544      6E746572 
 2544      00
 2545              	.LASF70:
 2546 0175 4F75745F 		.ascii	"Out_Comp_Start\000"
 2546      436F6D70 
 2546      5F537461 
 2546      727400
 2547              	.LASF83:
 2548 0184 54696D65 		.ascii	"Timer_ISR_Enable\000"
 2548      725F4953 
 2548      525F456E 
 2548      61626C65 
 2548      00
 2549              	.LASF52:
 2550 0195 536C6565 		.ascii	"SleepTimer_Start\000"
 2550      7054696D 
 2550      65725F53 
 2550      74617274 
 2550      00
 2551              	.LASF23:
 2552 01a6 70617269 		.ascii	"parity\000"
 2552      747900
 2553              	.LASF43:
 2554 01ad 6C636446 		.ascii	"lcdFlagEncode\000"
 2554      6C616745 
 2554      6E636F64 
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 55


 2554      6500
 2555              	.LASF53:
 2556 01bb 4269745F 		.ascii	"Bit_Timer_Stop\000"
 2556      54696D65 
 2556      725F5374 
 2556      6F7000
 2557              	.LASF24:
 2558 01ca 44697370 		.ascii	"Display\000"
 2558      6C617900 
 2559              	.LASF30:
 2560 01d2 77616B65 		.ascii	"wakeUp_ISR\000"
 2560      55705F49 
 2560      535200
 2561              	.LASF28:
 2562 01dd 73746F70 		.ascii	"stopModules\000"
 2562      4D6F6475 
 2562      6C657300 
 2563              	.LASF39:
 2564 01e9 6465636F 		.ascii	"decodeFlag\000"
 2564      6465466C 
 2564      616700
 2565              	.LASF17:
 2566 01f4 6C6F6E67 		.ascii	"long double\000"
 2566      20646F75 
 2566      626C6500 
 2567              	.LASF1:
 2568 0200 756E7369 		.ascii	"unsigned char\000"
 2568      676E6564 
 2568      20636861 
 2568      7200
 2569              	.LASF20:
 2570 020e 77617463 		.ascii	"watchDogCheck\000"
 2570      68446F67 
 2570      43686563 
 2570      6B00
 2571              	.LASF58:
 2572 021c 73707269 		.ascii	"sprintf\000"
 2572      6E746600 
 2573              	.LASF68:
 2574 0224 50574D5F 		.ascii	"PWM_Recon_Start\000"
 2574      5265636F 
 2574      6E5F5374 
 2574      61727400 
 2575              	.LASF0:
 2576 0234 7369676E 		.ascii	"signed char\000"
 2576      65642063 
 2576      68617200 
 2577              	.LASF22:
 2578 0240 72656365 		.ascii	"receivedParity\000"
 2578      69766564 
 2578      50617269 
 2578      747900
 2579              	.LASF7:
 2580 024f 6C6F6E67 		.ascii	"long long unsigned int\000"
 2580      206C6F6E 
 2580      6720756E 
 2580      7369676E 
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 56


 2580      65642069 
 2581              	.LASF86:
 2582 0266 433A5C53 		.ascii	"C:\\SPB_Data\\Documents\\UACSCode\\UACS\\Spring2018"
 2582      50425F44 
 2582      6174615C 
 2582      446F6375 
 2582      6D656E74 
 2583 0294 5C486967 		.ascii	"\\HighFSKRx.cydsn\000"
 2583      6846534B 
 2583      52782E63 
 2583      7964736E 
 2583      00
 2584              	.LASF8:
 2585 02a5 756E7369 		.ascii	"unsigned int\000"
 2585      676E6564 
 2585      20696E74 
 2585      00
 2586              	.LASF64:
 2587 02b2 4F75745F 		.ascii	"Out_Comp_Stop\000"
 2587      436F6D70 
 2587      5F53746F 
 2587      7000
 2588              	.LASF42:
 2589 02c0 736C6565 		.ascii	"sleepFlag\000"
 2589      70466C61 
 2589      6700
 2590              	.LASF78:
 2591 02ca 736C6565 		.ascii	"sleepToggle_Write\000"
 2591      70546F67 
 2591      676C655F 
 2591      57726974 
 2591      6500
 2592              	.LASF71:
 2593 02dc 63686563 		.ascii	"checkWatchDogTimer_Start\000"
 2593      6B576174 
 2593      6368446F 
 2593      6754696D 
 2593      65725F53 
 2594              	.LASF84:
 2595 02f5 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2595      43313120 
 2595      352E342E 
 2595      31203230 
 2595      31363036 
 2596 0328 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2596      20726576 
 2596      6973696F 
 2596      6E203233 
 2596      37373135 
 2597 035b 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2597      66756E63 
 2597      74696F6E 
 2597      2D736563 
 2597      74696F6E 
 2598              	.LASF81:
 2599 0383 536C6565 		.ascii	"SleepTimer_Stop\000"
 2599      7054696D 
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 57


 2599      65725F53 
 2599      746F7000 
 2600              	.LASF67:
 2601 0393 55415254 		.ascii	"UART_Start\000"
 2601      5F537461 
 2601      727400
 2602              	.LASF10:
 2603 039e 696E7433 		.ascii	"int32_t\000"
 2603      325F7400 
 2604              	.LASF80:
 2605 03a6 536C6565 		.ascii	"SleepTimer_GetStatus\000"
 2605      7054696D 
 2605      65725F47 
 2605      65745374 
 2605      61747573 
 2606              	.LASF21:
 2607 03bb 62697454 		.ascii	"bitToCheck\000"
 2607      6F436865 
 2607      636B00
 2608              	.LASF75:
 2609 03c6 43795764 		.ascii	"CyWdtStart\000"
 2609      74537461 
 2609      727400
 2610              	.LASF37:
 2611 03d1 63726162 		.ascii	"crabs\000"
 2611      7300
 2612              	.LASF56:
 2613 03d7 4C43445F 		.ascii	"LCD_Char_PrintString\000"
 2613      43686172 
 2613      5F507269 
 2613      6E745374 
 2613      72696E67 
 2614              	.LASF36:
 2615 03ec 64617461 		.ascii	"data\000"
 2615      00
 2616              	.LASF51:
 2617 03f1 436F756E 		.ascii	"Count_Out_Write\000"
 2617      745F4F75 
 2617      745F5772 
 2617      69746500 
 2618              	.LASF40:
 2619 0401 70617269 		.ascii	"paritySuccess\000"
 2619      74795375 
 2619      63636573 
 2619      7300
 2620              	.LASF3:
 2621 040f 73686F72 		.ascii	"short unsigned int\000"
 2621      7420756E 
 2621      7369676E 
 2621      65642069 
 2621      6E7400
 2622              	.LASF48:
 2623 0422 4F757470 		.ascii	"OutputString\000"
 2623      75745374 
 2623      72696E67 
 2623      00
 2624              	.LASF85:
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 58


 2625 042f 6D61696E 		.ascii	"main.c\000"
 2625      2E6300
 2626              	.LASF63:
 2627 0436 53686966 		.ascii	"Shift_Reg_Stop\000"
 2627      745F5265 
 2627      675F5374 
 2627      6F7000
 2628              	.LASF5:
 2629 0445 6C6F6E67 		.ascii	"long unsigned int\000"
 2629      20756E73 
 2629      69676E65 
 2629      6420696E 
 2629      7400
 2630              	.LASF14:
 2631 0457 646F7562 		.ascii	"double\000"
 2631      6C6500
 2632              	.LASF49:
 2633 045e 64697370 		.ascii	"display\000"
 2633      6C617900 
 2634              	.LASF60:
 2635 0466 4C43445F 		.ascii	"LCD_Char_Stop\000"
 2635      43686172 
 2635      5F53746F 
 2635      7000
 2636              	.LASF46:
 2637 0474 6465636F 		.ascii	"decodeWrong\000"
 2637      64655772 
 2637      6F6E6700 
 2638              	.LASF9:
 2639 0480 5F5F696E 		.ascii	"__int32_t\000"
 2639      7433325F 
 2639      7400
 2640              	.LASF73:
 2641 048a 536C6565 		.ascii	"Sleep_ISR_StartEx\000"
 2641      705F4953 
 2641      525F5374 
 2641      61727445 
 2641      7800
 2642              	.LASF50:
 2643 049c 4F75745F 		.ascii	"Out_Comp_GetCompare\000"
 2643      436F6D70 
 2643      5F476574 
 2643      436F6D70 
 2643      61726500 
 2644              	.LASF38:
 2645 04b0 64617461 		.ascii	"dataFlag\000"
 2645      466C6167 
 2645      00
 2646              	.LASF55:
 2647 04b9 4C43445F 		.ascii	"LCD_Char_Position\000"
 2647      43686172 
 2647      5F506F73 
 2647      6974696F 
 2647      6E00
 2648              	.LASF61:
 2649 04cb 55415254 		.ascii	"UART_Stop\000"
 2649      5F53746F 
ARM GAS  C:\Users\ipfajard\AppData\Local\Temp\ccur4nJM.s 			page 59


 2649      7000
 2650              	.LASF47:
 2651 04d5 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2651      52784275 
 2651      66666572 
 2651      00
 2652              	.LASF44:
 2653 04e2 6C636446 		.ascii	"lcdFlagData\000"
 2653      6C616744 
 2653      61746100 
 2654              	.LASF79:
 2655 04ee 43794465 		.ascii	"CyDelay\000"
 2655      6C617900 
 2656              	.LASF69:
 2657 04f6 53686966 		.ascii	"Shift_Reg_Start\000"
 2657      745F5265 
 2657      675F5374 
 2657      61727400 
 2658              	.LASF66:
 2659 0506 4C43445F 		.ascii	"LCD_Char_Start\000"
 2659      43686172 
 2659      5F537461 
 2659      727400
 2660              	.LASF54:
 2661 0515 43795764 		.ascii	"CyWdtClear\000"
 2661      74436C65 
 2661      617200
 2662              	.LASF62:
 2663 0520 50574D5F 		.ascii	"PWM_Recon_Stop\000"
 2663      5265636F 
 2663      6E5F5374 
 2663      6F7000
 2664              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
