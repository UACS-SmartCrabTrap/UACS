ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccJpclXm.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.syntax unified
  20              		.global _printf_float
  21              		.thumb
  22              		.syntax unified
  23              		.global	parity
  24              		.section	.rodata
  25              		.align	2
  26              	.LC0:
  27 0000 4E6F6E65 		.ascii	"None\000"
  27      00
  28 0005 000000   		.align	2
  29              	.LC1:
  30 0008 4F646400 		.ascii	"Odd\000"
  31              		.align	2
  32              	.LC2:
  33 000c 4576656E 		.ascii	"Even\000"
  33      00
  34 0011 000000   		.align	2
  35              	.LC3:
  36 0014 4D61726B 		.ascii	"Mark\000"
  36      00
  37 0019 000000   		.align	2
  38              	.LC4:
  39 001c 53706163 		.ascii	"Space\000"
  39      6500
  40              		.data
  41              		.align	2
  42              		.type	parity, %object
  43              		.size	parity, 20
  44              	parity:
  45 0000 00000000 		.word	.LC0
  46 0004 08000000 		.word	.LC1
  47 0008 0C000000 		.word	.LC2
  48 000c 14000000 		.word	.LC3
  49 0010 1C000000 		.word	.LC4
  50              		.global	stop
  51              		.section	.rodata
  52 0022 0000     		.align	2
  53              	.LC5:
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccJpclXm.s 			page 2


  54 0024 3100     		.ascii	"1\000"
  55 0026 0000     		.align	2
  56              	.LC6:
  57 0028 312E3500 		.ascii	"1.5\000"
  58              		.align	2
  59              	.LC7:
  60 002c 3200     		.ascii	"2\000"
  61              		.data
  62              		.align	2
  63              		.type	stop, %object
  64              		.size	stop, 12
  65              	stop:
  66 0014 24000000 		.word	.LC5
  67 0018 28000000 		.word	.LC6
  68 001c 2C000000 		.word	.LC7
  69              		.global	i
  70              		.bss
  71              		.align	2
  72              		.type	i, %object
  73              		.size	i, 4
  74              	i:
  75 0000 00000000 		.space	4
  76              		.section	.rodata
  77 002e 0000     		.align	2
  78              	.LC8:
  79 0030 48656C6C 		.ascii	"Hello\000"
  79      6F00
  80 0036 0000     		.align	2
  81              	.LC9:
  82 0038 20202020 		.ascii	"                    \000"
  82      20202020 
  82      20202020 
  82      20202020 
  82      20202020 
  83 004d 000000   		.align	2
  84              	.LC10:
  85 0050 3000     		.ascii	"0\000"
  86 0052 0000     		.align	2
  87              	.LC11:
  88 0054 54727565 		.ascii	"True zero\000"
  88      207A6572 
  88      6F00
  89 005e 0000     		.align	2
  90              	.LC12:
  91 0060 256400   		.ascii	"%d\000"
  92              		.section	.text.main,"ax",%progbits
  93              		.align	2
  94              		.global	main
  95              		.thumb
  96              		.thumb_func
  97              		.type	main, %function
  98              	main:
  99              	.LFB64:
 100              		.file 1 "main.c"
   1:main.c        **** /*******************************************************************************
   2:main.c        **** * File Name: main.c
   3:main.c        **** * Editer: Stephanie Salazar
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccJpclXm.s 			page 3


   4:main.c        **** * Revision: 5/14/18
   5:main.c        **** *
   6:main.c        **** * Version: 2.0
   7:main.c        **** *
   8:main.c        **** * Description:
   9:main.c        **** *   The component is enumerated as a Virtual Com port. Receives data from the 
  10:main.c        **** *   hyper terminal, then sends back the received data.
  11:main.c        **** *   For PSoC3/PSoC5LP, the LCD shows the line settings.
  12:main.c        **** *
  13:main.c        **** * Related Document:
  14:main.c        **** *  Universal Serial Bus Specification Revision 2.0
  15:main.c        **** *  Universal Serial Bus Class Definitions for Communications Devices
  16:main.c        **** *  Revision 1.2
  17:main.c        **** *
  18:main.c        **** ********************************************************************************
  19:main.c        **** * Copyright 2015, Cypress Semiconductor Corporation. All rights reserved.
  20:main.c        **** * This software is owned by Cypress Semiconductor Corporation and is protected
  21:main.c        **** * by and subject to worldwide patent and copyright laws and treaties.
  22:main.c        **** * Therefore, you may use this software only as provided in the license agreement
  23:main.c        **** * accompanying the software package from which you obtained this software.
  24:main.c        **** * CYPRESS AND ITS SUPPLIERS MAKE NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  25:main.c        **** * WITH REGARD TO THIS SOFTWARE, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
  26:main.c        **** * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  27:main.c        **** *******************************************************************************/
  28:main.c        **** 
  29:main.c        **** #include <project.h>
  30:main.c        **** #include "stdio.h"
  31:main.c        **** 
  32:main.c        **** #if defined (__GNUC__)
  33:main.c        ****     /* Add an explicit reference to the floating point printf library */
  34:main.c        ****     /* to allow usage of the floating point conversion specifiers. */
  35:main.c        ****     /* This is not linked in by default with the newlib-nano library. */
  36:main.c        ****     asm (".global _printf_float");
  37:main.c        **** #endif
  38:main.c        **** 
  39:main.c        **** #define USBFS_DEVICE    (0u)
  40:main.c        **** 
  41:main.c        **** /* The buffer size is equal to the maximum packet size of the IN and OUT bulk
  42:main.c        **** * endpoints.
  43:main.c        **** */
  44:main.c        **** #define USBUART_BUFFER_SIZE (64u)
  45:main.c        **** #define LINE_STR_LENGTH     (20u)
  46:main.c        **** #define DATA_SIZE           (7u)
  47:main.c        **** 
  48:main.c        **** char8* parity[] = {"None", "Odd", "Even", "Mark", "Space"};
  49:main.c        **** char8* stop[]   = {"1", "1.5", "2"};
  50:main.c        **** int i = 0;
  51:main.c        **** 
  52:main.c        **** 
  53:main.c        **** /*******************************************************************************
  54:main.c        **** * Function Name: main
  55:main.c        **** ********************************************************************************
  56:main.c        **** *
  57:main.c        **** * Summary:
  58:main.c        **** *  The main function performs the following actions:
  59:main.c        **** *   1. Waits until VBUS becomes valid and starts the USBFS component which is
  60:main.c        **** *      enumerated as virtual Com port.
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccJpclXm.s 			page 4


  61:main.c        **** *   2. Waits until the device is enumerated by the host.
  62:main.c        **** *   3. Waits for data coming from the hyper terminal and sends it back.
  63:main.c        **** *   4. PSoC3/PSoC5LP: the LCD shows the line settings.
  64:main.c        **** *
  65:main.c        **** * Parameters:
  66:main.c        **** *  None.
  67:main.c        **** *
  68:main.c        **** * Return:
  69:main.c        **** *  None.
  70:main.c        **** *
  71:main.c        **** *******************************************************************************/
  72:main.c        **** int main()
  73:main.c        **** {
 101              		.loc 1 73 0
 102              		.cfi_startproc
 103              		@ args = 0, pretend = 0, frame = 96
 104              		@ frame_needed = 1, uses_anonymous_args = 0
 105 0000 80B5     		push	{r7, lr}
 106              		.cfi_def_cfa_offset 8
 107              		.cfi_offset 7, -8
 108              		.cfi_offset 14, -4
 109 0002 98B0     		sub	sp, sp, #96
 110              		.cfi_def_cfa_offset 104
 111 0004 00AF     		add	r7, sp, #0
 112              		.cfi_def_cfa_register 7
  74:main.c        ****     uint16 count;
  75:main.c        ****     uint8 buffer[USBUART_BUFFER_SIZE];
  76:main.c        ****     uint8 data = 0;
 113              		.loc 1 76 0
 114 0006 0023     		movs	r3, #0
 115 0008 87F85F30 		strb	r3, [r7, #95]
  77:main.c        ****     int flag0 = 0;
 116              		.loc 1 77 0
 117 000c 0023     		movs	r3, #0
 118 000e BB65     		str	r3, [r7, #88]
  78:main.c        ****     
  79:main.c        **** #if (CY_PSOC3 || CY_PSOC5LP)
  80:main.c        ****     uint8 state;
  81:main.c        ****     char8 lineStr[LINE_STR_LENGTH];
  82:main.c        ****     
  83:main.c        ****     LCD_Start();
 119              		.loc 1 83 0
 120 0010 FFF7FEFF 		bl	LCD_Start
  84:main.c        **** #endif /* (CY_PSOC3 || CY_PSOC5LP) */
  85:main.c        ****     
  86:main.c        ****     CyGlobalIntEnable;
 121              		.loc 1 86 0
 122              		.syntax unified
 123              	@ 86 "main.c" 1
 124 0014 62B6     		CPSIE   i
 125              	@ 0 "" 2
  87:main.c        **** 
  88:main.c        ****     /* Start USBFS operation with 5-V operation. */
  89:main.c        ****     USBUART_Start(USBFS_DEVICE, USBUART_5V_OPERATION);
 126              		.loc 1 89 0
 127              		.thumb
 128              		.syntax unified
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccJpclXm.s 			page 5


 129 0016 0121     		movs	r1, #1
 130 0018 0020     		movs	r0, #0
 131 001a FFF7FEFF 		bl	USBUART_Start
  90:main.c        ****     
  91:main.c        ****     /* Get string to output. */
  92:main.c        ****     sprintf(lineStr,"Hello");
 132              		.loc 1 92 0
 133 001e 3B46     		mov	r3, r7
 134 0020 4C4A     		ldr	r2, .L12
 135 0022 92E80300 		ldmia	r2, {r0, r1}
 136 0026 1860     		str	r0, [r3]
 137 0028 0433     		adds	r3, r3, #4
 138 002a 1980     		strh	r1, [r3]	@ movhi
  93:main.c        **** 
  94:main.c        ****     /* Clear LCD line. */
  95:main.c        ****     LCD_Position(0u, 0u);
 139              		.loc 1 95 0
 140 002c 0021     		movs	r1, #0
 141 002e 0020     		movs	r0, #0
 142 0030 FFF7FEFF 		bl	LCD_Position
  96:main.c        ****     LCD_PrintString("                    ");
 143              		.loc 1 96 0
 144 0034 4848     		ldr	r0, .L12+4
 145 0036 FFF7FEFF 		bl	LCD_PrintString
  97:main.c        **** 
  98:main.c        ****     /* Output string on LCD. */
  99:main.c        ****     LCD_Position(0u, 0u);
 146              		.loc 1 99 0
 147 003a 0021     		movs	r1, #0
 148 003c 0020     		movs	r0, #0
 149 003e FFF7FEFF 		bl	LCD_Position
 100:main.c        ****     LCD_PrintString(lineStr);
 150              		.loc 1 100 0
 151 0042 3B46     		mov	r3, r7
 152 0044 1846     		mov	r0, r3
 153 0046 FFF7FEFF 		bl	LCD_PrintString
 154              	.L10:
 101:main.c        ****     
 102:main.c        ****    
 103:main.c        ****     for(;;)
 104:main.c        ****     {
 105:main.c        ****         /* Host can send double SET_INTERFACE request. */
 106:main.c        ****         if (0u != USBUART_IsConfigurationChanged())
 155              		.loc 1 106 0
 156 004a FFF7FEFF 		bl	USBUART_IsConfigurationChanged
 157 004e 0346     		mov	r3, r0
 158 0050 002B     		cmp	r3, #0
 159 0052 06D0     		beq	.L2
 107:main.c        ****         {
 108:main.c        ****             /* Initialize IN endpoints when device is configured. */
 109:main.c        ****             if (0u != USBUART_GetConfiguration())
 160              		.loc 1 109 0
 161 0054 FFF7FEFF 		bl	USBUART_GetConfiguration
 162 0058 0346     		mov	r3, r0
 163 005a 002B     		cmp	r3, #0
 164 005c 01D0     		beq	.L2
 110:main.c        ****             {
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccJpclXm.s 			page 6


 111:main.c        ****                 /* Enumeration is done, enable OUT endpoint to receive data 
 112:main.c        ****                 * from host. */
 113:main.c        ****                 USBUART_CDC_Init();
 165              		.loc 1 113 0
 166 005e FFF7FEFF 		bl	USBUART_CDC_Init
 167              	.L2:
 114:main.c        ****             }
 115:main.c        ****         }
 116:main.c        ****         USBUART_PutString("Hello");
 168              		.loc 1 116 0
 169 0062 3C48     		ldr	r0, .L12
 170 0064 FFF7FEFF 		bl	USBUART_PutString
 117:main.c        ****         
 118:main.c        ****         /* Service USB CDC when device is configured. */
 119:main.c        ****         if (0u != USBUART_GetConfiguration())
 171              		.loc 1 119 0
 172 0068 FFF7FEFF 		bl	USBUART_GetConfiguration
 173 006c 0346     		mov	r3, r0
 174 006e 002B     		cmp	r3, #0
 175 0070 EBD0     		beq	.L10
 120:main.c        ****         {
 121:main.c        ****             /* Check for input data from host. */
 122:main.c        ****             if (0u != USBUART_DataIsReady())
 176              		.loc 1 122 0
 177 0072 FFF7FEFF 		bl	USBUART_DataIsReady
 178 0076 0346     		mov	r3, r0
 179 0078 002B     		cmp	r3, #0
 180 007a E6D0     		beq	.L10
 181              	.LBB2:
 123:main.c        ****             {
 124:main.c        ****                 /* Read received data and re-enable OUT endpoint. */
 125:main.c        ****                 count = USBUART_GetAll(buffer);
 182              		.loc 1 125 0
 183 007c 07F11403 		add	r3, r7, #20
 184 0080 1846     		mov	r0, r3
 185 0082 FFF7FEFF 		bl	USBUART_GetAll
 186 0086 0346     		mov	r3, r0
 187 0088 A7F85630 		strh	r3, [r7, #86]	@ movhi
 126:main.c        ****     
 127:main.c        ****                 sprintf(lineStr,buffer);
 188              		.loc 1 127 0
 189 008c 07F11402 		add	r2, r7, #20
 190 0090 3B46     		mov	r3, r7
 191 0092 1146     		mov	r1, r2
 192 0094 1846     		mov	r0, r3
 193 0096 FFF7FEFF 		bl	sprintf
 128:main.c        ****                 if (strncmp (buffer,"0",1) == 0){
 194              		.loc 1 128 0
 195 009a 07F11403 		add	r3, r7, #20
 196 009e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 197 00a0 2E4B     		ldr	r3, .L12+8
 198 00a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 199 00a4 9A42     		cmp	r2, r3
 200 00a6 04D1     		bne	.L4
 129:main.c        ****                     flag0 = 1;
 201              		.loc 1 129 0
 202 00a8 0123     		movs	r3, #1
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccJpclXm.s 			page 7


 203 00aa BB65     		str	r3, [r7, #88]
 130:main.c        ****                     USBUART_PutString("True zero");
 204              		.loc 1 130 0
 205 00ac 2C48     		ldr	r0, .L12+12
 206 00ae FFF7FEFF 		bl	USBUART_PutString
 207              	.L4:
 131:main.c        ****                 }
 132:main.c        ****                 data = (uint8)atoi(buffer);
 208              		.loc 1 132 0
 209 00b2 07F11403 		add	r3, r7, #20
 210 00b6 1846     		mov	r0, r3
 211 00b8 FFF7FEFF 		bl	atoi
 212 00bc 0346     		mov	r3, r0
 213 00be 87F85F30 		strb	r3, [r7, #95]
 133:main.c        ****                 
 134:main.c        ****                 // Reset data
 135:main.c        ****                 if(i == 7){
 214              		.loc 1 135 0
 215 00c2 284B     		ldr	r3, .L12+16
 216 00c4 1B68     		ldr	r3, [r3]
 217 00c6 072B     		cmp	r3, #7
 218 00c8 02D1     		bne	.L5
 136:main.c        ****                     i=0;
 219              		.loc 1 136 0
 220 00ca 264B     		ldr	r3, .L12+16
 221 00cc 0022     		movs	r2, #0
 222 00ce 1A60     		str	r2, [r3]
 223              	.L5:
 137:main.c        ****                 }
 138:main.c        **** 
 139:main.c        ****                 /* Clear LCD line. */
 140:main.c        ****                 LCD_Position(0u, 0u);
 224              		.loc 1 140 0
 225 00d0 0021     		movs	r1, #0
 226 00d2 0020     		movs	r0, #0
 227 00d4 FFF7FEFF 		bl	LCD_Position
 141:main.c        ****                 LCD_PrintString(lineStr);
 228              		.loc 1 141 0
 229 00d8 3B46     		mov	r3, r7
 230 00da 1846     		mov	r0, r3
 231 00dc FFF7FEFF 		bl	LCD_PrintString
 142:main.c        **** 
 143:main.c        ****                 if (0u != count)
 232              		.loc 1 143 0
 233 00e0 B7F85630 		ldrh	r3, [r7, #86]
 234 00e4 002B     		cmp	r3, #0
 235 00e6 22D0     		beq	.L11
 144:main.c        ****                 {
 145:main.c        ****                     /* Wait until component is ready to send data to host. */
 146:main.c        ****                     while (0u == USBUART_CDCIsReady())
 236              		.loc 1 146 0
 237 00e8 00BF     		nop
 238              	.L7:
 239              		.loc 1 146 0 is_stmt 0 discriminator 1
 240 00ea FFF7FEFF 		bl	USBUART_CDCIsReady
 241 00ee 0346     		mov	r3, r0
 242 00f0 002B     		cmp	r3, #0
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccJpclXm.s 			page 8


 243 00f2 FAD0     		beq	.L7
 147:main.c        ****                     {
 148:main.c        ****                     }
 149:main.c        **** 
 150:main.c        ****                     /* Send data back to host. */
 151:main.c        ****                     USBUART_PutData(buffer, count);
 244              		.loc 1 151 0 is_stmt 1
 245 00f4 B7F85620 		ldrh	r2, [r7, #86]
 246 00f8 07F11403 		add	r3, r7, #20
 247 00fc 1146     		mov	r1, r2
 248 00fe 1846     		mov	r0, r3
 249 0100 FFF7FEFF 		bl	USBUART_PutData
 152:main.c        **** 
 153:main.c        **** 
 154:main.c        ****                     /* If the last sent packet is exactly the maximum packet 
 155:main.c        ****                     *  size, it is followed by a zero-length packet to assure
 156:main.c        ****                     *  that the end of the segment is properly identified by 
 157:main.c        ****                     *  the terminal.
 158:main.c        ****                     */
 159:main.c        ****                     if (USBUART_BUFFER_SIZE == count)
 250              		.loc 1 159 0
 251 0104 B7F85630 		ldrh	r3, [r7, #86]
 252 0108 402B     		cmp	r3, #64
 253 010a 10D1     		bne	.L11
 160:main.c        ****                     {
 161:main.c        ****                         /* Wait until component is ready to send data to PC. */
 162:main.c        ****                         while (0u == USBUART_CDCIsReady())
 254              		.loc 1 162 0
 255 010c 00BF     		nop
 256              	.L8:
 257              		.loc 1 162 0 is_stmt 0 discriminator 1
 258 010e FFF7FEFF 		bl	USBUART_CDCIsReady
 259 0112 0346     		mov	r3, r0
 260 0114 002B     		cmp	r3, #0
 261 0116 FAD0     		beq	.L8
 163:main.c        ****                         {
 164:main.c        ****                         }
 165:main.c        ****                         
 166:main.c        ****                         /* Clear LCD line. */
 167:main.c        ****                         LCD_Position(1u, 0u);
 262              		.loc 1 167 0 is_stmt 1
 263 0118 0021     		movs	r1, #0
 264 011a 0120     		movs	r0, #1
 265 011c FFF7FEFF 		bl	LCD_Position
 168:main.c        ****                         LCD_PrintString("                    ");
 266              		.loc 1 168 0
 267 0120 0D48     		ldr	r0, .L12+4
 268 0122 FFF7FEFF 		bl	LCD_PrintString
 169:main.c        **** 
 170:main.c        ****                         /* Send zero-length packet to PC. */
 171:main.c        ****                         USBUART_PutData(NULL, 0u);
 269              		.loc 1 171 0
 270 0126 0021     		movs	r1, #0
 271 0128 0020     		movs	r0, #0
 272 012a FFF7FEFF 		bl	USBUART_PutData
 273              	.L11:
 172:main.c        ****                     }
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccJpclXm.s 			page 9


 173:main.c        ****                 }
 174:main.c        ****                      /* Wait until component is ready to send data to host. */
 175:main.c        ****                     while (0u == USBUART_CDCIsReady())
 274              		.loc 1 175 0
 275 012e 00BF     		nop
 276              	.L9:
 277              		.loc 1 175 0 is_stmt 0 discriminator 1
 278 0130 FFF7FEFF 		bl	USBUART_CDCIsReady
 279 0134 0346     		mov	r3, r0
 280 0136 002B     		cmp	r3, #0
 281 0138 FAD0     		beq	.L9
 176:main.c        ****                     {
 177:main.c        ****                     }
 178:main.c        ****                     sprintf(lineStr,"%d", data);
 282              		.loc 1 178 0 is_stmt 1
 283 013a 97F85F20 		ldrb	r2, [r7, #95]	@ zero_extendqisi2
 284 013e 3B46     		mov	r3, r7
 285 0140 0949     		ldr	r1, .L12+20
 286 0142 1846     		mov	r0, r3
 287 0144 FFF7FEFF 		bl	sprintf
 179:main.c        ****                     USBUART_PutString(lineStr);
 288              		.loc 1 179 0
 289 0148 3B46     		mov	r3, r7
 290 014a 1846     		mov	r0, r3
 291 014c FFF7FEFF 		bl	USBUART_PutString
 292              	.LBE2:
 180:main.c        ****             }
 181:main.c        **** 
 182:main.c        **** 
 183:main.c        **** //        #if (CY_PSOC3 || CY_PSOC5LP)
 184:main.c        **** //            /* Check for Line settings change. */
 185:main.c        **** //            state = USBUART_IsLineChanged();
 186:main.c        **** //            if (0u != state)
 187:main.c        **** //            {
 188:main.c        **** //                /* Output on LCD Line Coding settings. */
 189:main.c        **** //                if (0u != (state & USBUART_LINE_CODING_CHANGED))
 190:main.c        **** //                {                  
 191:main.c        **** //                    /* Get string to output. */
 192:main.c        **** //                    sprintf(lineStr,"BR:%4ld %d%c%s", USBUART_GetDTERate(),\
 193:main.c        **** //                                   (uint16) USBUART_GetDataBits(),\
 194:main.c        **** //                                   parity[(uint16) USBUART_GetParityType()][0],\
 195:main.c        **** //                                   stop[(uint16) USBUART_GetCharFormat()]);
 196:main.c        **** //
 197:main.c        **** //                    /* Clear LCD line. */
 198:main.c        **** //                    LCD_Position(0u, 0u);
 199:main.c        **** //                    LCD_PrintString("                    ");
 200:main.c        **** //
 201:main.c        **** //                    /* Output string on LCD. */
 202:main.c        **** //                    LCD_Position(0u, 0u);
 203:main.c        **** //                    LCD_PrintString(lineStr);
 204:main.c        **** //                }
 205:main.c        **** //
 206:main.c        **** //                /* Output on LCD Line Control settings. */
 207:main.c        **** //                if (0u != (state & USBUART_LINE_CONTROL_CHANGED))
 208:main.c        **** //                {                   
 209:main.c        **** //                    /* Get string to output. */
 210:main.c        **** //                    state = USBUART_GetLineControl();
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccJpclXm.s 			page 10


 211:main.c        **** //                    sprintf(lineStr,"DTR:%s,RTS:%s",  (0u != (state & USBUART_LINE_CONTROL_DTR)) 
 212:main.c        **** //                                                      (0u != (state & USBUART_LINE_CONTROL_RTS)) 
 213:main.c        **** //
 214:main.c        **** //                    /* Clear LCD line. */
 215:main.c        **** //                    LCD_Position(1u, 0u);
 216:main.c        **** //                    LCD_PrintString("                    ");
 217:main.c        **** //
 218:main.c        **** //                    /* Output string on LCD. */
 219:main.c        **** //                    LCD_Position(1u, 0u);
 220:main.c        **** //                    LCD_PrintString(lineStr);
 221:main.c        **** //                }
 222:main.c        **** //            }
 223:main.c        **** //        #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 224:main.c        ****         }
 225:main.c        ****     }
 293              		.loc 1 225 0
 294 0150 7BE7     		b	.L10
 295              	.L13:
 296 0152 00BF     		.align	2
 297              	.L12:
 298 0154 30000000 		.word	.LC8
 299 0158 38000000 		.word	.LC9
 300 015c 50000000 		.word	.LC10
 301 0160 54000000 		.word	.LC11
 302 0164 00000000 		.word	i
 303 0168 60000000 		.word	.LC12
 304              		.cfi_endproc
 305              	.LFE64:
 306              		.size	main, .-main
 307              		.text
 308              	.Letext0:
 309              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 310              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 311              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 312              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 313              		.section	.debug_info,"",%progbits
 314              	.Ldebug_info0:
 315 0000 D1010000 		.4byte	0x1d1
 316 0004 0400     		.2byte	0x4
 317 0006 00000000 		.4byte	.Ldebug_abbrev0
 318 000a 04       		.byte	0x4
 319 000b 01       		.uleb128 0x1
 320 000c 00000000 		.4byte	.LASF27
 321 0010 0C       		.byte	0xc
 322 0011 93010000 		.4byte	.LASF28
 323 0015 30010000 		.4byte	.LASF29
 324 0019 00000000 		.4byte	.Ldebug_ranges0+0
 325 001d 00000000 		.4byte	0
 326 0021 00000000 		.4byte	.Ldebug_line0
 327 0025 02       		.uleb128 0x2
 328 0026 01       		.byte	0x1
 329 0027 06       		.byte	0x6
 330 0028 D7010000 		.4byte	.LASF0
 331 002c 02       		.uleb128 0x2
 332 002d 01       		.byte	0x1
 333 002e 08       		.byte	0x8
 334 002f AE000000 		.4byte	.LASF1
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccJpclXm.s 			page 11


 335 0033 02       		.uleb128 0x2
 336 0034 02       		.byte	0x2
 337 0035 05       		.byte	0x5
 338 0036 AB010000 		.4byte	.LASF2
 339 003a 02       		.uleb128 0x2
 340 003b 02       		.byte	0x2
 341 003c 07       		.byte	0x7
 342 003d D4000000 		.4byte	.LASF3
 343 0041 03       		.uleb128 0x3
 344 0042 94000000 		.4byte	.LASF9
 345 0046 02       		.byte	0x2
 346 0047 3F       		.byte	0x3f
 347 0048 4C000000 		.4byte	0x4c
 348 004c 02       		.uleb128 0x2
 349 004d 04       		.byte	0x4
 350 004e 05       		.byte	0x5
 351 004f C2010000 		.4byte	.LASF4
 352 0053 02       		.uleb128 0x2
 353 0054 04       		.byte	0x4
 354 0055 07       		.byte	0x7
 355 0056 C2000000 		.4byte	.LASF5
 356 005a 02       		.uleb128 0x2
 357 005b 08       		.byte	0x8
 358 005c 05       		.byte	0x5
 359 005d 85010000 		.4byte	.LASF6
 360 0061 02       		.uleb128 0x2
 361 0062 08       		.byte	0x8
 362 0063 07       		.byte	0x7
 363 0064 19010000 		.4byte	.LASF7
 364 0068 04       		.uleb128 0x4
 365 0069 04       		.byte	0x4
 366 006a 05       		.byte	0x5
 367 006b 696E7400 		.ascii	"int\000"
 368 006f 02       		.uleb128 0x2
 369 0070 04       		.byte	0x4
 370 0071 07       		.byte	0x7
 371 0072 0C010000 		.4byte	.LASF8
 372 0076 03       		.uleb128 0x3
 373 0077 74010000 		.4byte	.LASF10
 374 007b 03       		.byte	0x3
 375 007c 2C       		.byte	0x2c
 376 007d 41000000 		.4byte	0x41
 377 0081 05       		.uleb128 0x5
 378 0082 BC010000 		.4byte	.LASF11
 379 0086 04       		.byte	0x4
 380 0087 9201     		.2byte	0x192
 381 0089 2C000000 		.4byte	0x2c
 382 008d 05       		.uleb128 0x5
 383 008e 05010000 		.4byte	.LASF12
 384 0092 04       		.byte	0x4
 385 0093 9301     		.2byte	0x193
 386 0095 3A000000 		.4byte	0x3a
 387 0099 02       		.uleb128 0x2
 388 009a 04       		.byte	0x4
 389 009b 04       		.byte	0x4
 390 009c A3000000 		.4byte	.LASF13
 391 00a0 02       		.uleb128 0x2
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccJpclXm.s 			page 12


 392 00a1 08       		.byte	0x8
 393 00a2 04       		.byte	0x4
 394 00a3 F9000000 		.4byte	.LASF14
 395 00a7 05       		.uleb128 0x5
 396 00a8 BC000000 		.4byte	.LASF15
 397 00ac 04       		.byte	0x4
 398 00ad A301     		.2byte	0x1a3
 399 00af B3000000 		.4byte	0xb3
 400 00b3 02       		.uleb128 0x2
 401 00b4 01       		.byte	0x1
 402 00b5 08       		.byte	0x8
 403 00b6 9A010000 		.4byte	.LASF16
 404 00ba 02       		.uleb128 0x2
 405 00bb 08       		.byte	0x8
 406 00bc 04       		.byte	0x4
 407 00bd CB010000 		.4byte	.LASF17
 408 00c1 02       		.uleb128 0x2
 409 00c2 04       		.byte	0x4
 410 00c3 07       		.byte	0x7
 411 00c4 7C010000 		.4byte	.LASF18
 412 00c8 06       		.uleb128 0x6
 413 00c9 00010000 		.4byte	.LASF30
 414 00cd 01       		.byte	0x1
 415 00ce 48       		.byte	0x48
 416 00cf 68000000 		.4byte	0x68
 417 00d3 00000000 		.4byte	.LFB64
 418 00d7 6C010000 		.4byte	.LFE64-.LFB64
 419 00db 01       		.uleb128 0x1
 420 00dc 9C       		.byte	0x9c
 421 00dd 4C010000 		.4byte	0x14c
 422 00e1 07       		.uleb128 0x7
 423 00e2 A5010000 		.4byte	.LASF19
 424 00e6 01       		.byte	0x1
 425 00e7 4A       		.byte	0x4a
 426 00e8 8D000000 		.4byte	0x8d
 427 00ec 02       		.uleb128 0x2
 428 00ed 91       		.byte	0x91
 429 00ee 6E       		.sleb128 -18
 430 00ef 07       		.uleb128 0x7
 431 00f0 B5010000 		.4byte	.LASF20
 432 00f4 01       		.byte	0x1
 433 00f5 4B       		.byte	0x4b
 434 00f6 4C010000 		.4byte	0x14c
 435 00fa 03       		.uleb128 0x3
 436 00fb 91       		.byte	0x91
 437 00fc AC7F     		.sleb128 -84
 438 00fe 07       		.uleb128 0x7
 439 00ff A9000000 		.4byte	.LASF21
 440 0103 01       		.byte	0x1
 441 0104 4C       		.byte	0x4c
 442 0105 81000000 		.4byte	0x81
 443 0109 02       		.uleb128 0x2
 444 010a 91       		.byte	0x91
 445 010b 77       		.sleb128 -9
 446 010c 07       		.uleb128 0x7
 447 010d 9F010000 		.4byte	.LASF22
 448 0111 01       		.byte	0x1
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccJpclXm.s 			page 13


 449 0112 4D       		.byte	0x4d
 450 0113 68000000 		.4byte	0x68
 451 0117 02       		.uleb128 0x2
 452 0118 91       		.byte	0x91
 453 0119 70       		.sleb128 -16
 454 011a 08       		.uleb128 0x8
 455 011b 8E000000 		.4byte	.LASF31
 456 011f 01       		.byte	0x1
 457 0120 50       		.byte	0x50
 458 0121 81000000 		.4byte	0x81
 459 0125 07       		.uleb128 0x7
 460 0126 EA010000 		.4byte	.LASF23
 461 012a 01       		.byte	0x1
 462 012b 51       		.byte	0x51
 463 012c 5C010000 		.4byte	0x15c
 464 0130 03       		.uleb128 0x3
 465 0131 91       		.byte	0x91
 466 0132 987F     		.sleb128 -104
 467 0134 09       		.uleb128 0x9
 468 0135 7C000000 		.4byte	.LBB2
 469 0139 D4000000 		.4byte	.LBE2-.LBB2
 470 013d 0A       		.uleb128 0xa
 471 013e 9E000000 		.4byte	.LASF32
 472 0142 01       		.byte	0x1
 473 0143 84       		.byte	0x84
 474 0144 68000000 		.4byte	0x68
 475 0148 0B       		.uleb128 0xb
 476 0149 00       		.byte	0
 477 014a 00       		.byte	0
 478 014b 00       		.byte	0
 479 014c 0C       		.uleb128 0xc
 480 014d 81000000 		.4byte	0x81
 481 0151 5C010000 		.4byte	0x15c
 482 0155 0D       		.uleb128 0xd
 483 0156 C1000000 		.4byte	0xc1
 484 015a 3F       		.byte	0x3f
 485 015b 00       		.byte	0
 486 015c 0C       		.uleb128 0xc
 487 015d A7000000 		.4byte	0xa7
 488 0161 6C010000 		.4byte	0x16c
 489 0165 0D       		.uleb128 0xd
 490 0166 C1000000 		.4byte	0xc1
 491 016a 13       		.byte	0x13
 492 016b 00       		.byte	0
 493 016c 0E       		.uleb128 0xe
 494 016d EC000000 		.4byte	.LASF24
 495 0171 05       		.byte	0x5
 496 0172 1207     		.2byte	0x712
 497 0174 78010000 		.4byte	0x178
 498 0178 0F       		.uleb128 0xf
 499 0179 76000000 		.4byte	0x76
 500 017d 0C       		.uleb128 0xc
 501 017e 8D010000 		.4byte	0x18d
 502 0182 8D010000 		.4byte	0x18d
 503 0186 0D       		.uleb128 0xd
 504 0187 C1000000 		.4byte	0xc1
 505 018b 04       		.byte	0x4
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccJpclXm.s 			page 14


 506 018c 00       		.byte	0
 507 018d 10       		.uleb128 0x10
 508 018e 04       		.byte	0x4
 509 018f A7000000 		.4byte	0xa7
 510 0193 11       		.uleb128 0x11
 511 0194 E3010000 		.4byte	.LASF25
 512 0198 01       		.byte	0x1
 513 0199 30       		.byte	0x30
 514 019a 7D010000 		.4byte	0x17d
 515 019e 05       		.uleb128 0x5
 516 019f 03       		.byte	0x3
 517 01a0 00000000 		.4byte	parity
 518 01a4 0C       		.uleb128 0xc
 519 01a5 8D010000 		.4byte	0x18d
 520 01a9 B4010000 		.4byte	0x1b4
 521 01ad 0D       		.uleb128 0xd
 522 01ae C1000000 		.4byte	0xc1
 523 01b2 02       		.byte	0x2
 524 01b3 00       		.byte	0
 525 01b4 11       		.uleb128 0x11
 526 01b5 E7000000 		.4byte	.LASF26
 527 01b9 01       		.byte	0x1
 528 01ba 31       		.byte	0x31
 529 01bb A4010000 		.4byte	0x1a4
 530 01bf 05       		.uleb128 0x5
 531 01c0 03       		.byte	0x3
 532 01c1 00000000 		.4byte	stop
 533 01c5 12       		.uleb128 0x12
 534 01c6 6900     		.ascii	"i\000"
 535 01c8 01       		.byte	0x1
 536 01c9 32       		.byte	0x32
 537 01ca 68000000 		.4byte	0x68
 538 01ce 05       		.uleb128 0x5
 539 01cf 03       		.byte	0x3
 540 01d0 00000000 		.4byte	i
 541 01d4 00       		.byte	0
 542              		.section	.debug_abbrev,"",%progbits
 543              	.Ldebug_abbrev0:
 544 0000 01       		.uleb128 0x1
 545 0001 11       		.uleb128 0x11
 546 0002 01       		.byte	0x1
 547 0003 25       		.uleb128 0x25
 548 0004 0E       		.uleb128 0xe
 549 0005 13       		.uleb128 0x13
 550 0006 0B       		.uleb128 0xb
 551 0007 03       		.uleb128 0x3
 552 0008 0E       		.uleb128 0xe
 553 0009 1B       		.uleb128 0x1b
 554 000a 0E       		.uleb128 0xe
 555 000b 55       		.uleb128 0x55
 556 000c 17       		.uleb128 0x17
 557 000d 11       		.uleb128 0x11
 558 000e 01       		.uleb128 0x1
 559 000f 10       		.uleb128 0x10
 560 0010 17       		.uleb128 0x17
 561 0011 00       		.byte	0
 562 0012 00       		.byte	0
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccJpclXm.s 			page 15


 563 0013 02       		.uleb128 0x2
 564 0014 24       		.uleb128 0x24
 565 0015 00       		.byte	0
 566 0016 0B       		.uleb128 0xb
 567 0017 0B       		.uleb128 0xb
 568 0018 3E       		.uleb128 0x3e
 569 0019 0B       		.uleb128 0xb
 570 001a 03       		.uleb128 0x3
 571 001b 0E       		.uleb128 0xe
 572 001c 00       		.byte	0
 573 001d 00       		.byte	0
 574 001e 03       		.uleb128 0x3
 575 001f 16       		.uleb128 0x16
 576 0020 00       		.byte	0
 577 0021 03       		.uleb128 0x3
 578 0022 0E       		.uleb128 0xe
 579 0023 3A       		.uleb128 0x3a
 580 0024 0B       		.uleb128 0xb
 581 0025 3B       		.uleb128 0x3b
 582 0026 0B       		.uleb128 0xb
 583 0027 49       		.uleb128 0x49
 584 0028 13       		.uleb128 0x13
 585 0029 00       		.byte	0
 586 002a 00       		.byte	0
 587 002b 04       		.uleb128 0x4
 588 002c 24       		.uleb128 0x24
 589 002d 00       		.byte	0
 590 002e 0B       		.uleb128 0xb
 591 002f 0B       		.uleb128 0xb
 592 0030 3E       		.uleb128 0x3e
 593 0031 0B       		.uleb128 0xb
 594 0032 03       		.uleb128 0x3
 595 0033 08       		.uleb128 0x8
 596 0034 00       		.byte	0
 597 0035 00       		.byte	0
 598 0036 05       		.uleb128 0x5
 599 0037 16       		.uleb128 0x16
 600 0038 00       		.byte	0
 601 0039 03       		.uleb128 0x3
 602 003a 0E       		.uleb128 0xe
 603 003b 3A       		.uleb128 0x3a
 604 003c 0B       		.uleb128 0xb
 605 003d 3B       		.uleb128 0x3b
 606 003e 05       		.uleb128 0x5
 607 003f 49       		.uleb128 0x49
 608 0040 13       		.uleb128 0x13
 609 0041 00       		.byte	0
 610 0042 00       		.byte	0
 611 0043 06       		.uleb128 0x6
 612 0044 2E       		.uleb128 0x2e
 613 0045 01       		.byte	0x1
 614 0046 3F       		.uleb128 0x3f
 615 0047 19       		.uleb128 0x19
 616 0048 03       		.uleb128 0x3
 617 0049 0E       		.uleb128 0xe
 618 004a 3A       		.uleb128 0x3a
 619 004b 0B       		.uleb128 0xb
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccJpclXm.s 			page 16


 620 004c 3B       		.uleb128 0x3b
 621 004d 0B       		.uleb128 0xb
 622 004e 49       		.uleb128 0x49
 623 004f 13       		.uleb128 0x13
 624 0050 11       		.uleb128 0x11
 625 0051 01       		.uleb128 0x1
 626 0052 12       		.uleb128 0x12
 627 0053 06       		.uleb128 0x6
 628 0054 40       		.uleb128 0x40
 629 0055 18       		.uleb128 0x18
 630 0056 9642     		.uleb128 0x2116
 631 0058 19       		.uleb128 0x19
 632 0059 01       		.uleb128 0x1
 633 005a 13       		.uleb128 0x13
 634 005b 00       		.byte	0
 635 005c 00       		.byte	0
 636 005d 07       		.uleb128 0x7
 637 005e 34       		.uleb128 0x34
 638 005f 00       		.byte	0
 639 0060 03       		.uleb128 0x3
 640 0061 0E       		.uleb128 0xe
 641 0062 3A       		.uleb128 0x3a
 642 0063 0B       		.uleb128 0xb
 643 0064 3B       		.uleb128 0x3b
 644 0065 0B       		.uleb128 0xb
 645 0066 49       		.uleb128 0x49
 646 0067 13       		.uleb128 0x13
 647 0068 02       		.uleb128 0x2
 648 0069 18       		.uleb128 0x18
 649 006a 00       		.byte	0
 650 006b 00       		.byte	0
 651 006c 08       		.uleb128 0x8
 652 006d 34       		.uleb128 0x34
 653 006e 00       		.byte	0
 654 006f 03       		.uleb128 0x3
 655 0070 0E       		.uleb128 0xe
 656 0071 3A       		.uleb128 0x3a
 657 0072 0B       		.uleb128 0xb
 658 0073 3B       		.uleb128 0x3b
 659 0074 0B       		.uleb128 0xb
 660 0075 49       		.uleb128 0x49
 661 0076 13       		.uleb128 0x13
 662 0077 00       		.byte	0
 663 0078 00       		.byte	0
 664 0079 09       		.uleb128 0x9
 665 007a 0B       		.uleb128 0xb
 666 007b 01       		.byte	0x1
 667 007c 11       		.uleb128 0x11
 668 007d 01       		.uleb128 0x1
 669 007e 12       		.uleb128 0x12
 670 007f 06       		.uleb128 0x6
 671 0080 00       		.byte	0
 672 0081 00       		.byte	0
 673 0082 0A       		.uleb128 0xa
 674 0083 2E       		.uleb128 0x2e
 675 0084 01       		.byte	0x1
 676 0085 3F       		.uleb128 0x3f
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccJpclXm.s 			page 17


 677 0086 19       		.uleb128 0x19
 678 0087 03       		.uleb128 0x3
 679 0088 0E       		.uleb128 0xe
 680 0089 3A       		.uleb128 0x3a
 681 008a 0B       		.uleb128 0xb
 682 008b 3B       		.uleb128 0x3b
 683 008c 0B       		.uleb128 0xb
 684 008d 49       		.uleb128 0x49
 685 008e 13       		.uleb128 0x13
 686 008f 3C       		.uleb128 0x3c
 687 0090 19       		.uleb128 0x19
 688 0091 00       		.byte	0
 689 0092 00       		.byte	0
 690 0093 0B       		.uleb128 0xb
 691 0094 18       		.uleb128 0x18
 692 0095 00       		.byte	0
 693 0096 00       		.byte	0
 694 0097 00       		.byte	0
 695 0098 0C       		.uleb128 0xc
 696 0099 01       		.uleb128 0x1
 697 009a 01       		.byte	0x1
 698 009b 49       		.uleb128 0x49
 699 009c 13       		.uleb128 0x13
 700 009d 01       		.uleb128 0x1
 701 009e 13       		.uleb128 0x13
 702 009f 00       		.byte	0
 703 00a0 00       		.byte	0
 704 00a1 0D       		.uleb128 0xd
 705 00a2 21       		.uleb128 0x21
 706 00a3 00       		.byte	0
 707 00a4 49       		.uleb128 0x49
 708 00a5 13       		.uleb128 0x13
 709 00a6 2F       		.uleb128 0x2f
 710 00a7 0B       		.uleb128 0xb
 711 00a8 00       		.byte	0
 712 00a9 00       		.byte	0
 713 00aa 0E       		.uleb128 0xe
 714 00ab 34       		.uleb128 0x34
 715 00ac 00       		.byte	0
 716 00ad 03       		.uleb128 0x3
 717 00ae 0E       		.uleb128 0xe
 718 00af 3A       		.uleb128 0x3a
 719 00b0 0B       		.uleb128 0xb
 720 00b1 3B       		.uleb128 0x3b
 721 00b2 05       		.uleb128 0x5
 722 00b3 49       		.uleb128 0x49
 723 00b4 13       		.uleb128 0x13
 724 00b5 3F       		.uleb128 0x3f
 725 00b6 19       		.uleb128 0x19
 726 00b7 3C       		.uleb128 0x3c
 727 00b8 19       		.uleb128 0x19
 728 00b9 00       		.byte	0
 729 00ba 00       		.byte	0
 730 00bb 0F       		.uleb128 0xf
 731 00bc 35       		.uleb128 0x35
 732 00bd 00       		.byte	0
 733 00be 49       		.uleb128 0x49
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccJpclXm.s 			page 18


 734 00bf 13       		.uleb128 0x13
 735 00c0 00       		.byte	0
 736 00c1 00       		.byte	0
 737 00c2 10       		.uleb128 0x10
 738 00c3 0F       		.uleb128 0xf
 739 00c4 00       		.byte	0
 740 00c5 0B       		.uleb128 0xb
 741 00c6 0B       		.uleb128 0xb
 742 00c7 49       		.uleb128 0x49
 743 00c8 13       		.uleb128 0x13
 744 00c9 00       		.byte	0
 745 00ca 00       		.byte	0
 746 00cb 11       		.uleb128 0x11
 747 00cc 34       		.uleb128 0x34
 748 00cd 00       		.byte	0
 749 00ce 03       		.uleb128 0x3
 750 00cf 0E       		.uleb128 0xe
 751 00d0 3A       		.uleb128 0x3a
 752 00d1 0B       		.uleb128 0xb
 753 00d2 3B       		.uleb128 0x3b
 754 00d3 0B       		.uleb128 0xb
 755 00d4 49       		.uleb128 0x49
 756 00d5 13       		.uleb128 0x13
 757 00d6 3F       		.uleb128 0x3f
 758 00d7 19       		.uleb128 0x19
 759 00d8 02       		.uleb128 0x2
 760 00d9 18       		.uleb128 0x18
 761 00da 00       		.byte	0
 762 00db 00       		.byte	0
 763 00dc 12       		.uleb128 0x12
 764 00dd 34       		.uleb128 0x34
 765 00de 00       		.byte	0
 766 00df 03       		.uleb128 0x3
 767 00e0 08       		.uleb128 0x8
 768 00e1 3A       		.uleb128 0x3a
 769 00e2 0B       		.uleb128 0xb
 770 00e3 3B       		.uleb128 0x3b
 771 00e4 0B       		.uleb128 0xb
 772 00e5 49       		.uleb128 0x49
 773 00e6 13       		.uleb128 0x13
 774 00e7 3F       		.uleb128 0x3f
 775 00e8 19       		.uleb128 0x19
 776 00e9 02       		.uleb128 0x2
 777 00ea 18       		.uleb128 0x18
 778 00eb 00       		.byte	0
 779 00ec 00       		.byte	0
 780 00ed 00       		.byte	0
 781              		.section	.debug_aranges,"",%progbits
 782 0000 1C000000 		.4byte	0x1c
 783 0004 0200     		.2byte	0x2
 784 0006 00000000 		.4byte	.Ldebug_info0
 785 000a 04       		.byte	0x4
 786 000b 00       		.byte	0
 787 000c 0000     		.2byte	0
 788 000e 0000     		.2byte	0
 789 0010 00000000 		.4byte	.LFB64
 790 0014 6C010000 		.4byte	.LFE64-.LFB64
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccJpclXm.s 			page 19


 791 0018 00000000 		.4byte	0
 792 001c 00000000 		.4byte	0
 793              		.section	.debug_ranges,"",%progbits
 794              	.Ldebug_ranges0:
 795 0000 00000000 		.4byte	.LFB64
 796 0004 6C010000 		.4byte	.LFE64
 797 0008 00000000 		.4byte	0
 798 000c 00000000 		.4byte	0
 799              		.section	.debug_line,"",%progbits
 800              	.Ldebug_line0:
 801 0000 9F010000 		.section	.debug_str,"MS",%progbits,1
 801      02004C01 
 801      00000201 
 801      FB0E0D00 
 801      01010101 
 802              	.LASF27:
 803 0000 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 803      43313120 
 803      352E342E 
 803      31203230 
 803      31363036 
 804 0033 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 804      20726576 
 804      6973696F 
 804      6E203233 
 804      37373135 
 805 0066 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 805      66756E63 
 805      74696F6E 
 805      2D736563 
 805      74696F6E 
 806              	.LASF31:
 807 008e 73746174 		.ascii	"state\000"
 807      6500
 808              	.LASF9:
 809 0094 5F5F696E 		.ascii	"__int32_t\000"
 809      7433325F 
 809      7400
 810              	.LASF32:
 811 009e 61746F69 		.ascii	"atoi\000"
 811      00
 812              	.LASF13:
 813 00a3 666C6F61 		.ascii	"float\000"
 813      7400
 814              	.LASF21:
 815 00a9 64617461 		.ascii	"data\000"
 815      00
 816              	.LASF1:
 817 00ae 756E7369 		.ascii	"unsigned char\000"
 817      676E6564 
 817      20636861 
 817      7200
 818              	.LASF15:
 819 00bc 63686172 		.ascii	"char8\000"
 819      3800
 820              	.LASF5:
 821 00c2 6C6F6E67 		.ascii	"long unsigned int\000"
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccJpclXm.s 			page 20


 821      20756E73 
 821      69676E65 
 821      6420696E 
 821      7400
 822              	.LASF3:
 823 00d4 73686F72 		.ascii	"short unsigned int\000"
 823      7420756E 
 823      7369676E 
 823      65642069 
 823      6E7400
 824              	.LASF26:
 825 00e7 73746F70 		.ascii	"stop\000"
 825      00
 826              	.LASF24:
 827 00ec 49544D5F 		.ascii	"ITM_RxBuffer\000"
 827      52784275 
 827      66666572 
 827      00
 828              	.LASF14:
 829 00f9 646F7562 		.ascii	"double\000"
 829      6C6500
 830              	.LASF30:
 831 0100 6D61696E 		.ascii	"main\000"
 831      00
 832              	.LASF12:
 833 0105 75696E74 		.ascii	"uint16\000"
 833      313600
 834              	.LASF8:
 835 010c 756E7369 		.ascii	"unsigned int\000"
 835      676E6564 
 835      20696E74 
 835      00
 836              	.LASF7:
 837 0119 6C6F6E67 		.ascii	"long long unsigned int\000"
 837      206C6F6E 
 837      6720756E 
 837      7369676E 
 837      65642069 
 838              	.LASF29:
 839 0130 433A5C55 		.ascii	"C:\\Users\\sdysart\\Documents\\UACS\\UACS\\HighFreq"
 839      73657273 
 839      5C736479 
 839      73617274 
 839      5C446F63 
 840 015d 46534B5C 		.ascii	"FSK\\USBFS_UART01.cydsn\000"
 840      55534246 
 840      535F5541 
 840      52543031 
 840      2E637964 
 841              	.LASF10:
 842 0174 696E7433 		.ascii	"int32_t\000"
 842      325F7400 
 843              	.LASF18:
 844 017c 73697A65 		.ascii	"sizetype\000"
 844      74797065 
 844      00
 845              	.LASF6:
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccJpclXm.s 			page 21


 846 0185 6C6F6E67 		.ascii	"long long int\000"
 846      206C6F6E 
 846      6720696E 
 846      7400
 847              	.LASF28:
 848 0193 6D61696E 		.ascii	"main.c\000"
 848      2E6300
 849              	.LASF16:
 850 019a 63686172 		.ascii	"char\000"
 850      00
 851              	.LASF22:
 852 019f 666C6167 		.ascii	"flag0\000"
 852      3000
 853              	.LASF19:
 854 01a5 636F756E 		.ascii	"count\000"
 854      7400
 855              	.LASF2:
 856 01ab 73686F72 		.ascii	"short int\000"
 856      7420696E 
 856      7400
 857              	.LASF20:
 858 01b5 62756666 		.ascii	"buffer\000"
 858      657200
 859              	.LASF11:
 860 01bc 75696E74 		.ascii	"uint8\000"
 860      3800
 861              	.LASF4:
 862 01c2 6C6F6E67 		.ascii	"long int\000"
 862      20696E74 
 862      00
 863              	.LASF17:
 864 01cb 6C6F6E67 		.ascii	"long double\000"
 864      20646F75 
 864      626C6500 
 865              	.LASF0:
 866 01d7 7369676E 		.ascii	"signed char\000"
 866      65642063 
 866      68617200 
 867              	.LASF25:
 868 01e3 70617269 		.ascii	"parity\000"
 868      747900
 869              	.LASF23:
 870 01ea 6C696E65 		.ascii	"lineStr\000"
 870      53747200 
 871              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
