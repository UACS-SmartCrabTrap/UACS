ARM GAS  C:\Users\sdysart\AppData\Local\Temp\cct6b5Fj.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.syntax unified
  20              		.global _printf_float
  21              		.thumb
  22              		.syntax unified
  23              		.global	parity
  24              		.section	.rodata
  25              		.align	2
  26              	.LC0:
  27 0000 4E6F6E65 		.ascii	"None\000"
  27      00
  28 0005 000000   		.align	2
  29              	.LC1:
  30 0008 4F646400 		.ascii	"Odd\000"
  31              		.align	2
  32              	.LC2:
  33 000c 4576656E 		.ascii	"Even\000"
  33      00
  34 0011 000000   		.align	2
  35              	.LC3:
  36 0014 4D61726B 		.ascii	"Mark\000"
  36      00
  37 0019 000000   		.align	2
  38              	.LC4:
  39 001c 53706163 		.ascii	"Space\000"
  39      6500
  40              		.data
  41              		.align	2
  42              		.type	parity, %object
  43              		.size	parity, 20
  44              	parity:
  45 0000 00000000 		.word	.LC0
  46 0004 08000000 		.word	.LC1
  47 0008 0C000000 		.word	.LC2
  48 000c 14000000 		.word	.LC3
  49 0010 1C000000 		.word	.LC4
  50              		.global	stop
  51              		.section	.rodata
  52 0022 0000     		.align	2
  53              	.LC5:
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\cct6b5Fj.s 			page 2


  54 0024 3100     		.ascii	"1\000"
  55 0026 0000     		.align	2
  56              	.LC6:
  57 0028 312E3500 		.ascii	"1.5\000"
  58              		.align	2
  59              	.LC7:
  60 002c 3200     		.ascii	"2\000"
  61              		.data
  62              		.align	2
  63              		.type	stop, %object
  64              		.size	stop, 12
  65              	stop:
  66 0014 24000000 		.word	.LC5
  67 0018 28000000 		.word	.LC6
  68 001c 2C000000 		.word	.LC7
  69              		.global	prompt
  70              		.align	2
  71              		.type	prompt, %object
  72              		.size	prompt, 4
  73              	prompt:
  74 0020 01000000 		.word	1
  75              		.global	endFlag
  76              		.bss
  77              		.align	2
  78              		.type	endFlag, %object
  79              		.size	endFlag, 4
  80              	endFlag:
  81 0000 00000000 		.space	4
  82              		.global	oneDigit
  83              		.align	2
  84              		.type	oneDigit, %object
  85              		.size	oneDigit, 4
  86              	oneDigit:
  87 0004 00000000 		.space	4
  88              		.global	twoDigit
  89              		.align	2
  90              		.type	twoDigit, %object
  91              		.size	twoDigit, 4
  92              	twoDigit:
  93 0008 00000000 		.space	4
  94              		.global	error
  95              		.align	2
  96              		.type	error, %object
  97              		.size	error, 4
  98              	error:
  99 000c 00000000 		.space	4
 100              		.global	i
 101              		.data
 102              		.align	2
 103              		.type	i, %object
 104              		.size	i, 4
 105              	i:
 106 0024 02000000 		.word	2
 107              		.comm	count,2,2
 108              		.comm	lineStr,20,4
 109              		.comm	buffer,64,4
 110              		.global	data
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\cct6b5Fj.s 			page 3


 111              		.bss
 112              		.align	2
 113              		.type	data, %object
 114              		.size	data, 3
 115              	data:
 116 0010 000000   		.space	3
 117              		.section	.rodata
 118 002e 0000     		.align	2
 119              	.LC8:
 120 0030 20202020 		.ascii	"                    \000"
 120      20202020 
 120      20202020 
 120      20202020 
 120      20202020 
 121 0045 000000   		.align	2
 122              	.LC9:
 123 0048 48656C6C 		.ascii	"Hello\000"
 123      6F00
 124              		.section	.text.main,"ax",%progbits
 125              		.align	2
 126              		.global	main
 127              		.thumb
 128              		.thumb_func
 129              		.type	main, %function
 130              	main:
 131              	.LFB64:
 132              		.file 1 "main.c"
   1:main.c        **** /*******************************************************************************
   2:main.c        **** * File Name: main.c
   3:main.c        **** * Editer: Stephanie Salazar
   4:main.c        **** * Revision: 5/14/18
   5:main.c        **** *
   6:main.c        **** * Description:
   7:main.c        **** *   The component is enumerated as a Virtual Com port. Receives data from the 
   8:main.c        **** *   hyper terminal, then sends back the received data.
   9:main.c        **** *   The LCD Display shows the number of crabs sent
  10:main.c        **** */
  11:main.c        **** 
  12:main.c        **** 
  13:main.c        **** #include <project.h>
  14:main.c        **** #include "stdio.h"
  15:main.c        **** #include "stdlib.h"
  16:main.c        **** 
  17:main.c        **** #if defined (__GNUC__)
  18:main.c        ****     /* Add an explicit reference to the floating point printf library */
  19:main.c        ****     /* to allow usage of the floating point conversion specifiers. */
  20:main.c        ****     /* This is not linked in by default with the newlib-nano library. */
  21:main.c        ****     asm (".global _printf_float");
  22:main.c        **** #endif
  23:main.c        **** 
  24:main.c        **** #define USBFS_DEVICE    (0u)
  25:main.c        **** 
  26:main.c        **** /* The buffer size is equal to the maximum packet size of the IN and OUT bulk
  27:main.c        **** * endpoints.
  28:main.c        **** */
  29:main.c        **** #define USBUART_BUFFER_SIZE (64u)
  30:main.c        **** #define LINE_STR_LENGTH     (20u)
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\cct6b5Fj.s 			page 4


  31:main.c        **** #define DATA_SIZE           (7u)
  32:main.c        **** #define ERROR               (333u)
  33:main.c        **** 
  34:main.c        **** /*Function Prototypes*/
  35:main.c        **** int GetCrabs(void);
  36:main.c        **** int CalculateCrabs(void);
  37:main.c        **** void DisplayCrabs(int);
  38:main.c        **** 
  39:main.c        **** char8* parity[] = {"None", "Odd", "Even", "Mark", "Space"};
  40:main.c        **** char8* stop[]   = {"1", "1.5", "2"};
  41:main.c        **** int prompt = 1;
  42:main.c        **** int endFlag = 0;
  43:main.c        **** int oneDigit = 0;
  44:main.c        **** int twoDigit = 0;
  45:main.c        **** int error = 0;
  46:main.c        **** int i = 2; // to iterate through data array
  47:main.c        **** uint16 count;
  48:main.c        **** char8 lineStr[LINE_STR_LENGTH];
  49:main.c        **** uint8 buffer[USBUART_BUFFER_SIZE];
  50:main.c        **** uint8 data[3] = {0};
  51:main.c        **** 
  52:main.c        **** 
  53:main.c        **** 
  54:main.c        **** /*******************************************************************************
  55:main.c        **** * Function Name: main
  56:main.c        **** ********************************************************************************
  57:main.c        **** *
  58:main.c        **** * Summary:
  59:main.c        **** *  The main function performs the following actions:
  60:main.c        **** *   1. Waits until VBUS becomes valid and starts the USBFS component which is
  61:main.c        **** *      enumerated as virtual Com port.
  62:main.c        **** *   2. Waits until the device is enumerated by the host.
  63:main.c        **** *   3. Waits for data coming from the hyper terminal and sends it back.
  64:main.c        **** *   4. PSoC3/PSoC5LP: the LCD shows the line settings.
  65:main.c        **** *
  66:main.c        **** * Parameters:
  67:main.c        **** *  None.
  68:main.c        **** *
  69:main.c        **** * Return:
  70:main.c        **** *  None.
  71:main.c        **** *
  72:main.c        **** *******************************************************************************/
  73:main.c        **** int main()
  74:main.c        **** {
 133              		.loc 1 74 0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 8
 136              		@ frame_needed = 1, uses_anonymous_args = 0
 137 0000 80B5     		push	{r7, lr}
 138              		.cfi_def_cfa_offset 8
 139              		.cfi_offset 7, -8
 140              		.cfi_offset 14, -4
 141 0002 82B0     		sub	sp, sp, #8
 142              		.cfi_def_cfa_offset 16
 143 0004 00AF     		add	r7, sp, #0
 144              		.cfi_def_cfa_register 7
  75:main.c        ****     int crabs = 0;
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\cct6b5Fj.s 			page 5


 145              		.loc 1 75 0
 146 0006 0023     		movs	r3, #0
 147 0008 3B60     		str	r3, [r7]
  76:main.c        ****     int gettingData = 1;
 148              		.loc 1 76 0
 149 000a 0123     		movs	r3, #1
 150 000c 7B60     		str	r3, [r7, #4]
  77:main.c        ****     /* Initialize LCD Screen */
  78:main.c        ****     LCD_Start();
 151              		.loc 1 78 0
 152 000e FFF7FEFF 		bl	LCD_Start
  79:main.c        **** 
  80:main.c        ****     
  81:main.c        ****     CyGlobalIntEnable;
 153              		.loc 1 81 0
 154              		.syntax unified
 155              	@ 81 "main.c" 1
 156 0012 62B6     		CPSIE   i
 157              	@ 0 "" 2
  82:main.c        **** 
  83:main.c        ****     /* Start USBFS operation with 5-V operation. */
  84:main.c        ****     USBUART_Start(USBFS_DEVICE, USBUART_5V_OPERATION);
 158              		.loc 1 84 0
 159              		.thumb
 160              		.syntax unified
 161 0014 0121     		movs	r1, #1
 162 0016 0020     		movs	r0, #0
 163 0018 FFF7FEFF 		bl	USBUART_Start
  85:main.c        **** 
  86:main.c        ****     /* Clear LCD line. */
  87:main.c        ****     LCD_Position(0u, 0u);
 164              		.loc 1 87 0
 165 001c 0021     		movs	r1, #0
 166 001e 0020     		movs	r0, #0
 167 0020 FFF7FEFF 		bl	LCD_Position
  88:main.c        ****     LCD_PrintString("                    ");
 168              		.loc 1 88 0
 169 0024 1048     		ldr	r0, .L6
 170 0026 FFF7FEFF 		bl	LCD_PrintString
  89:main.c        **** 
  90:main.c        ****     /* Output string on LCD. */
  91:main.c        ****     LCD_Position(0u, 0u);
 171              		.loc 1 91 0
 172 002a 0021     		movs	r1, #0
 173 002c 0020     		movs	r0, #0
 174 002e FFF7FEFF 		bl	LCD_Position
  92:main.c        ****     LCD_PrintString("Hello");
 175              		.loc 1 92 0
 176 0032 0E48     		ldr	r0, .L6+4
 177 0034 FFF7FEFF 		bl	LCD_PrintString
 178              	.L5:
  93:main.c        ****     
  94:main.c        ****    
  95:main.c        ****     for(;;)
  96:main.c        ****     {
  97:main.c        ****        /* Start UART interface and fill array with 3 parameters until valid */
  98:main.c        ****        while(gettingData){
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\cct6b5Fj.s 			page 6


 179              		.loc 1 98 0 discriminator 1
 180 0038 12E0     		b	.L2
 181              	.L4:
  99:main.c        ****             while(0u == GetCrabs()){
 182              		.loc 1 99 0
 183 003a 00BF     		nop
 184              	.L3:
 185              		.loc 1 99 0 is_stmt 0 discriminator 1
 186 003c FFF7FEFF 		bl	GetCrabs
 187 0040 0346     		mov	r3, r0
 188 0042 002B     		cmp	r3, #0
 189 0044 FAD0     		beq	.L3
 100:main.c        ****             };
 101:main.c        ****             crabs = CalculateCrabs();
 190              		.loc 1 101 0 is_stmt 1
 191 0046 FFF7FEFF 		bl	CalculateCrabs
 192 004a 3860     		str	r0, [r7]
 102:main.c        ****             if(crabs != ERROR){
 193              		.loc 1 102 0
 194 004c 3B68     		ldr	r3, [r7]
 195 004e 40F24D12 		movw	r2, #333
 196 0052 9342     		cmp	r3, r2
 197 0054 04D0     		beq	.L2
 103:main.c        ****                 DisplayCrabs(crabs);
 198              		.loc 1 103 0
 199 0056 3868     		ldr	r0, [r7]
 200 0058 FFF7FEFF 		bl	DisplayCrabs
 104:main.c        ****                 gettingData = 0;
 201              		.loc 1 104 0
 202 005c 0023     		movs	r3, #0
 203 005e 7B60     		str	r3, [r7, #4]
 204              	.L2:
  98:main.c        ****             while(0u == GetCrabs()){
 205              		.loc 1 98 0
 206 0060 7B68     		ldr	r3, [r7, #4]
 207 0062 002B     		cmp	r3, #0
 208 0064 E9D1     		bne	.L4
 105:main.c        ****             }
 106:main.c        ****         }   
 107:main.c        ****        
 108:main.c        ****     } // end for(;;)
 209              		.loc 1 108 0
 210 0066 E7E7     		b	.L5
 211              	.L7:
 212              		.align	2
 213              	.L6:
 214 0068 30000000 		.word	.LC8
 215 006c 48000000 		.word	.LC9
 216              		.cfi_endproc
 217              	.LFE64:
 218              		.size	main, .-main
 219              		.section	.rodata
 220 004e 0000     		.align	2
 221              	.LC10:
 222 0050 48656C6C 		.ascii	"Hello. Please enter amount of crabs (up to 127). Te"
 222      6F2E2050 
 222      6C656173 
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\cct6b5Fj.s 			page 7


 222      6520656E 
 222      74657220 
 223 0083 726D696E 		.ascii	"rminates with carriage return or third character. A"
 223      61746573 
 223      20776974 
 223      68206361 
 223      72726961 
 224 00b6 6E79206E 		.ascii	"ny non-integer will be interpreted as a 0.\000"
 224      6F6E2D69 
 224      6E746567 
 224      65722077 
 224      696C6C20 
 225 00e1 000000   		.align	2
 226              	.LC11:
 227 00e4 3000     		.ascii	"0\000"
 228 00e6 0000     		.align	2
 229              	.LC12:
 230 00e8 0D00     		.ascii	"\015\000"
 231              		.section	.text.GetCrabs,"ax",%progbits
 232              		.align	2
 233              		.global	GetCrabs
 234              		.thumb
 235              		.thumb_func
 236              		.type	GetCrabs, %function
 237              	GetCrabs:
 238              	.LFB65:
 109:main.c        **** } // end main
 110:main.c        **** 
 111:main.c        **** 
 112:main.c        **** /*
 113:main.c        ****  * function: int GetCrabs()
 114:main.c        ****  * parameters: hex_value - an 8 bit (1 byte) value specifying what data you want to send
 115:main.c        ****  *             bT - the current bit time
 116:main.c        ****  * returns: bitCase - a high or low signal to be sent to an output pin
 117:main.c        ****  * description: This function starts UART interface and waits for a valid amount of crabs
 118:main.c        ****  * entered by user
 119:main.c        ****  */
 120:main.c        **** int GetCrabs()
 121:main.c        **** {
 239              		.loc 1 121 0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 8
 242              		@ frame_needed = 1, uses_anonymous_args = 0
 243 0000 90B5     		push	{r4, r7, lr}
 244              		.cfi_def_cfa_offset 12
 245              		.cfi_offset 4, -12
 246              		.cfi_offset 7, -8
 247              		.cfi_offset 14, -4
 248 0002 83B0     		sub	sp, sp, #12
 249              		.cfi_def_cfa_offset 24
 250 0004 00AF     		add	r7, sp, #0
 251              		.cfi_def_cfa_register 7
 122:main.c        ****     uint16 crabs = 0;
 252              		.loc 1 122 0
 253 0006 0023     		movs	r3, #0
 254 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 123:main.c        ****     /* Host can send double SET_INTERFACE request. */
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\cct6b5Fj.s 			page 8


 124:main.c        ****     if (0u != USBUART_IsConfigurationChanged())
 255              		.loc 1 124 0
 256 000a FFF7FEFF 		bl	USBUART_IsConfigurationChanged
 257 000e 0346     		mov	r3, r0
 258 0010 002B     		cmp	r3, #0
 259 0012 06D0     		beq	.L9
 125:main.c        ****     {
 126:main.c        ****         /* Initialize IN endpoints when device is configured. */
 127:main.c        ****         if (0u != USBUART_GetConfiguration())
 260              		.loc 1 127 0
 261 0014 FFF7FEFF 		bl	USBUART_GetConfiguration
 262 0018 0346     		mov	r3, r0
 263 001a 002B     		cmp	r3, #0
 264 001c 01D0     		beq	.L9
 128:main.c        ****         {
 129:main.c        ****             /* Enumeration is done, enable OUT endpoint to receive data 
 130:main.c        ****             * from host. */
 131:main.c        ****             USBUART_CDC_Init();
 265              		.loc 1 131 0
 266 001e FFF7FEFF 		bl	USBUART_CDC_Init
 267              	.L9:
 132:main.c        ****             }
 133:main.c        ****         }
 134:main.c        ****         
 135:main.c        ****         /* Service USB CDC when device is configured. */
 136:main.c        ****         if (0u != USBUART_GetConfiguration())
 268              		.loc 1 136 0
 269 0022 FFF7FEFF 		bl	USBUART_GetConfiguration
 270 0026 0346     		mov	r3, r0
 271 0028 002B     		cmp	r3, #0
 272 002a 77D0     		beq	.L10
 137:main.c        ****         {
 138:main.c        ****             /* Wait until component is ready to send data to host. */
 139:main.c        ****             while (0u == USBUART_CDCIsReady())
 273              		.loc 1 139 0
 274 002c 00BF     		nop
 275              	.L11:
 276              		.loc 1 139 0 is_stmt 0 discriminator 1
 277 002e FFF7FEFF 		bl	USBUART_CDCIsReady
 278 0032 0346     		mov	r3, r0
 279 0034 002B     		cmp	r3, #0
 280 0036 FAD0     		beq	.L11
 140:main.c        ****                 {
 141:main.c        ****                 }
 142:main.c        ****                 if(prompt == 1){
 281              		.loc 1 142 0 is_stmt 1
 282 0038 3E4B     		ldr	r3, .L26
 283 003a 1B68     		ldr	r3, [r3]
 284 003c 012B     		cmp	r3, #1
 285 003e 02D1     		bne	.L25
 143:main.c        ****                     USBUART_PutString("Hello. Please enter amount of crabs (up to 127). Terminates 
 286              		.loc 1 143 0
 287 0040 3D48     		ldr	r0, .L26+4
 288 0042 FFF7FEFF 		bl	USBUART_PutString
 289              	.L25:
 144:main.c        ****                 }
 145:main.c        ****             /* Wait until component is ready to send data to host. */
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\cct6b5Fj.s 			page 9


 146:main.c        ****             while (0u == USBUART_CDCIsReady())
 290              		.loc 1 146 0
 291 0046 00BF     		nop
 292              	.L13:
 293              		.loc 1 146 0 is_stmt 0 discriminator 1
 294 0048 FFF7FEFF 		bl	USBUART_CDCIsReady
 295 004c 0346     		mov	r3, r0
 296 004e 002B     		cmp	r3, #0
 297 0050 FAD0     		beq	.L13
 147:main.c        ****                 {
 148:main.c        ****                 }
 149:main.c        ****                 if(prompt == 1){
 298              		.loc 1 149 0 is_stmt 1
 299 0052 384B     		ldr	r3, .L26
 300 0054 1B68     		ldr	r3, [r3]
 301 0056 012B     		cmp	r3, #1
 302 0058 04D1     		bne	.L14
 150:main.c        ****                     USBUART_PutCRLF();
 303              		.loc 1 150 0
 304 005a FFF7FEFF 		bl	USBUART_PutCRLF
 151:main.c        ****                     prompt = 0;
 305              		.loc 1 151 0
 306 005e 354B     		ldr	r3, .L26
 307 0060 0022     		movs	r2, #0
 308 0062 1A60     		str	r2, [r3]
 309              	.L14:
 152:main.c        ****                 }
 153:main.c        ****                 
 154:main.c        ****             /* Check for input data from host. */
 155:main.c        ****             if (0u != USBUART_DataIsReady())
 310              		.loc 1 155 0
 311 0064 FFF7FEFF 		bl	USBUART_DataIsReady
 312 0068 0346     		mov	r3, r0
 313 006a 002B     		cmp	r3, #0
 314 006c 56D0     		beq	.L10
 156:main.c        ****             {
 157:main.c        ****                 /* Read received data and re-enable OUT endpoint. */
 158:main.c        ****                 count = USBUART_GetAll(buffer);
 315              		.loc 1 158 0
 316 006e 3348     		ldr	r0, .L26+8
 317 0070 FFF7FEFF 		bl	USBUART_GetAll
 318 0074 0346     		mov	r3, r0
 319 0076 1A46     		mov	r2, r3
 320 0078 314B     		ldr	r3, .L26+12
 321 007a 1A80     		strh	r2, [r3]	@ movhi
 159:main.c        ****     
 160:main.c        ****                 if (strncmp (buffer,"0",1) == 0){
 161:main.c        ****                     //USBUART_PutString("True Zero");
 162:main.c        ****                 }
 163:main.c        ****                 if (strncmp (buffer,"\r",1) == 0){
 322              		.loc 1 163 0
 323 007c 2F4B     		ldr	r3, .L26+8
 324 007e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 325 0080 304B     		ldr	r3, .L26+16
 326 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 327 0084 9A42     		cmp	r2, r3
 328 0086 12D1     		bne	.L15
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\cct6b5Fj.s 			page 10


 164:main.c        ****                     //USBUART_PutString("Carriage Return");
 165:main.c        **** 
 166:main.c        ****                     if(i == 1){
 329              		.loc 1 166 0
 330 0088 2F4B     		ldr	r3, .L26+20
 331 008a 1B68     		ldr	r3, [r3]
 332 008c 012B     		cmp	r3, #1
 333 008e 03D1     		bne	.L16
 167:main.c        ****                         oneDigit = 1;
 334              		.loc 1 167 0
 335 0090 2E4B     		ldr	r3, .L26+24
 336 0092 0122     		movs	r2, #1
 337 0094 1A60     		str	r2, [r3]
 338 0096 06E0     		b	.L17
 339              	.L16:
 168:main.c        ****                     }else if(i == 0){
 340              		.loc 1 168 0
 341 0098 2B4B     		ldr	r3, .L26+20
 342 009a 1B68     		ldr	r3, [r3]
 343 009c 002B     		cmp	r3, #0
 344 009e 02D1     		bne	.L17
 169:main.c        ****                         twoDigit = 1;
 345              		.loc 1 169 0
 346 00a0 2B4B     		ldr	r3, .L26+28
 347 00a2 0122     		movs	r2, #1
 348 00a4 1A60     		str	r2, [r3]
 349              	.L17:
 170:main.c        ****                     }
 171:main.c        ****                     endFlag = 1; // set flag to add numbers
 350              		.loc 1 171 0
 351 00a6 2B4B     		ldr	r3, .L26+32
 352 00a8 0122     		movs	r2, #1
 353 00aa 1A60     		str	r2, [r3]
 354 00ac 08E0     		b	.L18
 355              	.L15:
 172:main.c        ****                 }else{
 173:main.c        ****                     // Convert string to int
 174:main.c        ****                     data[i] = (uint8)atoi(buffer);
 356              		.loc 1 174 0
 357 00ae 264B     		ldr	r3, .L26+20
 358 00b0 1C68     		ldr	r4, [r3]
 359 00b2 2248     		ldr	r0, .L26+8
 360 00b4 FFF7FEFF 		bl	atoi
 361 00b8 0346     		mov	r3, r0
 362 00ba DAB2     		uxtb	r2, r3
 363 00bc 264B     		ldr	r3, .L26+36
 364 00be 1A55     		strb	r2, [r3, r4]
 365              	.L18:
 175:main.c        ****                 }
 176:main.c        ****                 
 177:main.c        ****                 /* Make sure data array stays in bounds (size = 3) */
 178:main.c        ****                 if(i == 0){
 366              		.loc 1 178 0
 367 00c0 214B     		ldr	r3, .L26+20
 368 00c2 1B68     		ldr	r3, [r3]
 369 00c4 002B     		cmp	r3, #0
 370 00c6 06D1     		bne	.L19
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\cct6b5Fj.s 			page 11


 179:main.c        ****                     i = 2;
 371              		.loc 1 179 0
 372 00c8 1F4B     		ldr	r3, .L26+20
 373 00ca 0222     		movs	r2, #2
 374 00cc 1A60     		str	r2, [r3]
 180:main.c        ****                     endFlag = 1; // 3 characters have been entered
 375              		.loc 1 180 0
 376 00ce 214B     		ldr	r3, .L26+32
 377 00d0 0122     		movs	r2, #1
 378 00d2 1A60     		str	r2, [r3]
 379 00d4 04E0     		b	.L20
 380              	.L19:
 181:main.c        ****                 }else{
 182:main.c        ****                     i--;
 381              		.loc 1 182 0
 382 00d6 1C4B     		ldr	r3, .L26+20
 383 00d8 1B68     		ldr	r3, [r3]
 384 00da 013B     		subs	r3, r3, #1
 385 00dc 1A4A     		ldr	r2, .L26+20
 386 00de 1360     		str	r3, [r2]
 387              	.L20:
 183:main.c        ****                 }
 184:main.c        ****                 
 185:main.c        ****                  if (0u != count)
 388              		.loc 1 185 0
 389 00e0 174B     		ldr	r3, .L26+12
 390 00e2 1B88     		ldrh	r3, [r3]
 391 00e4 002B     		cmp	r3, #0
 392 00e6 19D0     		beq	.L10
 186:main.c        ****                 {
 187:main.c        ****                     /* Wait until component is ready to send data to host. */
 188:main.c        ****                     while (0u == USBUART_CDCIsReady())
 393              		.loc 1 188 0
 394 00e8 00BF     		nop
 395              	.L21:
 396              		.loc 1 188 0 is_stmt 0 discriminator 1
 397 00ea FFF7FEFF 		bl	USBUART_CDCIsReady
 398 00ee 0346     		mov	r3, r0
 399 00f0 002B     		cmp	r3, #0
 400 00f2 FAD0     		beq	.L21
 189:main.c        ****                     {
 190:main.c        ****                     }
 191:main.c        **** 
 192:main.c        ****                     /* Send data back to host. */
 193:main.c        ****                     USBUART_PutData(buffer, count);
 401              		.loc 1 193 0 is_stmt 1
 402 00f4 124B     		ldr	r3, .L26+12
 403 00f6 1B88     		ldrh	r3, [r3]
 404 00f8 1946     		mov	r1, r3
 405 00fa 1048     		ldr	r0, .L26+8
 406 00fc FFF7FEFF 		bl	USBUART_PutData
 194:main.c        **** 
 195:main.c        **** 
 196:main.c        ****                     /* If the last sent packet is exactly the maximum packet 
 197:main.c        ****                     *  size, it is followed by a zero-length packet to assure
 198:main.c        ****                     *  that the end of the segment is properly identified by 
 199:main.c        ****                     *  the terminal.
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\cct6b5Fj.s 			page 12


 200:main.c        ****                     */
 201:main.c        ****                     if (USBUART_BUFFER_SIZE == count)
 407              		.loc 1 201 0
 408 0100 0F4B     		ldr	r3, .L26+12
 409 0102 1B88     		ldrh	r3, [r3]
 410 0104 402B     		cmp	r3, #64
 411 0106 09D1     		bne	.L10
 202:main.c        ****                     {
 203:main.c        ****                         /* Wait until component is ready to send data to PC. */
 204:main.c        ****                         while (0u == USBUART_CDCIsReady())
 412              		.loc 1 204 0
 413 0108 00BF     		nop
 414              	.L22:
 415              		.loc 1 204 0 is_stmt 0 discriminator 1
 416 010a FFF7FEFF 		bl	USBUART_CDCIsReady
 417 010e 0346     		mov	r3, r0
 418 0110 002B     		cmp	r3, #0
 419 0112 FAD0     		beq	.L22
 205:main.c        ****                         {
 206:main.c        ****                         }
 207:main.c        **** 
 208:main.c        ****                         /* Send zero-length packet to PC. */
 209:main.c        ****                         USBUART_PutData(NULL, 0u);
 420              		.loc 1 209 0 is_stmt 1
 421 0114 0021     		movs	r1, #0
 422 0116 0020     		movs	r0, #0
 423 0118 FFF7FEFF 		bl	USBUART_PutData
 424              	.L10:
 210:main.c        ****                     }
 211:main.c        ****                 }
 212:main.c        ****             } // end (0u != USBUART_DataIsReady())
 213:main.c        ****         } // end (0u != USBUART_GetConfiguration())
 214:main.c        ****         if(endFlag == 1){
 425              		.loc 1 214 0
 426 011c 0D4B     		ldr	r3, .L26+32
 427 011e 1B68     		ldr	r3, [r3]
 428 0120 012B     		cmp	r3, #1
 429 0122 01D1     		bne	.L23
 215:main.c        ****             return 1;
 430              		.loc 1 215 0
 431 0124 0123     		movs	r3, #1
 432 0126 00E0     		b	.L24
 433              	.L23:
 216:main.c        ****         }else{
 217:main.c        ****             return 0;
 434              		.loc 1 217 0
 435 0128 0023     		movs	r3, #0
 436              	.L24:
 218:main.c        ****         }
 219:main.c        **** }//end Decode()
 437              		.loc 1 219 0
 438 012a 1846     		mov	r0, r3
 439 012c 0C37     		adds	r7, r7, #12
 440              		.cfi_def_cfa_offset 12
 441 012e BD46     		mov	sp, r7
 442              		.cfi_def_cfa_register 13
 443              		@ sp needed
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\cct6b5Fj.s 			page 13


 444 0130 90BD     		pop	{r4, r7, pc}
 445              	.L27:
 446 0132 00BF     		.align	2
 447              	.L26:
 448 0134 00000000 		.word	prompt
 449 0138 50000000 		.word	.LC10
 450 013c 00000000 		.word	buffer
 451 0140 00000000 		.word	count
 452 0144 E8000000 		.word	.LC12
 453 0148 00000000 		.word	i
 454 014c 00000000 		.word	oneDigit
 455 0150 00000000 		.word	twoDigit
 456 0154 00000000 		.word	endFlag
 457 0158 00000000 		.word	data
 458              		.cfi_endproc
 459              	.LFE65:
 460              		.size	GetCrabs, .-GetCrabs
 461              		.section	.rodata
 462 00ea 0000     		.align	2
 463              	.LC13:
 464 00ec 4572726F 		.ascii	"Error. Please enter a number UP TO 127\000"
 464      722E2050 
 464      6C656173 
 464      6520656E 
 464      74657220 
 465              		.section	.text.CalculateCrabs,"ax",%progbits
 466              		.align	2
 467              		.global	CalculateCrabs
 468              		.thumb
 469              		.thumb_func
 470              		.type	CalculateCrabs, %function
 471              	CalculateCrabs:
 472              	.LFB66:
 220:main.c        **** 
 221:main.c        **** /*
 222:main.c        ****  * function: int CalculateCrabs()
 223:main.c        ****  * parameters: none
 224:main.c        ****  * returns: int crabs - amount of crabs from user input 
 225:main.c        ****  * description: This function takes an array of size three and converts
 226:main.c        ****  * to a single number
 227:main.c        ****  */
 228:main.c        **** int CalculateCrabs()
 229:main.c        **** {
 473              		.loc 1 229 0
 474              		.cfi_startproc
 475              		@ args = 0, pretend = 0, frame = 8
 476              		@ frame_needed = 1, uses_anonymous_args = 0
 477 0000 80B5     		push	{r7, lr}
 478              		.cfi_def_cfa_offset 8
 479              		.cfi_offset 7, -8
 480              		.cfi_offset 14, -4
 481 0002 82B0     		sub	sp, sp, #8
 482              		.cfi_def_cfa_offset 16
 483 0004 00AF     		add	r7, sp, #0
 484              		.cfi_def_cfa_register 7
 230:main.c        ****     int crabs;
 231:main.c        ****     /* Wait until component is ready to send data to host. */
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\cct6b5Fj.s 			page 14


 232:main.c        ****     while (0u == USBUART_CDCIsReady())
 485              		.loc 1 232 0
 486 0006 00BF     		nop
 487              	.L29:
 488              		.loc 1 232 0 is_stmt 0 discriminator 1
 489 0008 FFF7FEFF 		bl	USBUART_CDCIsReady
 490 000c 0346     		mov	r3, r0
 491 000e 002B     		cmp	r3, #0
 492 0010 FAD0     		beq	.L29
 233:main.c        ****     {
 234:main.c        ****     }
 235:main.c        ****     USBUART_PutCRLF();
 493              		.loc 1 235 0 is_stmt 1
 494 0012 FFF7FEFF 		bl	USBUART_PutCRLF
 236:main.c        ****     /* Shift data if carriage return was pressed */
 237:main.c        ****     if(oneDigit == 1){
 495              		.loc 1 237 0
 496 0016 3E4B     		ldr	r3, .L37
 497 0018 1B68     		ldr	r3, [r3]
 498 001a 012B     		cmp	r3, #1
 499 001c 0AD1     		bne	.L30
 238:main.c        ****         //USBUART_PutString("one digit");
 239:main.c        ****         data[0] = data[2];
 500              		.loc 1 239 0
 501 001e 3D4B     		ldr	r3, .L37+4
 502 0020 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 503 0022 3C4B     		ldr	r3, .L37+4
 504 0024 1A70     		strb	r2, [r3]
 240:main.c        ****         data[2] = 0;
 505              		.loc 1 240 0
 506 0026 3B4B     		ldr	r3, .L37+4
 507 0028 0022     		movs	r2, #0
 508 002a 9A70     		strb	r2, [r3, #2]
 241:main.c        ****         oneDigit = 0;
 509              		.loc 1 241 0
 510 002c 384B     		ldr	r3, .L37
 511 002e 0022     		movs	r2, #0
 512 0030 1A60     		str	r2, [r3]
 513 0032 11E0     		b	.L31
 514              	.L30:
 242:main.c        ****     }else if(twoDigit == 1){
 515              		.loc 1 242 0
 516 0034 384B     		ldr	r3, .L37+8
 517 0036 1B68     		ldr	r3, [r3]
 518 0038 012B     		cmp	r3, #1
 519 003a 0DD1     		bne	.L31
 243:main.c        ****         //USBUART_PutString("two digits");
 244:main.c        ****         data[0] = data[1];
 520              		.loc 1 244 0
 521 003c 354B     		ldr	r3, .L37+4
 522 003e 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 523 0040 344B     		ldr	r3, .L37+4
 524 0042 1A70     		strb	r2, [r3]
 245:main.c        ****         data[1] = data[2];
 525              		.loc 1 245 0
 526 0044 334B     		ldr	r3, .L37+4
 527 0046 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\cct6b5Fj.s 			page 15


 528 0048 324B     		ldr	r3, .L37+4
 529 004a 5A70     		strb	r2, [r3, #1]
 246:main.c        ****         data[2] = 0;
 530              		.loc 1 246 0
 531 004c 314B     		ldr	r3, .L37+4
 532 004e 0022     		movs	r2, #0
 533 0050 9A70     		strb	r2, [r3, #2]
 247:main.c        ****         twoDigit = 0;
 534              		.loc 1 247 0
 535 0052 314B     		ldr	r3, .L37+8
 536 0054 0022     		movs	r2, #0
 537 0056 1A60     		str	r2, [r3]
 538              	.L31:
 248:main.c        ****     }
 249:main.c        ****     /* Apply digit place to integer */
 250:main.c        ****     data[0] = data[0] * 1;
 539              		.loc 1 250 0
 540 0058 2E4B     		ldr	r3, .L37+4
 541 005a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 542 005c 2D4B     		ldr	r3, .L37+4
 543 005e 1A70     		strb	r2, [r3]
 251:main.c        ****     data[1] = data[1] * 10;
 544              		.loc 1 251 0
 545 0060 2C4B     		ldr	r3, .L37+4
 546 0062 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 547 0064 1A46     		mov	r2, r3
 548 0066 9200     		lsls	r2, r2, #2
 549 0068 1344     		add	r3, r3, r2
 550 006a 5B00     		lsls	r3, r3, #1
 551 006c DAB2     		uxtb	r2, r3
 552 006e 294B     		ldr	r3, .L37+4
 553 0070 5A70     		strb	r2, [r3, #1]
 252:main.c        ****     data[2] = data[2] * 100;
 554              		.loc 1 252 0
 555 0072 284B     		ldr	r3, .L37+4
 556 0074 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 557 0076 1A46     		mov	r2, r3
 558 0078 9200     		lsls	r2, r2, #2
 559 007a 1344     		add	r3, r3, r2
 560 007c 1A46     		mov	r2, r3
 561 007e 9100     		lsls	r1, r2, #2
 562 0080 1A46     		mov	r2, r3
 563 0082 0B46     		mov	r3, r1
 564 0084 1344     		add	r3, r3, r2
 565 0086 9B00     		lsls	r3, r3, #2
 566 0088 DAB2     		uxtb	r2, r3
 567 008a 224B     		ldr	r3, .L37+4
 568 008c 9A70     		strb	r2, [r3, #2]
 253:main.c        ****     crabs = data[0] + data[1] + data[2];
 569              		.loc 1 253 0
 570 008e 214B     		ldr	r3, .L37+4
 571 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 572 0092 1A46     		mov	r2, r3
 573 0094 1F4B     		ldr	r3, .L37+4
 574 0096 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 575 0098 1344     		add	r3, r3, r2
 576 009a 1E4A     		ldr	r2, .L37+4
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\cct6b5Fj.s 			page 16


 577 009c 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 578 009e 1344     		add	r3, r3, r2
 579 00a0 7B60     		str	r3, [r7, #4]
 254:main.c        ****     if(crabs > 127){
 580              		.loc 1 254 0
 581 00a2 7B68     		ldr	r3, [r7, #4]
 582 00a4 7F2B     		cmp	r3, #127
 583 00a6 15DD     		ble	.L32
 255:main.c        ****         crabs = 0;
 584              		.loc 1 255 0
 585 00a8 0023     		movs	r3, #0
 586 00aa 7B60     		str	r3, [r7, #4]
 256:main.c        ****         error = 1;
 587              		.loc 1 256 0
 588 00ac 1B4B     		ldr	r3, .L37+12
 589 00ae 0122     		movs	r2, #1
 590 00b0 1A60     		str	r2, [r3]
 257:main.c        ****         /* Wait until component is ready to send data to host. */
 258:main.c        ****         while (0u == USBUART_CDCIsReady())
 591              		.loc 1 258 0
 592 00b2 00BF     		nop
 593              	.L33:
 594              		.loc 1 258 0 is_stmt 0 discriminator 1
 595 00b4 FFF7FEFF 		bl	USBUART_CDCIsReady
 596 00b8 0346     		mov	r3, r0
 597 00ba 002B     		cmp	r3, #0
 598 00bc FAD0     		beq	.L33
 259:main.c        ****         {
 260:main.c        ****         }
 261:main.c        ****         USBUART_PutString("Error. Please enter a number UP TO 127");
 599              		.loc 1 261 0 is_stmt 1
 600 00be 1848     		ldr	r0, .L37+16
 601 00c0 FFF7FEFF 		bl	USBUART_PutString
 262:main.c        ****         /* Wait until component is ready to send data to host. */
 263:main.c        ****         while (0u == USBUART_CDCIsReady())
 602              		.loc 1 263 0
 603 00c4 00BF     		nop
 604              	.L34:
 605              		.loc 1 263 0 is_stmt 0 discriminator 1
 606 00c6 FFF7FEFF 		bl	USBUART_CDCIsReady
 607 00ca 0346     		mov	r3, r0
 608 00cc 002B     		cmp	r3, #0
 609 00ce FAD0     		beq	.L34
 264:main.c        ****         {
 265:main.c        ****         }
 266:main.c        ****         USBUART_PutCRLF();
 610              		.loc 1 266 0 is_stmt 1
 611 00d0 FFF7FEFF 		bl	USBUART_PutCRLF
 612              	.L32:
 267:main.c        ****     }
 268:main.c        ****     /* reset array */
 269:main.c        ****     data[0] = 0; 
 613              		.loc 1 269 0
 614 00d4 0F4B     		ldr	r3, .L37+4
 615 00d6 0022     		movs	r2, #0
 616 00d8 1A70     		strb	r2, [r3]
 270:main.c        ****     data[1] = 0;
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\cct6b5Fj.s 			page 17


 617              		.loc 1 270 0
 618 00da 0E4B     		ldr	r3, .L37+4
 619 00dc 0022     		movs	r2, #0
 620 00de 5A70     		strb	r2, [r3, #1]
 271:main.c        ****     data[2] = 0;
 621              		.loc 1 271 0
 622 00e0 0C4B     		ldr	r3, .L37+4
 623 00e2 0022     		movs	r2, #0
 624 00e4 9A70     		strb	r2, [r3, #2]
 272:main.c        ****     i = 2; // reset indexing for array
 625              		.loc 1 272 0
 626 00e6 0F4B     		ldr	r3, .L37+20
 627 00e8 0222     		movs	r2, #2
 628 00ea 1A60     		str	r2, [r3]
 273:main.c        ****     endFlag = 0; // reset endFlag for gathering new data
 629              		.loc 1 273 0
 630 00ec 0E4B     		ldr	r3, .L37+24
 631 00ee 0022     		movs	r2, #0
 632 00f0 1A60     		str	r2, [r3]
 274:main.c        ****                     
 275:main.c        ****     if(error == 1){
 633              		.loc 1 275 0
 634 00f2 0A4B     		ldr	r3, .L37+12
 635 00f4 1B68     		ldr	r3, [r3]
 636 00f6 012B     		cmp	r3, #1
 637 00f8 05D1     		bne	.L35
 276:main.c        ****         error = 0; // reset error checking
 638              		.loc 1 276 0
 639 00fa 084B     		ldr	r3, .L37+12
 640 00fc 0022     		movs	r2, #0
 641 00fe 1A60     		str	r2, [r3]
 277:main.c        ****         return ERROR;
 642              		.loc 1 277 0
 643 0100 40F24D13 		movw	r3, #333
 644 0104 00E0     		b	.L36
 645              	.L35:
 278:main.c        **** 
 279:main.c        ****     }else{
 280:main.c        ****         return crabs;
 646              		.loc 1 280 0
 647 0106 7B68     		ldr	r3, [r7, #4]
 648              	.L36:
 281:main.c        ****     }
 282:main.c        **** } /* END OF CalculateCrabs() */
 649              		.loc 1 282 0
 650 0108 1846     		mov	r0, r3
 651 010a 0837     		adds	r7, r7, #8
 652              		.cfi_def_cfa_offset 8
 653 010c BD46     		mov	sp, r7
 654              		.cfi_def_cfa_register 13
 655              		@ sp needed
 656 010e 80BD     		pop	{r7, pc}
 657              	.L38:
 658              		.align	2
 659              	.L37:
 660 0110 00000000 		.word	oneDigit
 661 0114 00000000 		.word	data
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\cct6b5Fj.s 			page 18


 662 0118 00000000 		.word	twoDigit
 663 011c 00000000 		.word	error
 664 0120 EC000000 		.word	.LC13
 665 0124 00000000 		.word	i
 666 0128 00000000 		.word	endFlag
 667              		.cfi_endproc
 668              	.LFE66:
 669              		.size	CalculateCrabs, .-CalculateCrabs
 670              		.section	.rodata
 671 0113 00       		.align	2
 672              	.LC14:
 673 0114 20202020 		.ascii	"           \000"
 673      20202020 
 673      20202000 
 674              		.align	2
 675              	.LC15:
 676 0120 43726162 		.ascii	"Crabs: %d\000"
 676      733A2025 
 676      6400
 677              		.section	.text.DisplayCrabs,"ax",%progbits
 678              		.align	2
 679              		.global	DisplayCrabs
 680              		.thumb
 681              		.thumb_func
 682              		.type	DisplayCrabs, %function
 683              	DisplayCrabs:
 684              	.LFB67:
 283:main.c        **** 
 284:main.c        **** /*
 285:main.c        ****  * function: void DisplayCrabs()
 286:main.c        ****  * parameters: int crabs
 287:main.c        ****  * returns: void
 288:main.c        ****  * description: Displays the number of crabs on LCD Display
 289:main.c        ****  */
 290:main.c        **** void DisplayCrabs(int crabs){
 685              		.loc 1 290 0
 686              		.cfi_startproc
 687              		@ args = 0, pretend = 0, frame = 8
 688              		@ frame_needed = 1, uses_anonymous_args = 0
 689 0000 80B5     		push	{r7, lr}
 690              		.cfi_def_cfa_offset 8
 691              		.cfi_offset 7, -8
 692              		.cfi_offset 14, -4
 693 0002 82B0     		sub	sp, sp, #8
 694              		.cfi_def_cfa_offset 16
 695 0004 00AF     		add	r7, sp, #0
 696              		.cfi_def_cfa_register 7
 697 0006 7860     		str	r0, [r7, #4]
 291:main.c        ****     /* Clear LCD line. */
 292:main.c        ****     LCD_Position(0u, 0u);
 698              		.loc 1 292 0
 699 0008 0021     		movs	r1, #0
 700 000a 0020     		movs	r0, #0
 701 000c FFF7FEFF 		bl	LCD_Position
 293:main.c        ****     LCD_PrintString("           ");
 702              		.loc 1 293 0
 703 0010 0948     		ldr	r0, .L40
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\cct6b5Fj.s 			page 19


 704 0012 FFF7FEFF 		bl	LCD_PrintString
 294:main.c        ****     /* Reset LCD line position. */
 295:main.c        ****     LCD_Position(0u, 0u);
 705              		.loc 1 295 0
 706 0016 0021     		movs	r1, #0
 707 0018 0020     		movs	r0, #0
 708 001a FFF7FEFF 		bl	LCD_Position
 296:main.c        ****     /* Store int crabs into a string to print to LCD */
 297:main.c        ****     sprintf(lineStr,"Crabs: %d", crabs);
 709              		.loc 1 297 0
 710 001e 7A68     		ldr	r2, [r7, #4]
 711 0020 0649     		ldr	r1, .L40+4
 712 0022 0748     		ldr	r0, .L40+8
 713 0024 FFF7FEFF 		bl	sprintf
 298:main.c        ****     LCD_PrintString(lineStr);
 714              		.loc 1 298 0
 715 0028 0548     		ldr	r0, .L40+8
 716 002a FFF7FEFF 		bl	LCD_PrintString
 299:main.c        **** }
 717              		.loc 1 299 0
 718 002e 00BF     		nop
 719 0030 0837     		adds	r7, r7, #8
 720              		.cfi_def_cfa_offset 8
 721 0032 BD46     		mov	sp, r7
 722              		.cfi_def_cfa_register 13
 723              		@ sp needed
 724 0034 80BD     		pop	{r7, pc}
 725              	.L41:
 726 0036 00BF     		.align	2
 727              	.L40:
 728 0038 14010000 		.word	.LC14
 729 003c 20010000 		.word	.LC15
 730 0040 00000000 		.word	lineStr
 731              		.cfi_endproc
 732              	.LFE67:
 733              		.size	DisplayCrabs, .-DisplayCrabs
 734              		.text
 735              	.Letext0:
 736              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 737              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 738              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 739              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 740              		.section	.debug_info,"",%progbits
 741              	.Ldebug_info0:
 742 0000 A2020000 		.4byte	0x2a2
 743 0004 0400     		.2byte	0x4
 744 0006 00000000 		.4byte	.Ldebug_abbrev0
 745 000a 04       		.byte	0x4
 746 000b 01       		.uleb128 0x1
 747 000c 00000000 		.4byte	.LASF37
 748 0010 0C       		.byte	0xc
 749 0011 DF010000 		.4byte	.LASF38
 750 0015 6A010000 		.4byte	.LASF39
 751 0019 00000000 		.4byte	.Ldebug_ranges0+0
 752 001d 00000000 		.4byte	0
 753 0021 00000000 		.4byte	.Ldebug_line0
 754 0025 02       		.uleb128 0x2
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\cct6b5Fj.s 			page 20


 755 0026 01       		.byte	0x1
 756 0027 06       		.byte	0x6
 757 0028 1D020000 		.4byte	.LASF0
 758 002c 02       		.uleb128 0x2
 759 002d 01       		.byte	0x1
 760 002e 08       		.byte	0x8
 761 002f C4000000 		.4byte	.LASF1
 762 0033 02       		.uleb128 0x2
 763 0034 02       		.byte	0x2
 764 0035 05       		.byte	0x5
 765 0036 F1010000 		.4byte	.LASF2
 766 003a 02       		.uleb128 0x2
 767 003b 02       		.byte	0x2
 768 003c 07       		.byte	0x7
 769 003d EA000000 		.4byte	.LASF3
 770 0041 03       		.uleb128 0x3
 771 0042 A6000000 		.4byte	.LASF9
 772 0046 02       		.byte	0x2
 773 0047 3F       		.byte	0x3f
 774 0048 4C000000 		.4byte	0x4c
 775 004c 02       		.uleb128 0x2
 776 004d 04       		.byte	0x4
 777 004e 05       		.byte	0x5
 778 004f 08020000 		.4byte	.LASF4
 779 0053 02       		.uleb128 0x2
 780 0054 04       		.byte	0x4
 781 0055 07       		.byte	0x7
 782 0056 D8000000 		.4byte	.LASF5
 783 005a 02       		.uleb128 0x2
 784 005b 08       		.byte	0x8
 785 005c 05       		.byte	0x5
 786 005d D1010000 		.4byte	.LASF6
 787 0061 02       		.uleb128 0x2
 788 0062 08       		.byte	0x8
 789 0063 07       		.byte	0x7
 790 0064 53010000 		.4byte	.LASF7
 791 0068 04       		.uleb128 0x4
 792 0069 04       		.byte	0x4
 793 006a 05       		.byte	0x5
 794 006b 696E7400 		.ascii	"int\000"
 795 006f 02       		.uleb128 0x2
 796 0070 04       		.byte	0x4
 797 0071 07       		.byte	0x7
 798 0072 46010000 		.4byte	.LASF8
 799 0076 03       		.uleb128 0x3
 800 0077 AE010000 		.4byte	.LASF10
 801 007b 03       		.byte	0x3
 802 007c 2C       		.byte	0x2c
 803 007d 41000000 		.4byte	0x41
 804 0081 05       		.uleb128 0x5
 805 0082 02020000 		.4byte	.LASF11
 806 0086 04       		.byte	0x4
 807 0087 9201     		.2byte	0x192
 808 0089 2C000000 		.4byte	0x2c
 809 008d 05       		.uleb128 0x5
 810 008e 2D010000 		.4byte	.LASF12
 811 0092 04       		.byte	0x4
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\cct6b5Fj.s 			page 21


 812 0093 9301     		.2byte	0x193
 813 0095 3A000000 		.4byte	0x3a
 814 0099 02       		.uleb128 0x2
 815 009a 04       		.byte	0x4
 816 009b 04       		.byte	0x4
 817 009c B9000000 		.4byte	.LASF13
 818 00a0 02       		.uleb128 0x2
 819 00a1 08       		.byte	0x8
 820 00a2 04       		.byte	0x4
 821 00a3 0F010000 		.4byte	.LASF14
 822 00a7 05       		.uleb128 0x5
 823 00a8 D2000000 		.4byte	.LASF15
 824 00ac 04       		.byte	0x4
 825 00ad A301     		.2byte	0x1a3
 826 00af B3000000 		.4byte	0xb3
 827 00b3 02       		.uleb128 0x2
 828 00b4 01       		.byte	0x1
 829 00b5 08       		.byte	0x8
 830 00b6 E6010000 		.4byte	.LASF16
 831 00ba 02       		.uleb128 0x2
 832 00bb 08       		.byte	0x8
 833 00bc 04       		.byte	0x4
 834 00bd 11020000 		.4byte	.LASF17
 835 00c1 02       		.uleb128 0x2
 836 00c2 04       		.byte	0x4
 837 00c3 07       		.byte	0x7
 838 00c4 B6010000 		.4byte	.LASF18
 839 00c8 06       		.uleb128 0x6
 840 00c9 41010000 		.4byte	.LASF23
 841 00cd 01       		.byte	0x1
 842 00ce 49       		.byte	0x49
 843 00cf 68000000 		.4byte	0x68
 844 00d3 00000000 		.4byte	.LFB64
 845 00d7 70000000 		.4byte	.LFE64-.LFB64
 846 00db 01       		.uleb128 0x1
 847 00dc 9C       		.byte	0x9c
 848 00dd FE000000 		.4byte	0xfe
 849 00e1 07       		.uleb128 0x7
 850 00e2 16010000 		.4byte	.LASF19
 851 00e6 01       		.byte	0x1
 852 00e7 4B       		.byte	0x4b
 853 00e8 68000000 		.4byte	0x68
 854 00ec 02       		.uleb128 0x2
 855 00ed 91       		.byte	0x91
 856 00ee 70       		.sleb128 -16
 857 00ef 07       		.uleb128 0x7
 858 00f0 BF010000 		.4byte	.LASF20
 859 00f4 01       		.byte	0x1
 860 00f5 4C       		.byte	0x4c
 861 00f6 68000000 		.4byte	0x68
 862 00fa 02       		.uleb128 0x2
 863 00fb 91       		.byte	0x91
 864 00fc 74       		.sleb128 -12
 865 00fd 00       		.byte	0
 866 00fe 08       		.uleb128 0x8
 867 00ff 24010000 		.4byte	.LASF21
 868 0103 01       		.byte	0x1
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\cct6b5Fj.s 			page 22


 869 0104 78       		.byte	0x78
 870 0105 68000000 		.4byte	0x68
 871 0109 00000000 		.4byte	.LFB65
 872 010d 5C010000 		.4byte	.LFE65-.LFB65
 873 0111 01       		.uleb128 0x1
 874 0112 9C       		.byte	0x9c
 875 0113 26010000 		.4byte	0x126
 876 0117 07       		.uleb128 0x7
 877 0118 16010000 		.4byte	.LASF19
 878 011c 01       		.byte	0x1
 879 011d 7A       		.byte	0x7a
 880 011e 8D000000 		.4byte	0x8d
 881 0122 02       		.uleb128 0x2
 882 0123 91       		.byte	0x91
 883 0124 6E       		.sleb128 -18
 884 0125 00       		.byte	0
 885 0126 08       		.uleb128 0x8
 886 0127 97000000 		.4byte	.LASF22
 887 012b 01       		.byte	0x1
 888 012c E4       		.byte	0xe4
 889 012d 68000000 		.4byte	0x68
 890 0131 00000000 		.4byte	.LFB66
 891 0135 2C010000 		.4byte	.LFE66-.LFB66
 892 0139 01       		.uleb128 0x1
 893 013a 9C       		.byte	0x9c
 894 013b 4E010000 		.4byte	0x14e
 895 013f 07       		.uleb128 0x7
 896 0140 16010000 		.4byte	.LASF19
 897 0144 01       		.byte	0x1
 898 0145 E6       		.byte	0xe6
 899 0146 68000000 		.4byte	0x68
 900 014a 02       		.uleb128 0x2
 901 014b 91       		.byte	0x91
 902 014c 74       		.sleb128 -12
 903 014d 00       		.byte	0
 904 014e 09       		.uleb128 0x9
 905 014f 34010000 		.4byte	.LASF24
 906 0153 01       		.byte	0x1
 907 0154 2201     		.2byte	0x122
 908 0156 00000000 		.4byte	.LFB67
 909 015a 44000000 		.4byte	.LFE67-.LFB67
 910 015e 01       		.uleb128 0x1
 911 015f 9C       		.byte	0x9c
 912 0160 74010000 		.4byte	0x174
 913 0164 0A       		.uleb128 0xa
 914 0165 16010000 		.4byte	.LASF19
 915 0169 01       		.byte	0x1
 916 016a 2201     		.2byte	0x122
 917 016c 68000000 		.4byte	0x68
 918 0170 02       		.uleb128 0x2
 919 0171 91       		.byte	0x91
 920 0172 74       		.sleb128 -12
 921 0173 00       		.byte	0
 922 0174 0B       		.uleb128 0xb
 923 0175 02010000 		.4byte	.LASF25
 924 0179 05       		.byte	0x5
 925 017a 1207     		.2byte	0x712
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\cct6b5Fj.s 			page 23


 926 017c 80010000 		.4byte	0x180
 927 0180 0C       		.uleb128 0xc
 928 0181 76000000 		.4byte	0x76
 929 0185 0D       		.uleb128 0xd
 930 0186 95010000 		.4byte	0x195
 931 018a 95010000 		.4byte	0x195
 932 018e 0E       		.uleb128 0xe
 933 018f C1000000 		.4byte	0xc1
 934 0193 04       		.byte	0x4
 935 0194 00       		.byte	0
 936 0195 0F       		.uleb128 0xf
 937 0196 04       		.byte	0x4
 938 0197 A7000000 		.4byte	0xa7
 939 019b 10       		.uleb128 0x10
 940 019c 30020000 		.4byte	.LASF26
 941 01a0 01       		.byte	0x1
 942 01a1 27       		.byte	0x27
 943 01a2 85010000 		.4byte	0x185
 944 01a6 05       		.uleb128 0x5
 945 01a7 03       		.byte	0x3
 946 01a8 00000000 		.4byte	parity
 947 01ac 0D       		.uleb128 0xd
 948 01ad 95010000 		.4byte	0x195
 949 01b1 BC010000 		.4byte	0x1bc
 950 01b5 0E       		.uleb128 0xe
 951 01b6 C1000000 		.4byte	0xc1
 952 01ba 02       		.byte	0x2
 953 01bb 00       		.byte	0
 954 01bc 10       		.uleb128 0x10
 955 01bd FD000000 		.4byte	.LASF27
 956 01c1 01       		.byte	0x1
 957 01c2 28       		.byte	0x28
 958 01c3 AC010000 		.4byte	0x1ac
 959 01c7 05       		.uleb128 0x5
 960 01c8 03       		.byte	0x3
 961 01c9 00000000 		.4byte	stop
 962 01cd 10       		.uleb128 0x10
 963 01ce 29020000 		.4byte	.LASF28
 964 01d2 01       		.byte	0x1
 965 01d3 29       		.byte	0x29
 966 01d4 68000000 		.4byte	0x68
 967 01d8 05       		.uleb128 0x5
 968 01d9 03       		.byte	0x3
 969 01da 00000000 		.4byte	prompt
 970 01de 10       		.uleb128 0x10
 971 01df 1C010000 		.4byte	.LASF29
 972 01e3 01       		.byte	0x1
 973 01e4 2A       		.byte	0x2a
 974 01e5 68000000 		.4byte	0x68
 975 01e9 05       		.uleb128 0x5
 976 01ea 03       		.byte	0x3
 977 01eb 00000000 		.4byte	endFlag
 978 01ef 10       		.uleb128 0x10
 979 01f0 8E000000 		.4byte	.LASF30
 980 01f4 01       		.byte	0x1
 981 01f5 2B       		.byte	0x2b
 982 01f6 68000000 		.4byte	0x68
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\cct6b5Fj.s 			page 24


 983 01fa 05       		.uleb128 0x5
 984 01fb 03       		.byte	0x3
 985 01fc 00000000 		.4byte	oneDigit
 986 0200 10       		.uleb128 0x10
 987 0201 B0000000 		.4byte	.LASF31
 988 0205 01       		.byte	0x1
 989 0206 2C       		.byte	0x2c
 990 0207 68000000 		.4byte	0x68
 991 020b 05       		.uleb128 0x5
 992 020c 03       		.byte	0x3
 993 020d 00000000 		.4byte	twoDigit
 994 0211 10       		.uleb128 0x10
 995 0212 CB010000 		.4byte	.LASF32
 996 0216 01       		.byte	0x1
 997 0217 2D       		.byte	0x2d
 998 0218 68000000 		.4byte	0x68
 999 021c 05       		.uleb128 0x5
 1000 021d 03       		.byte	0x3
 1001 021e 00000000 		.4byte	error
 1002 0222 11       		.uleb128 0x11
 1003 0223 6900     		.ascii	"i\000"
 1004 0225 01       		.byte	0x1
 1005 0226 2E       		.byte	0x2e
 1006 0227 68000000 		.4byte	0x68
 1007 022b 05       		.uleb128 0x5
 1008 022c 03       		.byte	0x3
 1009 022d 00000000 		.4byte	i
 1010 0231 10       		.uleb128 0x10
 1011 0232 EB010000 		.4byte	.LASF33
 1012 0236 01       		.byte	0x1
 1013 0237 2F       		.byte	0x2f
 1014 0238 8D000000 		.4byte	0x8d
 1015 023c 05       		.uleb128 0x5
 1016 023d 03       		.byte	0x3
 1017 023e 00000000 		.4byte	count
 1018 0242 0D       		.uleb128 0xd
 1019 0243 A7000000 		.4byte	0xa7
 1020 0247 52020000 		.4byte	0x252
 1021 024b 0E       		.uleb128 0xe
 1022 024c C1000000 		.4byte	0xc1
 1023 0250 13       		.byte	0x13
 1024 0251 00       		.byte	0
 1025 0252 10       		.uleb128 0x10
 1026 0253 37020000 		.4byte	.LASF34
 1027 0257 01       		.byte	0x1
 1028 0258 30       		.byte	0x30
 1029 0259 42020000 		.4byte	0x242
 1030 025d 05       		.uleb128 0x5
 1031 025e 03       		.byte	0x3
 1032 025f 00000000 		.4byte	lineStr
 1033 0263 0D       		.uleb128 0xd
 1034 0264 81000000 		.4byte	0x81
 1035 0268 73020000 		.4byte	0x273
 1036 026c 0E       		.uleb128 0xe
 1037 026d C1000000 		.4byte	0xc1
 1038 0271 3F       		.byte	0x3f
 1039 0272 00       		.byte	0
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\cct6b5Fj.s 			page 25


 1040 0273 10       		.uleb128 0x10
 1041 0274 FB010000 		.4byte	.LASF35
 1042 0278 01       		.byte	0x1
 1043 0279 31       		.byte	0x31
 1044 027a 63020000 		.4byte	0x263
 1045 027e 05       		.uleb128 0x5
 1046 027f 03       		.byte	0x3
 1047 0280 00000000 		.4byte	buffer
 1048 0284 0D       		.uleb128 0xd
 1049 0285 81000000 		.4byte	0x81
 1050 0289 94020000 		.4byte	0x294
 1051 028d 0E       		.uleb128 0xe
 1052 028e C1000000 		.4byte	0xc1
 1053 0292 02       		.byte	0x2
 1054 0293 00       		.byte	0
 1055 0294 10       		.uleb128 0x10
 1056 0295 BF000000 		.4byte	.LASF36
 1057 0299 01       		.byte	0x1
 1058 029a 32       		.byte	0x32
 1059 029b 84020000 		.4byte	0x284
 1060 029f 05       		.uleb128 0x5
 1061 02a0 03       		.byte	0x3
 1062 02a1 00000000 		.4byte	data
 1063 02a5 00       		.byte	0
 1064              		.section	.debug_abbrev,"",%progbits
 1065              	.Ldebug_abbrev0:
 1066 0000 01       		.uleb128 0x1
 1067 0001 11       		.uleb128 0x11
 1068 0002 01       		.byte	0x1
 1069 0003 25       		.uleb128 0x25
 1070 0004 0E       		.uleb128 0xe
 1071 0005 13       		.uleb128 0x13
 1072 0006 0B       		.uleb128 0xb
 1073 0007 03       		.uleb128 0x3
 1074 0008 0E       		.uleb128 0xe
 1075 0009 1B       		.uleb128 0x1b
 1076 000a 0E       		.uleb128 0xe
 1077 000b 55       		.uleb128 0x55
 1078 000c 17       		.uleb128 0x17
 1079 000d 11       		.uleb128 0x11
 1080 000e 01       		.uleb128 0x1
 1081 000f 10       		.uleb128 0x10
 1082 0010 17       		.uleb128 0x17
 1083 0011 00       		.byte	0
 1084 0012 00       		.byte	0
 1085 0013 02       		.uleb128 0x2
 1086 0014 24       		.uleb128 0x24
 1087 0015 00       		.byte	0
 1088 0016 0B       		.uleb128 0xb
 1089 0017 0B       		.uleb128 0xb
 1090 0018 3E       		.uleb128 0x3e
 1091 0019 0B       		.uleb128 0xb
 1092 001a 03       		.uleb128 0x3
 1093 001b 0E       		.uleb128 0xe
 1094 001c 00       		.byte	0
 1095 001d 00       		.byte	0
 1096 001e 03       		.uleb128 0x3
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\cct6b5Fj.s 			page 26


 1097 001f 16       		.uleb128 0x16
 1098 0020 00       		.byte	0
 1099 0021 03       		.uleb128 0x3
 1100 0022 0E       		.uleb128 0xe
 1101 0023 3A       		.uleb128 0x3a
 1102 0024 0B       		.uleb128 0xb
 1103 0025 3B       		.uleb128 0x3b
 1104 0026 0B       		.uleb128 0xb
 1105 0027 49       		.uleb128 0x49
 1106 0028 13       		.uleb128 0x13
 1107 0029 00       		.byte	0
 1108 002a 00       		.byte	0
 1109 002b 04       		.uleb128 0x4
 1110 002c 24       		.uleb128 0x24
 1111 002d 00       		.byte	0
 1112 002e 0B       		.uleb128 0xb
 1113 002f 0B       		.uleb128 0xb
 1114 0030 3E       		.uleb128 0x3e
 1115 0031 0B       		.uleb128 0xb
 1116 0032 03       		.uleb128 0x3
 1117 0033 08       		.uleb128 0x8
 1118 0034 00       		.byte	0
 1119 0035 00       		.byte	0
 1120 0036 05       		.uleb128 0x5
 1121 0037 16       		.uleb128 0x16
 1122 0038 00       		.byte	0
 1123 0039 03       		.uleb128 0x3
 1124 003a 0E       		.uleb128 0xe
 1125 003b 3A       		.uleb128 0x3a
 1126 003c 0B       		.uleb128 0xb
 1127 003d 3B       		.uleb128 0x3b
 1128 003e 05       		.uleb128 0x5
 1129 003f 49       		.uleb128 0x49
 1130 0040 13       		.uleb128 0x13
 1131 0041 00       		.byte	0
 1132 0042 00       		.byte	0
 1133 0043 06       		.uleb128 0x6
 1134 0044 2E       		.uleb128 0x2e
 1135 0045 01       		.byte	0x1
 1136 0046 3F       		.uleb128 0x3f
 1137 0047 19       		.uleb128 0x19
 1138 0048 03       		.uleb128 0x3
 1139 0049 0E       		.uleb128 0xe
 1140 004a 3A       		.uleb128 0x3a
 1141 004b 0B       		.uleb128 0xb
 1142 004c 3B       		.uleb128 0x3b
 1143 004d 0B       		.uleb128 0xb
 1144 004e 49       		.uleb128 0x49
 1145 004f 13       		.uleb128 0x13
 1146 0050 11       		.uleb128 0x11
 1147 0051 01       		.uleb128 0x1
 1148 0052 12       		.uleb128 0x12
 1149 0053 06       		.uleb128 0x6
 1150 0054 40       		.uleb128 0x40
 1151 0055 18       		.uleb128 0x18
 1152 0056 9642     		.uleb128 0x2116
 1153 0058 19       		.uleb128 0x19
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\cct6b5Fj.s 			page 27


 1154 0059 01       		.uleb128 0x1
 1155 005a 13       		.uleb128 0x13
 1156 005b 00       		.byte	0
 1157 005c 00       		.byte	0
 1158 005d 07       		.uleb128 0x7
 1159 005e 34       		.uleb128 0x34
 1160 005f 00       		.byte	0
 1161 0060 03       		.uleb128 0x3
 1162 0061 0E       		.uleb128 0xe
 1163 0062 3A       		.uleb128 0x3a
 1164 0063 0B       		.uleb128 0xb
 1165 0064 3B       		.uleb128 0x3b
 1166 0065 0B       		.uleb128 0xb
 1167 0066 49       		.uleb128 0x49
 1168 0067 13       		.uleb128 0x13
 1169 0068 02       		.uleb128 0x2
 1170 0069 18       		.uleb128 0x18
 1171 006a 00       		.byte	0
 1172 006b 00       		.byte	0
 1173 006c 08       		.uleb128 0x8
 1174 006d 2E       		.uleb128 0x2e
 1175 006e 01       		.byte	0x1
 1176 006f 3F       		.uleb128 0x3f
 1177 0070 19       		.uleb128 0x19
 1178 0071 03       		.uleb128 0x3
 1179 0072 0E       		.uleb128 0xe
 1180 0073 3A       		.uleb128 0x3a
 1181 0074 0B       		.uleb128 0xb
 1182 0075 3B       		.uleb128 0x3b
 1183 0076 0B       		.uleb128 0xb
 1184 0077 27       		.uleb128 0x27
 1185 0078 19       		.uleb128 0x19
 1186 0079 49       		.uleb128 0x49
 1187 007a 13       		.uleb128 0x13
 1188 007b 11       		.uleb128 0x11
 1189 007c 01       		.uleb128 0x1
 1190 007d 12       		.uleb128 0x12
 1191 007e 06       		.uleb128 0x6
 1192 007f 40       		.uleb128 0x40
 1193 0080 18       		.uleb128 0x18
 1194 0081 9642     		.uleb128 0x2116
 1195 0083 19       		.uleb128 0x19
 1196 0084 01       		.uleb128 0x1
 1197 0085 13       		.uleb128 0x13
 1198 0086 00       		.byte	0
 1199 0087 00       		.byte	0
 1200 0088 09       		.uleb128 0x9
 1201 0089 2E       		.uleb128 0x2e
 1202 008a 01       		.byte	0x1
 1203 008b 3F       		.uleb128 0x3f
 1204 008c 19       		.uleb128 0x19
 1205 008d 03       		.uleb128 0x3
 1206 008e 0E       		.uleb128 0xe
 1207 008f 3A       		.uleb128 0x3a
 1208 0090 0B       		.uleb128 0xb
 1209 0091 3B       		.uleb128 0x3b
 1210 0092 05       		.uleb128 0x5
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\cct6b5Fj.s 			page 28


 1211 0093 27       		.uleb128 0x27
 1212 0094 19       		.uleb128 0x19
 1213 0095 11       		.uleb128 0x11
 1214 0096 01       		.uleb128 0x1
 1215 0097 12       		.uleb128 0x12
 1216 0098 06       		.uleb128 0x6
 1217 0099 40       		.uleb128 0x40
 1218 009a 18       		.uleb128 0x18
 1219 009b 9642     		.uleb128 0x2116
 1220 009d 19       		.uleb128 0x19
 1221 009e 01       		.uleb128 0x1
 1222 009f 13       		.uleb128 0x13
 1223 00a0 00       		.byte	0
 1224 00a1 00       		.byte	0
 1225 00a2 0A       		.uleb128 0xa
 1226 00a3 05       		.uleb128 0x5
 1227 00a4 00       		.byte	0
 1228 00a5 03       		.uleb128 0x3
 1229 00a6 0E       		.uleb128 0xe
 1230 00a7 3A       		.uleb128 0x3a
 1231 00a8 0B       		.uleb128 0xb
 1232 00a9 3B       		.uleb128 0x3b
 1233 00aa 05       		.uleb128 0x5
 1234 00ab 49       		.uleb128 0x49
 1235 00ac 13       		.uleb128 0x13
 1236 00ad 02       		.uleb128 0x2
 1237 00ae 18       		.uleb128 0x18
 1238 00af 00       		.byte	0
 1239 00b0 00       		.byte	0
 1240 00b1 0B       		.uleb128 0xb
 1241 00b2 34       		.uleb128 0x34
 1242 00b3 00       		.byte	0
 1243 00b4 03       		.uleb128 0x3
 1244 00b5 0E       		.uleb128 0xe
 1245 00b6 3A       		.uleb128 0x3a
 1246 00b7 0B       		.uleb128 0xb
 1247 00b8 3B       		.uleb128 0x3b
 1248 00b9 05       		.uleb128 0x5
 1249 00ba 49       		.uleb128 0x49
 1250 00bb 13       		.uleb128 0x13
 1251 00bc 3F       		.uleb128 0x3f
 1252 00bd 19       		.uleb128 0x19
 1253 00be 3C       		.uleb128 0x3c
 1254 00bf 19       		.uleb128 0x19
 1255 00c0 00       		.byte	0
 1256 00c1 00       		.byte	0
 1257 00c2 0C       		.uleb128 0xc
 1258 00c3 35       		.uleb128 0x35
 1259 00c4 00       		.byte	0
 1260 00c5 49       		.uleb128 0x49
 1261 00c6 13       		.uleb128 0x13
 1262 00c7 00       		.byte	0
 1263 00c8 00       		.byte	0
 1264 00c9 0D       		.uleb128 0xd
 1265 00ca 01       		.uleb128 0x1
 1266 00cb 01       		.byte	0x1
 1267 00cc 49       		.uleb128 0x49
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\cct6b5Fj.s 			page 29


 1268 00cd 13       		.uleb128 0x13
 1269 00ce 01       		.uleb128 0x1
 1270 00cf 13       		.uleb128 0x13
 1271 00d0 00       		.byte	0
 1272 00d1 00       		.byte	0
 1273 00d2 0E       		.uleb128 0xe
 1274 00d3 21       		.uleb128 0x21
 1275 00d4 00       		.byte	0
 1276 00d5 49       		.uleb128 0x49
 1277 00d6 13       		.uleb128 0x13
 1278 00d7 2F       		.uleb128 0x2f
 1279 00d8 0B       		.uleb128 0xb
 1280 00d9 00       		.byte	0
 1281 00da 00       		.byte	0
 1282 00db 0F       		.uleb128 0xf
 1283 00dc 0F       		.uleb128 0xf
 1284 00dd 00       		.byte	0
 1285 00de 0B       		.uleb128 0xb
 1286 00df 0B       		.uleb128 0xb
 1287 00e0 49       		.uleb128 0x49
 1288 00e1 13       		.uleb128 0x13
 1289 00e2 00       		.byte	0
 1290 00e3 00       		.byte	0
 1291 00e4 10       		.uleb128 0x10
 1292 00e5 34       		.uleb128 0x34
 1293 00e6 00       		.byte	0
 1294 00e7 03       		.uleb128 0x3
 1295 00e8 0E       		.uleb128 0xe
 1296 00e9 3A       		.uleb128 0x3a
 1297 00ea 0B       		.uleb128 0xb
 1298 00eb 3B       		.uleb128 0x3b
 1299 00ec 0B       		.uleb128 0xb
 1300 00ed 49       		.uleb128 0x49
 1301 00ee 13       		.uleb128 0x13
 1302 00ef 3F       		.uleb128 0x3f
 1303 00f0 19       		.uleb128 0x19
 1304 00f1 02       		.uleb128 0x2
 1305 00f2 18       		.uleb128 0x18
 1306 00f3 00       		.byte	0
 1307 00f4 00       		.byte	0
 1308 00f5 11       		.uleb128 0x11
 1309 00f6 34       		.uleb128 0x34
 1310 00f7 00       		.byte	0
 1311 00f8 03       		.uleb128 0x3
 1312 00f9 08       		.uleb128 0x8
 1313 00fa 3A       		.uleb128 0x3a
 1314 00fb 0B       		.uleb128 0xb
 1315 00fc 3B       		.uleb128 0x3b
 1316 00fd 0B       		.uleb128 0xb
 1317 00fe 49       		.uleb128 0x49
 1318 00ff 13       		.uleb128 0x13
 1319 0100 3F       		.uleb128 0x3f
 1320 0101 19       		.uleb128 0x19
 1321 0102 02       		.uleb128 0x2
 1322 0103 18       		.uleb128 0x18
 1323 0104 00       		.byte	0
 1324 0105 00       		.byte	0
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\cct6b5Fj.s 			page 30


 1325 0106 00       		.byte	0
 1326              		.section	.debug_aranges,"",%progbits
 1327 0000 34000000 		.4byte	0x34
 1328 0004 0200     		.2byte	0x2
 1329 0006 00000000 		.4byte	.Ldebug_info0
 1330 000a 04       		.byte	0x4
 1331 000b 00       		.byte	0
 1332 000c 0000     		.2byte	0
 1333 000e 0000     		.2byte	0
 1334 0010 00000000 		.4byte	.LFB64
 1335 0014 70000000 		.4byte	.LFE64-.LFB64
 1336 0018 00000000 		.4byte	.LFB65
 1337 001c 5C010000 		.4byte	.LFE65-.LFB65
 1338 0020 00000000 		.4byte	.LFB66
 1339 0024 2C010000 		.4byte	.LFE66-.LFB66
 1340 0028 00000000 		.4byte	.LFB67
 1341 002c 44000000 		.4byte	.LFE67-.LFB67
 1342 0030 00000000 		.4byte	0
 1343 0034 00000000 		.4byte	0
 1344              		.section	.debug_ranges,"",%progbits
 1345              	.Ldebug_ranges0:
 1346 0000 00000000 		.4byte	.LFB64
 1347 0004 70000000 		.4byte	.LFE64
 1348 0008 00000000 		.4byte	.LFB65
 1349 000c 5C010000 		.4byte	.LFE65
 1350 0010 00000000 		.4byte	.LFB66
 1351 0014 2C010000 		.4byte	.LFE66
 1352 0018 00000000 		.4byte	.LFB67
 1353 001c 44000000 		.4byte	.LFE67
 1354 0020 00000000 		.4byte	0
 1355 0024 00000000 		.4byte	0
 1356              		.section	.debug_line,"",%progbits
 1357              	.Ldebug_line0:
 1358 0000 2C020000 		.section	.debug_str,"MS",%progbits,1
 1358      02004C01 
 1358      00000201 
 1358      FB0E0D00 
 1358      01010101 
 1359              	.LASF37:
 1360 0000 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1360      43313120 
 1360      352E342E 
 1360      31203230 
 1360      31363036 
 1361 0033 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1361      20726576 
 1361      6973696F 
 1361      6E203233 
 1361      37373135 
 1362 0066 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1362      66756E63 
 1362      74696F6E 
 1362      2D736563 
 1362      74696F6E 
 1363              	.LASF30:
 1364 008e 6F6E6544 		.ascii	"oneDigit\000"
 1364      69676974 
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\cct6b5Fj.s 			page 31


 1364      00
 1365              	.LASF22:
 1366 0097 43616C63 		.ascii	"CalculateCrabs\000"
 1366      756C6174 
 1366      65437261 
 1366      627300
 1367              	.LASF9:
 1368 00a6 5F5F696E 		.ascii	"__int32_t\000"
 1368      7433325F 
 1368      7400
 1369              	.LASF31:
 1370 00b0 74776F44 		.ascii	"twoDigit\000"
 1370      69676974 
 1370      00
 1371              	.LASF13:
 1372 00b9 666C6F61 		.ascii	"float\000"
 1372      7400
 1373              	.LASF36:
 1374 00bf 64617461 		.ascii	"data\000"
 1374      00
 1375              	.LASF1:
 1376 00c4 756E7369 		.ascii	"unsigned char\000"
 1376      676E6564 
 1376      20636861 
 1376      7200
 1377              	.LASF15:
 1378 00d2 63686172 		.ascii	"char8\000"
 1378      3800
 1379              	.LASF5:
 1380 00d8 6C6F6E67 		.ascii	"long unsigned int\000"
 1380      20756E73 
 1380      69676E65 
 1380      6420696E 
 1380      7400
 1381              	.LASF3:
 1382 00ea 73686F72 		.ascii	"short unsigned int\000"
 1382      7420756E 
 1382      7369676E 
 1382      65642069 
 1382      6E7400
 1383              	.LASF27:
 1384 00fd 73746F70 		.ascii	"stop\000"
 1384      00
 1385              	.LASF25:
 1386 0102 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1386      52784275 
 1386      66666572 
 1386      00
 1387              	.LASF14:
 1388 010f 646F7562 		.ascii	"double\000"
 1388      6C6500
 1389              	.LASF19:
 1390 0116 63726162 		.ascii	"crabs\000"
 1390      7300
 1391              	.LASF29:
 1392 011c 656E6446 		.ascii	"endFlag\000"
 1392      6C616700 
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\cct6b5Fj.s 			page 32


 1393              	.LASF21:
 1394 0124 47657443 		.ascii	"GetCrabs\000"
 1394      72616273 
 1394      00
 1395              	.LASF12:
 1396 012d 75696E74 		.ascii	"uint16\000"
 1396      313600
 1397              	.LASF24:
 1398 0134 44697370 		.ascii	"DisplayCrabs\000"
 1398      6C617943 
 1398      72616273 
 1398      00
 1399              	.LASF23:
 1400 0141 6D61696E 		.ascii	"main\000"
 1400      00
 1401              	.LASF8:
 1402 0146 756E7369 		.ascii	"unsigned int\000"
 1402      676E6564 
 1402      20696E74 
 1402      00
 1403              	.LASF7:
 1404 0153 6C6F6E67 		.ascii	"long long unsigned int\000"
 1404      206C6F6E 
 1404      6720756E 
 1404      7369676E 
 1404      65642069 
 1405              	.LASF39:
 1406 016a 433A5C55 		.ascii	"C:\\Users\\sdysart\\Documents\\UACS\\UACS\\HighFreq"
 1406      73657273 
 1406      5C736479 
 1406      73617274 
 1406      5C446F63 
 1407 0197 46534B5C 		.ascii	"FSK\\USBFS_UART01.cydsn\000"
 1407      55534246 
 1407      535F5541 
 1407      52543031 
 1407      2E637964 
 1408              	.LASF10:
 1409 01ae 696E7433 		.ascii	"int32_t\000"
 1409      325F7400 
 1410              	.LASF18:
 1411 01b6 73697A65 		.ascii	"sizetype\000"
 1411      74797065 
 1411      00
 1412              	.LASF20:
 1413 01bf 67657474 		.ascii	"gettingData\000"
 1413      696E6744 
 1413      61746100 
 1414              	.LASF32:
 1415 01cb 6572726F 		.ascii	"error\000"
 1415      7200
 1416              	.LASF6:
 1417 01d1 6C6F6E67 		.ascii	"long long int\000"
 1417      206C6F6E 
 1417      6720696E 
 1417      7400
 1418              	.LASF38:
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\cct6b5Fj.s 			page 33


 1419 01df 6D61696E 		.ascii	"main.c\000"
 1419      2E6300
 1420              	.LASF16:
 1421 01e6 63686172 		.ascii	"char\000"
 1421      00
 1422              	.LASF33:
 1423 01eb 636F756E 		.ascii	"count\000"
 1423      7400
 1424              	.LASF2:
 1425 01f1 73686F72 		.ascii	"short int\000"
 1425      7420696E 
 1425      7400
 1426              	.LASF35:
 1427 01fb 62756666 		.ascii	"buffer\000"
 1427      657200
 1428              	.LASF11:
 1429 0202 75696E74 		.ascii	"uint8\000"
 1429      3800
 1430              	.LASF4:
 1431 0208 6C6F6E67 		.ascii	"long int\000"
 1431      20696E74 
 1431      00
 1432              	.LASF17:
 1433 0211 6C6F6E67 		.ascii	"long double\000"
 1433      20646F75 
 1433      626C6500 
 1434              	.LASF0:
 1435 021d 7369676E 		.ascii	"signed char\000"
 1435      65642063 
 1435      68617200 
 1436              	.LASF28:
 1437 0229 70726F6D 		.ascii	"prompt\000"
 1437      707400
 1438              	.LASF26:
 1439 0230 70617269 		.ascii	"parity\000"
 1439      747900
 1440              	.LASF34:
 1441 0237 6C696E65 		.ascii	"lineStr\000"
 1441      53747200 
 1442              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
