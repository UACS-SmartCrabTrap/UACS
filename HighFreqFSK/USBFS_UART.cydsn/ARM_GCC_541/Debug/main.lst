ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccnHOtIU.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	prompt
  20              		.data
  21              		.align	2
  22              		.type	prompt, %object
  23              		.size	prompt, 4
  24              	prompt:
  25 0000 01000000 		.word	1
  26              		.global	endFlag
  27              		.bss
  28              		.align	2
  29              		.type	endFlag, %object
  30              		.size	endFlag, 4
  31              	endFlag:
  32 0000 00000000 		.space	4
  33              		.global	oneDigit
  34              		.align	2
  35              		.type	oneDigit, %object
  36              		.size	oneDigit, 4
  37              	oneDigit:
  38 0004 00000000 		.space	4
  39              		.global	twoDigit
  40              		.align	2
  41              		.type	twoDigit, %object
  42              		.size	twoDigit, 4
  43              	twoDigit:
  44 0008 00000000 		.space	4
  45              		.global	error
  46              		.align	2
  47              		.type	error, %object
  48              		.size	error, 4
  49              	error:
  50 000c 00000000 		.space	4
  51              		.global	i
  52              		.data
  53              		.align	2
  54              		.type	i, %object
  55              		.size	i, 4
  56              	i:
  57 0004 02000000 		.word	2
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccnHOtIU.s 			page 2


  58              		.global	dataDone
  59              		.align	2
  60              		.type	dataDone, %object
  61              		.size	dataDone, 4
  62              	dataDone:
  63 0008 01000000 		.word	1
  64              		.global	sendReady
  65              		.bss
  66              		.align	2
  67              		.type	sendReady, %object
  68              		.size	sendReady, 4
  69              	sendReady:
  70 0010 00000000 		.space	4
  71              		.comm	count,2,2
  72              		.global	countTx
  73              		.align	1
  74              		.type	countTx, %object
  75              		.size	countTx, 2
  76              	countTx:
  77 0014 0000     		.space	2
  78              		.comm	lineStr,20,4
  79              		.comm	buffer,64,4
  80              		.global	data
  81 0016 0000     		.align	2
  82              		.type	data, %object
  83              		.size	data, 3
  84              	data:
  85 0018 000000   		.space	3
  86              		.section	.rodata
  87              		.align	2
  88              	.LC0:
  89 0000 20202020 		.ascii	"                    \000"
  89      20202020 
  89      20202020 
  89      20202020 
  89      20202020 
  90 0015 000000   		.align	2
  91              	.LC1:
  92 0018 48656C6C 		.ascii	"Hello\000"
  92      6F00
  93 001e 0000     		.align	2
  94              	.LC2:
  95 0020 44617461 		.ascii	"Data Sent\000"
  95      2053656E 
  95      7400
  96              		.section	.text.main,"ax",%progbits
  97              		.align	2
  98              		.global	main
  99              		.thumb
 100              		.thumb_func
 101              		.type	main, %function
 102              	main:
 103              	.LFB64:
 104              		.file 1 "main.c"
   1:main.c        **** /*******************************************************************************
   2:main.c        **** * File Name: main.c
   3:main.c        **** * Editer: Stephanie Salazar
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccnHOtIU.s 			page 3


   4:main.c        **** * Created: 5/12/18
   5:main.c        **** * Revision: 5/15/18
   6:main.c        **** *
   7:main.c        **** * Description:
   8:main.c        **** *   Receives data from the hyper terminal up to MAX_CRABS.
   9:main.c        **** *   FSK is then started using the input data and then prompts the user for
  10:main.c        **** *   more data. The LCD Display shows the number of crabs sent.
  11:main.c        **** *
  12:main.c        **** * This code was taken from PSoC's USBFS_UART example code and edited to store
  13:main.c        **** * a number for sending to another PSoC
  14:main.c        **** *
  15:main.c        **** ********************************************************************************
  16:main.c        **** * Description:
  17:main.c        **** *   The component is enumerated as a Virtual Com port. Receives data from the 
  18:main.c        **** *   hyper terminal, then sends back the received data.
  19:main.c        **** *   For PSoC3/PSoC5LP, the LCD shows the line settings.
  20:main.c        **** *
  21:main.c        **** * Related Document:
  22:main.c        **** *  Universal Serial Bus Specification Revision 2.0
  23:main.c        **** *  Universal Serial Bus Class Definitions for Communications Devices
  24:main.c        **** *  Revision 1.2
  25:main.c        **** *
  26:main.c        **** ********************************************************************************
  27:main.c        **** * Copyright 2015, Cypress Semiconductor Corporation. All rights reserved.
  28:main.c        **** * This software is owned by Cypress Semiconductor Corporation and is protected
  29:main.c        **** * by and subject to worldwide patent and copyright laws and treaties.
  30:main.c        **** * Therefore, you may use this software only as provided in the license agreement
  31:main.c        **** * accompanying the software package from which you obtained this software.
  32:main.c        **** * CYPRESS AND ITS SUPPLIERS MAKE NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  33:main.c        **** * WITH REGARD TO THIS SOFTWARE, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
  34:main.c        **** * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  35:main.c        **** ********************************************************************************
  36:main.c        **** */
  37:main.c        **** 
  38:main.c        **** 
  39:main.c        **** #include <project.h>
  40:main.c        **** #include "stdio.h"
  41:main.c        **** #include "stdlib.h"
  42:main.c        **** 
  43:main.c        **** #define USBFS_DEVICE    (0u)
  44:main.c        **** 
  45:main.c        **** /* The buffer size is equal to the maximum packet size of the IN and OUT bulk
  46:main.c        **** * endpoints.
  47:main.c        **** */
  48:main.c        **** #define USBUART_BUFFER_SIZE (64u)
  49:main.c        **** #define LINE_STR_LENGTH     (20u)
  50:main.c        **** /* Change data size for sending longer data (n-1) */
  51:main.c        **** #define DATA_SIZE           (7u)
  52:main.c        **** /* Change max crabs to correlate with data size 2^(n) - 1 */
  53:main.c        **** #define MAX_CRABS           (127)
  54:main.c        **** /* Error used for user error */
  55:main.c        **** #define ERROR               (333u)
  56:main.c        **** 
  57:main.c        **** #define ZERO 0x0
  58:main.c        **** #define ONE 0x1
  59:main.c        **** #define TRUE 0x1
  60:main.c        **** #define FALSE 0x0
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccnHOtIU.s 			page 4


  61:main.c        **** #define DATA_LENGTH 4
  62:main.c        **** #define DECODE_VALUE 0x01
  63:main.c        **** //
  64:main.c        **** #define PREFIX_BIT_LENGTH 6
  65:main.c        **** #define PREFIX_MESSAGE 0xFF
  66:main.c        **** 
  67:main.c        **** /*Function Prototypes*/
  68:main.c        **** int GetCrabs(void);
  69:main.c        **** int CalculateCrabs(void);
  70:main.c        **** void DisplayCrabs(int);
  71:main.c        **** 
  72:main.c        **** CY_ISR_PROTO(tx_done); // sleep timer interrupt from UART
  73:main.c        **** 
  74:main.c        **** /*Global Variables*/
  75:main.c        **** int prompt = 1;
  76:main.c        **** int endFlag = 0; // flag for end of user input
  77:main.c        **** int oneDigit = 0; // flag for end of input with one character
  78:main.c        **** int twoDigit = 0; // flag for end of input with two characters
  79:main.c        **** int error = 0; // flag for input error
  80:main.c        **** int i = 2; // to iterate through data array
  81:main.c        **** int dataDone = TRUE; // check if data is done sending
  82:main.c        **** int sendReady = FALSE;
  83:main.c        **** uint16 count;
  84:main.c        **** uint16 countTx = 0;
  85:main.c        **** char8 lineStr[LINE_STR_LENGTH];
  86:main.c        **** uint8 buffer[USBUART_BUFFER_SIZE];
  87:main.c        **** uint8 data[3] = {0};
  88:main.c        **** 
  89:main.c        **** 
  90:main.c        **** /*******************************************************************************
  91:main.c        **** * Function Name: main
  92:main.c        **** ********************************************************************************
  93:main.c        **** */
  94:main.c        **** int main()
  95:main.c        **** {
 105              		.loc 1 95 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 8
 108              		@ frame_needed = 1, uses_anonymous_args = 0
 109 0000 80B5     		push	{r7, lr}
 110              		.cfi_def_cfa_offset 8
 111              		.cfi_offset 7, -8
 112              		.cfi_offset 14, -4
 113 0002 82B0     		sub	sp, sp, #8
 114              		.cfi_def_cfa_offset 16
 115 0004 00AF     		add	r7, sp, #0
 116              		.cfi_def_cfa_register 7
  96:main.c        ****     int crabs = 0;
 117              		.loc 1 96 0
 118 0006 0023     		movs	r3, #0
 119 0008 7B60     		str	r3, [r7, #4]
  97:main.c        ****     int gettingData = TRUE;
 120              		.loc 1 97 0
 121 000a 0123     		movs	r3, #1
 122 000c 3B60     		str	r3, [r7]
  98:main.c        **** 
  99:main.c        ****     CyGlobalIntEnable; /* Enable global interrupts. */
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccnHOtIU.s 			page 5


 123              		.loc 1 99 0
 124              		.syntax unified
 125              	@ 99 "main.c" 1
 126 000e 62B6     		CPSIE   i
 127              	@ 0 "" 2
 100:main.c        ****     /*Block initializations*/
 101:main.c        ****     LCD_Start();
 128              		.loc 1 101 0
 129              		.thumb
 130              		.syntax unified
 131 0010 FFF7FEFF 		bl	LCD_Start
 102:main.c        **** 
 103:main.c        ****     /* Start USBFS and UART  */
 104:main.c        ****     USBUART_Start(USBFS_DEVICE, USBUART_5V_OPERATION);
 132              		.loc 1 104 0
 133 0014 0121     		movs	r1, #1
 134 0016 0020     		movs	r0, #0
 135 0018 FFF7FEFF 		bl	USBUART_Start
 105:main.c        ****     UART_Start();     
 136              		.loc 1 105 0
 137 001c FFF7FEFF 		bl	UART_Start
 106:main.c        ****     
 107:main.c        ****     tx_done_StartEx(tx_done);
 138              		.loc 1 107 0
 139 0020 2248     		ldr	r0, .L8
 140 0022 FFF7FEFF 		bl	tx_done_StartEx
 108:main.c        **** 
 109:main.c        ****     /* Clear LCD line. */
 110:main.c        ****     LCD_Position(0u, 0u);
 141              		.loc 1 110 0
 142 0026 0021     		movs	r1, #0
 143 0028 0020     		movs	r0, #0
 144 002a FFF7FEFF 		bl	LCD_Position
 111:main.c        ****     LCD_PrintString("                    ");
 145              		.loc 1 111 0
 146 002e 2048     		ldr	r0, .L8+4
 147 0030 FFF7FEFF 		bl	LCD_PrintString
 112:main.c        **** 
 113:main.c        ****     /* Output string on LCD. */
 114:main.c        ****     LCD_Position(0u, 0u);
 148              		.loc 1 114 0
 149 0034 0021     		movs	r1, #0
 150 0036 0020     		movs	r0, #0
 151 0038 FFF7FEFF 		bl	LCD_Position
 115:main.c        ****     LCD_PrintString("Hello");
 152              		.loc 1 115 0
 153 003c 1D48     		ldr	r0, .L8+8
 154 003e FFF7FEFF 		bl	LCD_PrintString
 155              	.L7:
 116:main.c        **** 
 117:main.c        ****     for(;;)
 118:main.c        ****     {
 119:main.c        ****         gettingData = 1;
 156              		.loc 1 119 0
 157 0042 0123     		movs	r3, #1
 158 0044 3B60     		str	r3, [r7]
 120:main.c        ****         /* Start UART interface and fill array with 3 parameters until valid */
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccnHOtIU.s 			page 6


 121:main.c        ****         while(gettingData){
 159              		.loc 1 121 0
 160 0046 12E0     		b	.L2
 161              	.L4:
 122:main.c        ****             while(0u == GetCrabs()){
 162              		.loc 1 122 0
 163 0048 00BF     		nop
 164              	.L3:
 165              		.loc 1 122 0 is_stmt 0 discriminator 1
 166 004a FFF7FEFF 		bl	GetCrabs
 167 004e 0346     		mov	r3, r0
 168 0050 002B     		cmp	r3, #0
 169 0052 FAD0     		beq	.L3
 123:main.c        **** 
 124:main.c        ****             }
 125:main.c        ****             crabs = CalculateCrabs();
 170              		.loc 1 125 0 is_stmt 1
 171 0054 FFF7FEFF 		bl	CalculateCrabs
 172 0058 7860     		str	r0, [r7, #4]
 126:main.c        ****             if(crabs != ERROR){
 173              		.loc 1 126 0
 174 005a 7B68     		ldr	r3, [r7, #4]
 175 005c 40F24D12 		movw	r2, #333
 176 0060 9342     		cmp	r3, r2
 177 0062 04D0     		beq	.L2
 127:main.c        ****                 DisplayCrabs(crabs);
 178              		.loc 1 127 0
 179 0064 7868     		ldr	r0, [r7, #4]
 180 0066 FFF7FEFF 		bl	DisplayCrabs
 128:main.c        ****                 gettingData = 0;
 181              		.loc 1 128 0
 182 006a 0023     		movs	r3, #0
 183 006c 3B60     		str	r3, [r7]
 184              	.L2:
 121:main.c        ****             while(0u == GetCrabs()){
 185              		.loc 1 121 0
 186 006e 3B68     		ldr	r3, [r7]
 187 0070 002B     		cmp	r3, #0
 188 0072 E9D1     		bne	.L4
 129:main.c        ****             }
 130:main.c        ****         }
 131:main.c        ****         UART_PutChar(crabs); 
 189              		.loc 1 131 0
 190 0074 7B68     		ldr	r3, [r7, #4]
 191 0076 DBB2     		uxtb	r3, r3
 192 0078 1846     		mov	r0, r3
 193 007a FFF7FEFF 		bl	UART_PutChar
 132:main.c        ****         dataDone = FALSE;
 194              		.loc 1 132 0
 195 007e 0E4B     		ldr	r3, .L8+12
 196 0080 0022     		movs	r2, #0
 197 0082 1A60     		str	r2, [r3]
 133:main.c        ****         while (0u == USBUART_CDCIsReady())
 198              		.loc 1 133 0
 199 0084 00BF     		nop
 200              	.L5:
 201              		.loc 1 133 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccnHOtIU.s 			page 7


 202 0086 FFF7FEFF 		bl	USBUART_CDCIsReady
 203 008a 0346     		mov	r3, r0
 204 008c 002B     		cmp	r3, #0
 205 008e FAD0     		beq	.L5
 134:main.c        ****         {
 135:main.c        ****         }
 136:main.c        ****         USBUART_PutString("Data Sent");
 206              		.loc 1 136 0 is_stmt 1
 207 0090 0A48     		ldr	r0, .L8+16
 208 0092 FFF7FEFF 		bl	USBUART_PutString
 137:main.c        ****         while (0u == USBUART_CDCIsReady())
 209              		.loc 1 137 0
 210 0096 00BF     		nop
 211              	.L6:
 212              		.loc 1 137 0 is_stmt 0 discriminator 1
 213 0098 FFF7FEFF 		bl	USBUART_CDCIsReady
 214 009c 0346     		mov	r3, r0
 215 009e 002B     		cmp	r3, #0
 216 00a0 FAD0     		beq	.L6
 138:main.c        ****         {
 139:main.c        ****         }
 140:main.c        ****         USBUART_PutCRLF();
 217              		.loc 1 140 0 is_stmt 1
 218 00a2 FFF7FEFF 		bl	USBUART_PutCRLF
 141:main.c        ****         Data_Timer_Start();
 219              		.loc 1 141 0
 220 00a6 FFF7FEFF 		bl	Data_Timer_Start
 142:main.c        ****             
 143:main.c        ****     } // end for(;;)
 221              		.loc 1 143 0
 222 00aa CAE7     		b	.L7
 223              	.L9:
 224              		.align	2
 225              	.L8:
 226 00ac 00000000 		.word	tx_done
 227 00b0 00000000 		.word	.LC0
 228 00b4 18000000 		.word	.LC1
 229 00b8 00000000 		.word	dataDone
 230 00bc 20000000 		.word	.LC2
 231              		.cfi_endproc
 232              	.LFE64:
 233              		.size	main, .-main
 234              		.section	.rodata
 235 002a 0000     		.align	2
 236              	.LC3:
 237 002c 506C6561 		.ascii	"Please enter amount of crabs (up to 127). Terminate"
 237      73652065 
 237      6E746572 
 237      20616D6F 
 237      756E7420 
 238 005f 73207769 		.ascii	"s with carriage return or third character. Any non-"
 238      74682063 
 238      61727269 
 238      61676520 
 238      72657475 
 239 0092 696E7465 		.ascii	"integer will be interpreted as a 0.\000"
 239      67657220 
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccnHOtIU.s 			page 8


 239      77696C6C 
 239      20626520 
 239      696E7465 
 240 00b6 0000     		.align	2
 241              	.LC4:
 242 00b8 3000     		.ascii	"0\000"
 243 00ba 0000     		.align	2
 244              	.LC5:
 245 00bc 0D00     		.ascii	"\015\000"
 246              		.section	.text.GetCrabs,"ax",%progbits
 247              		.align	2
 248              		.global	GetCrabs
 249              		.thumb
 250              		.thumb_func
 251              		.type	GetCrabs, %function
 252              	GetCrabs:
 253              	.LFB65:
 144:main.c        **** } // end main
 145:main.c        **** 
 146:main.c        **** 
 147:main.c        **** /*******************************************************************************************
 148:main.c        ****  * function: int GetCrabs()
 149:main.c        ****  * parameters: hex_value - an 8 bit (1 byte) value specifying what data you want to send
 150:main.c        ****  *             bT - the current bit time
 151:main.c        ****  * returns: bitCase - a high or low signal to be sent to an output pin
 152:main.c        ****  * description: This function starts UART interface and waits for a valid amount of crabs
 153:main.c        ****  * entered by user
 154:main.c        ****  *******************************************************************************************
 155:main.c        ****  */
 156:main.c        **** int GetCrabs()
 157:main.c        **** {
 254              		.loc 1 157 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 8
 257              		@ frame_needed = 1, uses_anonymous_args = 0
 258 0000 90B5     		push	{r4, r7, lr}
 259              		.cfi_def_cfa_offset 12
 260              		.cfi_offset 4, -12
 261              		.cfi_offset 7, -8
 262              		.cfi_offset 14, -4
 263 0002 83B0     		sub	sp, sp, #12
 264              		.cfi_def_cfa_offset 24
 265 0004 00AF     		add	r7, sp, #0
 266              		.cfi_def_cfa_register 7
 158:main.c        ****     uint16 crabs = 0;
 267              		.loc 1 158 0
 268 0006 0023     		movs	r3, #0
 269 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 159:main.c        ****     /* Host can send double SET_INTERFACE request. */
 160:main.c        ****     if (0u != USBUART_IsConfigurationChanged())
 270              		.loc 1 160 0
 271 000a FFF7FEFF 		bl	USBUART_IsConfigurationChanged
 272 000e 0346     		mov	r3, r0
 273 0010 002B     		cmp	r3, #0
 274 0012 06D0     		beq	.L11
 161:main.c        ****     {
 162:main.c        ****         /* Initialize IN endpoints when device is configured. */
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccnHOtIU.s 			page 9


 163:main.c        ****         if (0u != USBUART_GetConfiguration())
 275              		.loc 1 163 0
 276 0014 FFF7FEFF 		bl	USBUART_GetConfiguration
 277 0018 0346     		mov	r3, r0
 278 001a 002B     		cmp	r3, #0
 279 001c 01D0     		beq	.L11
 164:main.c        ****         {
 165:main.c        ****             /* Enumeration is done, enable OUT endpoint to receive data 
 166:main.c        ****             * from host. */
 167:main.c        ****             USBUART_CDC_Init();
 280              		.loc 1 167 0
 281 001e FFF7FEFF 		bl	USBUART_CDC_Init
 282              	.L11:
 168:main.c        ****         }
 169:main.c        ****     }
 170:main.c        **** 
 171:main.c        ****         /* Service USB CDC when device is configured. */
 172:main.c        ****         if (0u != USBUART_GetConfiguration())
 283              		.loc 1 172 0
 284 0022 FFF7FEFF 		bl	USBUART_GetConfiguration
 285 0026 0346     		mov	r3, r0
 286 0028 002B     		cmp	r3, #0
 287 002a 77D0     		beq	.L12
 173:main.c        ****         {
 174:main.c        ****             /* Wait until component is ready to send data to host. */
 175:main.c        ****             while (0u == USBUART_CDCIsReady())
 288              		.loc 1 175 0
 289 002c 00BF     		nop
 290              	.L13:
 291              		.loc 1 175 0 is_stmt 0 discriminator 1
 292 002e FFF7FEFF 		bl	USBUART_CDCIsReady
 293 0032 0346     		mov	r3, r0
 294 0034 002B     		cmp	r3, #0
 295 0036 FAD0     		beq	.L13
 176:main.c        ****                 {
 177:main.c        ****                 }
 178:main.c        ****             if(prompt == TRUE){
 296              		.loc 1 178 0 is_stmt 1
 297 0038 3E4B     		ldr	r3, .L28
 298 003a 1B68     		ldr	r3, [r3]
 299 003c 012B     		cmp	r3, #1
 300 003e 02D1     		bne	.L27
 179:main.c        ****                 USBUART_PutString("Please enter amount of crabs (up to 127). Terminates with carria
 301              		.loc 1 179 0
 302 0040 3D48     		ldr	r0, .L28+4
 303 0042 FFF7FEFF 		bl	USBUART_PutString
 304              	.L27:
 180:main.c        ****             }
 181:main.c        ****             /* Wait until component is ready to send data to host. */
 182:main.c        ****             while (0u == USBUART_CDCIsReady())
 305              		.loc 1 182 0
 306 0046 00BF     		nop
 307              	.L15:
 308              		.loc 1 182 0 is_stmt 0 discriminator 1
 309 0048 FFF7FEFF 		bl	USBUART_CDCIsReady
 310 004c 0346     		mov	r3, r0
 311 004e 002B     		cmp	r3, #0
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccnHOtIU.s 			page 10


 312 0050 FAD0     		beq	.L15
 183:main.c        ****                 {
 184:main.c        ****                 }
 185:main.c        ****             if(prompt == TRUE){
 313              		.loc 1 185 0 is_stmt 1
 314 0052 384B     		ldr	r3, .L28
 315 0054 1B68     		ldr	r3, [r3]
 316 0056 012B     		cmp	r3, #1
 317 0058 04D1     		bne	.L16
 186:main.c        ****                 USBUART_PutCRLF();
 318              		.loc 1 186 0
 319 005a FFF7FEFF 		bl	USBUART_PutCRLF
 187:main.c        ****                 prompt = 0;
 320              		.loc 1 187 0
 321 005e 354B     		ldr	r3, .L28
 322 0060 0022     		movs	r2, #0
 323 0062 1A60     		str	r2, [r3]
 324              	.L16:
 188:main.c        ****             }
 189:main.c        ****                 
 190:main.c        ****             /* Check for input data from host. */
 191:main.c        ****             if (0u != USBUART_DataIsReady())
 325              		.loc 1 191 0
 326 0064 FFF7FEFF 		bl	USBUART_DataIsReady
 327 0068 0346     		mov	r3, r0
 328 006a 002B     		cmp	r3, #0
 329 006c 56D0     		beq	.L12
 192:main.c        ****             {
 193:main.c        ****                 /* Read received data and re-enable OUT endpoint. */
 194:main.c        ****                 count = USBUART_GetAll(buffer);
 330              		.loc 1 194 0
 331 006e 3348     		ldr	r0, .L28+8
 332 0070 FFF7FEFF 		bl	USBUART_GetAll
 333 0074 0346     		mov	r3, r0
 334 0076 1A46     		mov	r2, r3
 335 0078 314B     		ldr	r3, .L28+12
 336 007a 1A80     		strh	r2, [r3]	@ movhi
 195:main.c        ****     
 196:main.c        ****                 if (strncmp (buffer,"0",1) == 0){
 197:main.c        ****                     //USBUART_PutString("True Zero");
 198:main.c        ****                 }
 199:main.c        ****                 if (strncmp (buffer,"\r",1) == 0){
 337              		.loc 1 199 0
 338 007c 2F4B     		ldr	r3, .L28+8
 339 007e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 340 0080 304B     		ldr	r3, .L28+16
 341 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 342 0084 9A42     		cmp	r2, r3
 343 0086 12D1     		bne	.L17
 200:main.c        ****                     //USBUART_PutString("Carriage Return");
 201:main.c        **** 
 202:main.c        ****                     if(i == 1){
 344              		.loc 1 202 0
 345 0088 2F4B     		ldr	r3, .L28+20
 346 008a 1B68     		ldr	r3, [r3]
 347 008c 012B     		cmp	r3, #1
 348 008e 03D1     		bne	.L18
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccnHOtIU.s 			page 11


 203:main.c        ****                         oneDigit = 1;
 349              		.loc 1 203 0
 350 0090 2E4B     		ldr	r3, .L28+24
 351 0092 0122     		movs	r2, #1
 352 0094 1A60     		str	r2, [r3]
 353 0096 06E0     		b	.L19
 354              	.L18:
 204:main.c        ****                     }else if(i == 0){
 355              		.loc 1 204 0
 356 0098 2B4B     		ldr	r3, .L28+20
 357 009a 1B68     		ldr	r3, [r3]
 358 009c 002B     		cmp	r3, #0
 359 009e 02D1     		bne	.L19
 205:main.c        ****                         twoDigit = 1;
 360              		.loc 1 205 0
 361 00a0 2B4B     		ldr	r3, .L28+28
 362 00a2 0122     		movs	r2, #1
 363 00a4 1A60     		str	r2, [r3]
 364              	.L19:
 206:main.c        ****                     }
 207:main.c        ****                     endFlag = 1; // set flag to add numbers
 365              		.loc 1 207 0
 366 00a6 2B4B     		ldr	r3, .L28+32
 367 00a8 0122     		movs	r2, #1
 368 00aa 1A60     		str	r2, [r3]
 369 00ac 08E0     		b	.L20
 370              	.L17:
 208:main.c        ****                 }else{
 209:main.c        ****                     // Convert string to int
 210:main.c        ****                     data[i] = (uint8)atoi(buffer);
 371              		.loc 1 210 0
 372 00ae 264B     		ldr	r3, .L28+20
 373 00b0 1C68     		ldr	r4, [r3]
 374 00b2 2248     		ldr	r0, .L28+8
 375 00b4 FFF7FEFF 		bl	atoi
 376 00b8 0346     		mov	r3, r0
 377 00ba DAB2     		uxtb	r2, r3
 378 00bc 264B     		ldr	r3, .L28+36
 379 00be 1A55     		strb	r2, [r3, r4]
 380              	.L20:
 211:main.c        ****                 }
 212:main.c        ****                 
 213:main.c        ****                 /* Make sure data array stays in bounds (size = 3) */
 214:main.c        ****                 if(i == 0){
 381              		.loc 1 214 0
 382 00c0 214B     		ldr	r3, .L28+20
 383 00c2 1B68     		ldr	r3, [r3]
 384 00c4 002B     		cmp	r3, #0
 385 00c6 06D1     		bne	.L21
 215:main.c        ****                     i = 2;
 386              		.loc 1 215 0
 387 00c8 1F4B     		ldr	r3, .L28+20
 388 00ca 0222     		movs	r2, #2
 389 00cc 1A60     		str	r2, [r3]
 216:main.c        ****                     endFlag = 1; // 3 characters have been entered
 390              		.loc 1 216 0
 391 00ce 214B     		ldr	r3, .L28+32
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccnHOtIU.s 			page 12


 392 00d0 0122     		movs	r2, #1
 393 00d2 1A60     		str	r2, [r3]
 394 00d4 04E0     		b	.L22
 395              	.L21:
 217:main.c        ****                 }else{
 218:main.c        ****                     i--;
 396              		.loc 1 218 0
 397 00d6 1C4B     		ldr	r3, .L28+20
 398 00d8 1B68     		ldr	r3, [r3]
 399 00da 013B     		subs	r3, r3, #1
 400 00dc 1A4A     		ldr	r2, .L28+20
 401 00de 1360     		str	r3, [r2]
 402              	.L22:
 219:main.c        ****                 }
 220:main.c        ****                 
 221:main.c        ****                 if (0u != count)
 403              		.loc 1 221 0
 404 00e0 174B     		ldr	r3, .L28+12
 405 00e2 1B88     		ldrh	r3, [r3]
 406 00e4 002B     		cmp	r3, #0
 407 00e6 19D0     		beq	.L12
 222:main.c        ****                 {
 223:main.c        ****                     /* Wait until component is ready to send data to host. */
 224:main.c        ****                     while (0u == USBUART_CDCIsReady())
 408              		.loc 1 224 0
 409 00e8 00BF     		nop
 410              	.L23:
 411              		.loc 1 224 0 is_stmt 0 discriminator 1
 412 00ea FFF7FEFF 		bl	USBUART_CDCIsReady
 413 00ee 0346     		mov	r3, r0
 414 00f0 002B     		cmp	r3, #0
 415 00f2 FAD0     		beq	.L23
 225:main.c        ****                     {
 226:main.c        ****                     }
 227:main.c        **** 
 228:main.c        ****                     /* Send data back to PC */
 229:main.c        ****                     USBUART_PutData(buffer, count);
 416              		.loc 1 229 0 is_stmt 1
 417 00f4 124B     		ldr	r3, .L28+12
 418 00f6 1B88     		ldrh	r3, [r3]
 419 00f8 1946     		mov	r1, r3
 420 00fa 1048     		ldr	r0, .L28+8
 421 00fc FFF7FEFF 		bl	USBUART_PutData
 230:main.c        **** 
 231:main.c        ****                     /* If the last sent packet is exactly the maximum packet 
 232:main.c        ****                     *  size, it is followed by a zero-length packet to assure
 233:main.c        ****                     *  that the end of the segment is properly identified by 
 234:main.c        ****                     *  the terminal.
 235:main.c        ****                     */
 236:main.c        ****                     if (USBUART_BUFFER_SIZE == count)
 422              		.loc 1 236 0
 423 0100 0F4B     		ldr	r3, .L28+12
 424 0102 1B88     		ldrh	r3, [r3]
 425 0104 402B     		cmp	r3, #64
 426 0106 09D1     		bne	.L12
 237:main.c        ****                     {
 238:main.c        ****                         /* Wait until component is ready to send data to PC. */
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccnHOtIU.s 			page 13


 239:main.c        ****                         while (0u == USBUART_CDCIsReady())
 427              		.loc 1 239 0
 428 0108 00BF     		nop
 429              	.L24:
 430              		.loc 1 239 0 is_stmt 0 discriminator 1
 431 010a FFF7FEFF 		bl	USBUART_CDCIsReady
 432 010e 0346     		mov	r3, r0
 433 0110 002B     		cmp	r3, #0
 434 0112 FAD0     		beq	.L24
 240:main.c        ****                         {
 241:main.c        ****                         }
 242:main.c        **** 
 243:main.c        ****                         /* Send zero-length packet to PC. */
 244:main.c        ****                         USBUART_PutData(NULL, 0u);
 435              		.loc 1 244 0 is_stmt 1
 436 0114 0021     		movs	r1, #0
 437 0116 0020     		movs	r0, #0
 438 0118 FFF7FEFF 		bl	USBUART_PutData
 439              	.L12:
 245:main.c        ****                     }
 246:main.c        ****                 }
 247:main.c        ****             } // end (0u != USBUART_DataIsReady())
 248:main.c        ****         } // end (0u != USBUART_GetConfiguration())
 249:main.c        ****     if(endFlag == 1){
 440              		.loc 1 249 0
 441 011c 0D4B     		ldr	r3, .L28+32
 442 011e 1B68     		ldr	r3, [r3]
 443 0120 012B     		cmp	r3, #1
 444 0122 01D1     		bne	.L25
 250:main.c        ****         return 1;
 445              		.loc 1 250 0
 446 0124 0123     		movs	r3, #1
 447 0126 00E0     		b	.L26
 448              	.L25:
 251:main.c        ****     }else{
 252:main.c        ****         return 0;
 449              		.loc 1 252 0
 450 0128 0023     		movs	r3, #0
 451              	.L26:
 253:main.c        ****     }
 254:main.c        **** }//end GetCrabs()
 452              		.loc 1 254 0
 453 012a 1846     		mov	r0, r3
 454 012c 0C37     		adds	r7, r7, #12
 455              		.cfi_def_cfa_offset 12
 456 012e BD46     		mov	sp, r7
 457              		.cfi_def_cfa_register 13
 458              		@ sp needed
 459 0130 90BD     		pop	{r4, r7, pc}
 460              	.L29:
 461 0132 00BF     		.align	2
 462              	.L28:
 463 0134 00000000 		.word	prompt
 464 0138 2C000000 		.word	.LC3
 465 013c 00000000 		.word	buffer
 466 0140 00000000 		.word	count
 467 0144 BC000000 		.word	.LC5
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccnHOtIU.s 			page 14


 468 0148 00000000 		.word	i
 469 014c 00000000 		.word	oneDigit
 470 0150 00000000 		.word	twoDigit
 471 0154 00000000 		.word	endFlag
 472 0158 00000000 		.word	data
 473              		.cfi_endproc
 474              	.LFE65:
 475              		.size	GetCrabs, .-GetCrabs
 476              		.section	.rodata
 477 00be 0000     		.align	2
 478              	.LC6:
 479 00c0 4572726F 		.ascii	"Error. Not Ready for new data.\000"
 479      722E204E 
 479      6F742052 
 479      65616479 
 479      20666F72 
 480 00df 00       		.align	2
 481              	.LC7:
 482 00e0 4572726F 		.ascii	"Error. Please enter a number UP TO 127\000"
 482      722E2050 
 482      6C656173 
 482      6520656E 
 482      74657220 
 483              		.section	.text.CalculateCrabs,"ax",%progbits
 484              		.align	2
 485              		.global	CalculateCrabs
 486              		.thumb
 487              		.thumb_func
 488              		.type	CalculateCrabs, %function
 489              	CalculateCrabs:
 490              	.LFB66:
 255:main.c        **** 
 256:main.c        **** /*******************************************************************************************
 257:main.c        ****  * function: int CalculateCrabs()
 258:main.c        ****  * parameters: none
 259:main.c        ****  * returns: int crabs - amount of crabs from user input 
 260:main.c        ****  * description: This function takes an array of size three and converts
 261:main.c        ****  * to a single number
 262:main.c        ****  *******************************************************************************************
 263:main.c        ****  */
 264:main.c        **** int CalculateCrabs()
 265:main.c        **** {
 491              		.loc 1 265 0
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 8
 494              		@ frame_needed = 1, uses_anonymous_args = 0
 495 0000 80B5     		push	{r7, lr}
 496              		.cfi_def_cfa_offset 8
 497              		.cfi_offset 7, -8
 498              		.cfi_offset 14, -4
 499 0002 82B0     		sub	sp, sp, #8
 500              		.cfi_def_cfa_offset 16
 501 0004 00AF     		add	r7, sp, #0
 502              		.cfi_def_cfa_register 7
 266:main.c        ****     int crabs;
 267:main.c        ****     /* Wait until component is ready to send data to host. */
 268:main.c        ****     while (0u == USBUART_CDCIsReady())
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccnHOtIU.s 			page 15


 503              		.loc 1 268 0
 504 0006 00BF     		nop
 505              	.L31:
 506              		.loc 1 268 0 is_stmt 0 discriminator 1
 507 0008 FFF7FEFF 		bl	USBUART_CDCIsReady
 508 000c 0346     		mov	r3, r0
 509 000e 002B     		cmp	r3, #0
 510 0010 FAD0     		beq	.L31
 269:main.c        ****     {
 270:main.c        ****     }
 271:main.c        ****     USBUART_PutCRLF();
 511              		.loc 1 271 0 is_stmt 1
 512 0012 FFF7FEFF 		bl	USBUART_PutCRLF
 272:main.c        ****     /* Shift data if carriage return was pressed */
 273:main.c        ****     if(oneDigit == 1){
 513              		.loc 1 273 0
 514 0016 4E4B     		ldr	r3, .L43
 515 0018 1B68     		ldr	r3, [r3]
 516 001a 012B     		cmp	r3, #1
 517 001c 0AD1     		bne	.L32
 274:main.c        ****         //USBUART_PutString("one digit");
 275:main.c        ****         data[0] = data[2];
 518              		.loc 1 275 0
 519 001e 4D4B     		ldr	r3, .L43+4
 520 0020 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 521 0022 4C4B     		ldr	r3, .L43+4
 522 0024 1A70     		strb	r2, [r3]
 276:main.c        ****         data[2] = 0;
 523              		.loc 1 276 0
 524 0026 4B4B     		ldr	r3, .L43+4
 525 0028 0022     		movs	r2, #0
 526 002a 9A70     		strb	r2, [r3, #2]
 277:main.c        ****         oneDigit = 0;
 527              		.loc 1 277 0
 528 002c 484B     		ldr	r3, .L43
 529 002e 0022     		movs	r2, #0
 530 0030 1A60     		str	r2, [r3]
 531 0032 11E0     		b	.L33
 532              	.L32:
 278:main.c        ****     }else if(twoDigit == 1){
 533              		.loc 1 278 0
 534 0034 484B     		ldr	r3, .L43+8
 535 0036 1B68     		ldr	r3, [r3]
 536 0038 012B     		cmp	r3, #1
 537 003a 0DD1     		bne	.L33
 279:main.c        ****         //USBUART_PutString("two digits");
 280:main.c        ****         data[0] = data[1];
 538              		.loc 1 280 0
 539 003c 454B     		ldr	r3, .L43+4
 540 003e 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 541 0040 444B     		ldr	r3, .L43+4
 542 0042 1A70     		strb	r2, [r3]
 281:main.c        ****         data[1] = data[2];
 543              		.loc 1 281 0
 544 0044 434B     		ldr	r3, .L43+4
 545 0046 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 546 0048 424B     		ldr	r3, .L43+4
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccnHOtIU.s 			page 16


 547 004a 5A70     		strb	r2, [r3, #1]
 282:main.c        ****         data[2] = 0;
 548              		.loc 1 282 0
 549 004c 414B     		ldr	r3, .L43+4
 550 004e 0022     		movs	r2, #0
 551 0050 9A70     		strb	r2, [r3, #2]
 283:main.c        ****         twoDigit = 0;
 552              		.loc 1 283 0
 553 0052 414B     		ldr	r3, .L43+8
 554 0054 0022     		movs	r2, #0
 555 0056 1A60     		str	r2, [r3]
 556              	.L33:
 284:main.c        ****     }
 285:main.c        ****     /* Apply digit place to integer */
 286:main.c        ****     data[0] = data[0] * 1;
 557              		.loc 1 286 0
 558 0058 3E4B     		ldr	r3, .L43+4
 559 005a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 560 005c 3D4B     		ldr	r3, .L43+4
 561 005e 1A70     		strb	r2, [r3]
 287:main.c        ****     data[1] = data[1] * 10;
 562              		.loc 1 287 0
 563 0060 3C4B     		ldr	r3, .L43+4
 564 0062 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 565 0064 1A46     		mov	r2, r3
 566 0066 9200     		lsls	r2, r2, #2
 567 0068 1344     		add	r3, r3, r2
 568 006a 5B00     		lsls	r3, r3, #1
 569 006c DAB2     		uxtb	r2, r3
 570 006e 394B     		ldr	r3, .L43+4
 571 0070 5A70     		strb	r2, [r3, #1]
 288:main.c        ****     data[2] = data[2] * 100;
 572              		.loc 1 288 0
 573 0072 384B     		ldr	r3, .L43+4
 574 0074 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 575 0076 1A46     		mov	r2, r3
 576 0078 9200     		lsls	r2, r2, #2
 577 007a 1344     		add	r3, r3, r2
 578 007c 1A46     		mov	r2, r3
 579 007e 9100     		lsls	r1, r2, #2
 580 0080 1A46     		mov	r2, r3
 581 0082 0B46     		mov	r3, r1
 582 0084 1344     		add	r3, r3, r2
 583 0086 9B00     		lsls	r3, r3, #2
 584 0088 DAB2     		uxtb	r2, r3
 585 008a 324B     		ldr	r3, .L43+4
 586 008c 9A70     		strb	r2, [r3, #2]
 289:main.c        ****     crabs = data[0] + data[1] + data[2];
 587              		.loc 1 289 0
 588 008e 314B     		ldr	r3, .L43+4
 589 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 590 0092 1A46     		mov	r2, r3
 591 0094 2F4B     		ldr	r3, .L43+4
 592 0096 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 593 0098 1344     		add	r3, r3, r2
 594 009a 2E4A     		ldr	r2, .L43+4
 595 009c 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccnHOtIU.s 			page 17


 596 009e 1344     		add	r3, r3, r2
 597 00a0 7B60     		str	r3, [r7, #4]
 290:main.c        ****     if(dataDone == FALSE){
 598              		.loc 1 290 0
 599 00a2 2E4B     		ldr	r3, .L43+12
 600 00a4 1B68     		ldr	r3, [r3]
 601 00a6 002B     		cmp	r3, #0
 602 00a8 13D1     		bne	.L34
 291:main.c        ****         error = TRUE;
 603              		.loc 1 291 0
 604 00aa 2D4B     		ldr	r3, .L43+16
 605 00ac 0122     		movs	r2, #1
 606 00ae 1A60     		str	r2, [r3]
 292:main.c        ****         /* Wait until component is ready to send data to host. */
 293:main.c        ****         while (0u == USBUART_CDCIsReady())
 607              		.loc 1 293 0
 608 00b0 00BF     		nop
 609              	.L35:
 610              		.loc 1 293 0 is_stmt 0 discriminator 1
 611 00b2 FFF7FEFF 		bl	USBUART_CDCIsReady
 612 00b6 0346     		mov	r3, r0
 613 00b8 002B     		cmp	r3, #0
 614 00ba FAD0     		beq	.L35
 294:main.c        ****         {
 295:main.c        ****         }
 296:main.c        ****         USBUART_PutString("Error. Not Ready for new data.");
 615              		.loc 1 296 0 is_stmt 1
 616 00bc 2948     		ldr	r0, .L43+20
 617 00be FFF7FEFF 		bl	USBUART_PutString
 297:main.c        ****         /* Wait until component is ready to send data to host. */
 298:main.c        ****         while (0u == USBUART_CDCIsReady())
 618              		.loc 1 298 0
 619 00c2 00BF     		nop
 620              	.L36:
 621              		.loc 1 298 0 is_stmt 0 discriminator 1
 622 00c4 FFF7FEFF 		bl	USBUART_CDCIsReady
 623 00c8 0346     		mov	r3, r0
 624 00ca 002B     		cmp	r3, #0
 625 00cc FAD0     		beq	.L36
 299:main.c        ****         {
 300:main.c        ****         }
 301:main.c        ****         USBUART_PutCRLF();
 626              		.loc 1 301 0 is_stmt 1
 627 00ce FFF7FEFF 		bl	USBUART_PutCRLF
 628              	.L34:
 302:main.c        ****     }
 303:main.c        ****     if(crabs > MAX_CRABS){
 629              		.loc 1 303 0
 630 00d2 7B68     		ldr	r3, [r7, #4]
 631 00d4 7F2B     		cmp	r3, #127
 632 00d6 15DD     		ble	.L37
 304:main.c        ****         crabs = 0;
 633              		.loc 1 304 0
 634 00d8 0023     		movs	r3, #0
 635 00da 7B60     		str	r3, [r7, #4]
 305:main.c        ****         error = TRUE;
 636              		.loc 1 305 0
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccnHOtIU.s 			page 18


 637 00dc 204B     		ldr	r3, .L43+16
 638 00de 0122     		movs	r2, #1
 639 00e0 1A60     		str	r2, [r3]
 306:main.c        ****         /* Wait until component is ready to send data to host. */
 307:main.c        ****         while (0u == USBUART_CDCIsReady())
 640              		.loc 1 307 0
 641 00e2 00BF     		nop
 642              	.L38:
 643              		.loc 1 307 0 is_stmt 0 discriminator 1
 644 00e4 FFF7FEFF 		bl	USBUART_CDCIsReady
 645 00e8 0346     		mov	r3, r0
 646 00ea 002B     		cmp	r3, #0
 647 00ec FAD0     		beq	.L38
 308:main.c        ****         {
 309:main.c        ****         }
 310:main.c        ****         USBUART_PutString("Error. Please enter a number UP TO 127");
 648              		.loc 1 310 0 is_stmt 1
 649 00ee 1E48     		ldr	r0, .L43+24
 650 00f0 FFF7FEFF 		bl	USBUART_PutString
 311:main.c        ****         /* Wait until component is ready to send data to host. */
 312:main.c        ****         while (0u == USBUART_CDCIsReady())
 651              		.loc 1 312 0
 652 00f4 00BF     		nop
 653              	.L39:
 654              		.loc 1 312 0 is_stmt 0 discriminator 1
 655 00f6 FFF7FEFF 		bl	USBUART_CDCIsReady
 656 00fa 0346     		mov	r3, r0
 657 00fc 002B     		cmp	r3, #0
 658 00fe FAD0     		beq	.L39
 313:main.c        ****         {
 314:main.c        ****         }
 315:main.c        ****         USBUART_PutCRLF();
 659              		.loc 1 315 0 is_stmt 1
 660 0100 FFF7FEFF 		bl	USBUART_PutCRLF
 661              	.L37:
 316:main.c        ****     }
 317:main.c        ****     /* reset array */
 318:main.c        ****     data[0] = 0; 
 662              		.loc 1 318 0
 663 0104 134B     		ldr	r3, .L43+4
 664 0106 0022     		movs	r2, #0
 665 0108 1A70     		strb	r2, [r3]
 319:main.c        ****     data[1] = 0;
 666              		.loc 1 319 0
 667 010a 124B     		ldr	r3, .L43+4
 668 010c 0022     		movs	r2, #0
 669 010e 5A70     		strb	r2, [r3, #1]
 320:main.c        ****     data[2] = 0;
 670              		.loc 1 320 0
 671 0110 104B     		ldr	r3, .L43+4
 672 0112 0022     		movs	r2, #0
 673 0114 9A70     		strb	r2, [r3, #2]
 321:main.c        ****     i = 2; // reset indexing for array
 674              		.loc 1 321 0
 675 0116 154B     		ldr	r3, .L43+28
 676 0118 0222     		movs	r2, #2
 677 011a 1A60     		str	r2, [r3]
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccnHOtIU.s 			page 19


 322:main.c        ****     endFlag = 0; // reset endFlag for gathering new data
 678              		.loc 1 322 0
 679 011c 144B     		ldr	r3, .L43+32
 680 011e 0022     		movs	r2, #0
 681 0120 1A60     		str	r2, [r3]
 323:main.c        ****                     
 324:main.c        ****     if(error == 1){
 682              		.loc 1 324 0
 683 0122 0F4B     		ldr	r3, .L43+16
 684 0124 1B68     		ldr	r3, [r3]
 685 0126 012B     		cmp	r3, #1
 686 0128 05D1     		bne	.L40
 325:main.c        ****         error = 0; // reset error checking
 687              		.loc 1 325 0
 688 012a 0D4B     		ldr	r3, .L43+16
 689 012c 0022     		movs	r2, #0
 690 012e 1A60     		str	r2, [r3]
 326:main.c        ****         return ERROR;
 691              		.loc 1 326 0
 692 0130 40F24D13 		movw	r3, #333
 693 0134 07E0     		b	.L41
 694              	.L40:
 327:main.c        ****     }
 328:main.c        ****     else if(dataDone == FALSE){
 695              		.loc 1 328 0
 696 0136 094B     		ldr	r3, .L43+12
 697 0138 1B68     		ldr	r3, [r3]
 698 013a 002B     		cmp	r3, #0
 699 013c 02D1     		bne	.L42
 329:main.c        ****         return ERROR;
 700              		.loc 1 329 0
 701 013e 40F24D13 		movw	r3, #333
 702 0142 00E0     		b	.L41
 703              	.L42:
 330:main.c        ****     }else{
 331:main.c        ****         //prompt = TRUE;
 332:main.c        ****         return crabs;
 704              		.loc 1 332 0
 705 0144 7B68     		ldr	r3, [r7, #4]
 706              	.L41:
 333:main.c        ****     }
 334:main.c        **** } /* END OF CalculateCrabs() */
 707              		.loc 1 334 0
 708 0146 1846     		mov	r0, r3
 709 0148 0837     		adds	r7, r7, #8
 710              		.cfi_def_cfa_offset 8
 711 014a BD46     		mov	sp, r7
 712              		.cfi_def_cfa_register 13
 713              		@ sp needed
 714 014c 80BD     		pop	{r7, pc}
 715              	.L44:
 716 014e 00BF     		.align	2
 717              	.L43:
 718 0150 00000000 		.word	oneDigit
 719 0154 00000000 		.word	data
 720 0158 00000000 		.word	twoDigit
 721 015c 00000000 		.word	dataDone
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccnHOtIU.s 			page 20


 722 0160 00000000 		.word	error
 723 0164 C0000000 		.word	.LC6
 724 0168 E0000000 		.word	.LC7
 725 016c 00000000 		.word	i
 726 0170 00000000 		.word	endFlag
 727              		.cfi_endproc
 728              	.LFE66:
 729              		.size	CalculateCrabs, .-CalculateCrabs
 730              		.section	.rodata
 731 0107 00       		.align	2
 732              	.LC8:
 733 0108 20202020 		.ascii	"           \000"
 733      20202020 
 733      20202000 
 734              		.align	2
 735              	.LC9:
 736 0114 43726162 		.ascii	"Crabs: %d\000"
 736      733A2025 
 736      6400
 737              		.section	.text.DisplayCrabs,"ax",%progbits
 738              		.align	2
 739              		.global	DisplayCrabs
 740              		.thumb
 741              		.thumb_func
 742              		.type	DisplayCrabs, %function
 743              	DisplayCrabs:
 744              	.LFB67:
 335:main.c        **** 
 336:main.c        **** /*******************************************************************************************
 337:main.c        ****  * function: void DisplayCrabs()
 338:main.c        ****  * parameters: int crabs
 339:main.c        ****  * returns: void
 340:main.c        ****  * description: Displays the number of crabs on LCD Display
 341:main.c        ****  *******************************************************************************************
 342:main.c        ****  */
 343:main.c        **** void DisplayCrabs(int crabs){
 745              		.loc 1 343 0
 746              		.cfi_startproc
 747              		@ args = 0, pretend = 0, frame = 8
 748              		@ frame_needed = 1, uses_anonymous_args = 0
 749 0000 80B5     		push	{r7, lr}
 750              		.cfi_def_cfa_offset 8
 751              		.cfi_offset 7, -8
 752              		.cfi_offset 14, -4
 753 0002 82B0     		sub	sp, sp, #8
 754              		.cfi_def_cfa_offset 16
 755 0004 00AF     		add	r7, sp, #0
 756              		.cfi_def_cfa_register 7
 757 0006 7860     		str	r0, [r7, #4]
 344:main.c        ****     /* Clear LCD line. */
 345:main.c        ****     LCD_Position(0u, 0u);
 758              		.loc 1 345 0
 759 0008 0021     		movs	r1, #0
 760 000a 0020     		movs	r0, #0
 761 000c FFF7FEFF 		bl	LCD_Position
 346:main.c        ****     LCD_PrintString("           ");
 762              		.loc 1 346 0
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccnHOtIU.s 			page 21


 763 0010 0948     		ldr	r0, .L46
 764 0012 FFF7FEFF 		bl	LCD_PrintString
 347:main.c        ****     /* Reset LCD line position. */
 348:main.c        ****     LCD_Position(0u, 0u);
 765              		.loc 1 348 0
 766 0016 0021     		movs	r1, #0
 767 0018 0020     		movs	r0, #0
 768 001a FFF7FEFF 		bl	LCD_Position
 349:main.c        ****     /* Store int crabs into a string to print to LCD */
 350:main.c        ****     sprintf(lineStr,"Crabs: %d", crabs);
 769              		.loc 1 350 0
 770 001e 7A68     		ldr	r2, [r7, #4]
 771 0020 0649     		ldr	r1, .L46+4
 772 0022 0748     		ldr	r0, .L46+8
 773 0024 FFF7FEFF 		bl	sprintf
 351:main.c        ****     LCD_PrintString(lineStr);
 774              		.loc 1 351 0
 775 0028 0548     		ldr	r0, .L46+8
 776 002a FFF7FEFF 		bl	LCD_PrintString
 352:main.c        **** }
 777              		.loc 1 352 0
 778 002e 00BF     		nop
 779 0030 0837     		adds	r7, r7, #8
 780              		.cfi_def_cfa_offset 8
 781 0032 BD46     		mov	sp, r7
 782              		.cfi_def_cfa_register 13
 783              		@ sp needed
 784 0034 80BD     		pop	{r7, pc}
 785              	.L47:
 786 0036 00BF     		.align	2
 787              	.L46:
 788 0038 08010000 		.word	.LC8
 789 003c 14010000 		.word	.LC9
 790 0040 00000000 		.word	lineStr
 791              		.cfi_endproc
 792              	.LFE67:
 793              		.size	DisplayCrabs, .-DisplayCrabs
 794              		.section	.rodata
 795 011e 0000     		.align	2
 796              	.LC10:
 797 0120 44617461 		.ascii	"Data Ready\000"
 797      20526561 
 797      647900
 798              		.section	.text.tx_done,"ax",%progbits
 799              		.align	2
 800              		.global	tx_done
 801              		.thumb
 802              		.thumb_func
 803              		.type	tx_done, %function
 804              	tx_done:
 805              	.LFB68:
 353:main.c        **** 
 354:main.c        **** /*******************************************************************************
 355:main.c        **** * Function Name: wakeUpIsr
 356:main.c        **** ********************************************************************************
 357:main.c        **** *
 358:main.c        **** * Summary:
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccnHOtIU.s 			page 22


 359:main.c        **** * Sleep Timer interrupt to wake up PSoC from sleep
 360:main.c        **** *
 361:main.c        **** * Parameters:
 362:main.c        **** *  None.
 363:main.c        **** *
 364:main.c        **** * Return:
 365:main.c        **** *  None.
 366:main.c        **** *
 367:main.c        **** *******************************************************************************/
 368:main.c        **** CY_ISR(tx_done){
 806              		.loc 1 368 0
 807              		.cfi_startproc
 808              		@ args = 0, pretend = 0, frame = 0
 809              		@ frame_needed = 1, uses_anonymous_args = 0
 810 0000 80B5     		push	{r7, lr}
 811              		.cfi_def_cfa_offset 8
 812              		.cfi_offset 7, -8
 813              		.cfi_offset 14, -4
 814 0002 00AF     		add	r7, sp, #0
 815              		.cfi_def_cfa_register 7
 369:main.c        ****     countTx++; // every 41 seconds
 816              		.loc 1 369 0
 817 0004 174B     		ldr	r3, .L54
 818 0006 1B88     		ldrh	r3, [r3]
 819 0008 0133     		adds	r3, r3, #1
 820 000a 9AB2     		uxth	r2, r3
 821 000c 154B     		ldr	r3, .L54
 822 000e 1A80     		strh	r2, [r3]	@ movhi
 370:main.c        ****     if(countTx >= 80){
 823              		.loc 1 370 0
 824 0010 144B     		ldr	r3, .L54
 825 0012 1B88     		ldrh	r3, [r3]
 826 0014 4F2B     		cmp	r3, #79
 827 0016 22D9     		bls	.L53
 371:main.c        ****         dataDone = TRUE;
 828              		.loc 1 371 0
 829 0018 134B     		ldr	r3, .L54+4
 830 001a 0122     		movs	r2, #1
 831 001c 1A60     		str	r2, [r3]
 372:main.c        ****         sendReady = TRUE;
 832              		.loc 1 372 0
 833 001e 134B     		ldr	r3, .L54+8
 834 0020 0122     		movs	r2, #1
 835 0022 1A60     		str	r2, [r3]
 373:main.c        ****         if(sendReady == TRUE){
 836              		.loc 1 373 0
 837 0024 114B     		ldr	r3, .L54+8
 838 0026 1B68     		ldr	r3, [r3]
 839 0028 012B     		cmp	r3, #1
 840 002a 13D1     		bne	.L50
 374:main.c        ****             while (0u == USBUART_CDCIsReady())
 841              		.loc 1 374 0
 842 002c 00BF     		nop
 843              	.L51:
 844              		.loc 1 374 0 is_stmt 0 discriminator 1
 845 002e FFF7FEFF 		bl	USBUART_CDCIsReady
 846 0032 0346     		mov	r3, r0
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccnHOtIU.s 			page 23


 847 0034 002B     		cmp	r3, #0
 848 0036 FAD0     		beq	.L51
 375:main.c        ****             {
 376:main.c        ****             }
 377:main.c        ****             USBUART_PutString("Data Ready");
 849              		.loc 1 377 0 is_stmt 1
 850 0038 0D48     		ldr	r0, .L54+12
 851 003a FFF7FEFF 		bl	USBUART_PutString
 378:main.c        ****             sendReady = FALSE;
 852              		.loc 1 378 0
 853 003e 0B4B     		ldr	r3, .L54+8
 854 0040 0022     		movs	r2, #0
 855 0042 1A60     		str	r2, [r3]
 379:main.c        ****             /* Wait until component is ready to send data to host. */
 380:main.c        ****             while (0u == USBUART_CDCIsReady())
 856              		.loc 1 380 0
 857 0044 00BF     		nop
 858              	.L52:
 859              		.loc 1 380 0 is_stmt 0 discriminator 1
 860 0046 FFF7FEFF 		bl	USBUART_CDCIsReady
 861 004a 0346     		mov	r3, r0
 862 004c 002B     		cmp	r3, #0
 863 004e FAD0     		beq	.L52
 381:main.c        ****             {
 382:main.c        ****             }
 383:main.c        ****             USBUART_PutCRLF();
 864              		.loc 1 383 0 is_stmt 1
 865 0050 FFF7FEFF 		bl	USBUART_PutCRLF
 866              	.L50:
 384:main.c        ****         }
 385:main.c        ****         countTx = 0;
 867              		.loc 1 385 0
 868 0054 034B     		ldr	r3, .L54
 869 0056 0022     		movs	r2, #0
 870 0058 1A80     		strh	r2, [r3]	@ movhi
 386:main.c        ****         Data_Timer_Stop();
 871              		.loc 1 386 0
 872 005a FFF7FEFF 		bl	Data_Timer_Stop
 873              	.L53:
 387:main.c        ****     }
 388:main.c        **** 
 389:main.c        **** } //end CY_ISR(tx_done)
 874              		.loc 1 389 0
 875 005e 00BF     		nop
 876 0060 80BD     		pop	{r7, pc}
 877              	.L55:
 878 0062 00BF     		.align	2
 879              	.L54:
 880 0064 00000000 		.word	countTx
 881 0068 00000000 		.word	dataDone
 882 006c 00000000 		.word	sendReady
 883 0070 20010000 		.word	.LC10
 884              		.cfi_endproc
 885              	.LFE68:
 886              		.size	tx_done, .-tx_done
 887              		.text
 888              	.Letext0:
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccnHOtIU.s 			page 24


 889              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 890              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 891              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 892              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 893              		.section	.debug_info,"",%progbits
 894              	.Ldebug_info0:
 895 0000 A1020000 		.4byte	0x2a1
 896 0004 0400     		.2byte	0x4
 897 0006 00000000 		.4byte	.Ldebug_abbrev0
 898 000a 04       		.byte	0x4
 899 000b 01       		.uleb128 0x1
 900 000c 00000000 		.4byte	.LASF38
 901 0010 0C       		.byte	0xc
 902 0011 FB010000 		.4byte	.LASF39
 903 0015 88010000 		.4byte	.LASF40
 904 0019 00000000 		.4byte	.Ldebug_ranges0+0
 905 001d 00000000 		.4byte	0
 906 0021 00000000 		.4byte	.Ldebug_line0
 907 0025 02       		.uleb128 0x2
 908 0026 01       		.byte	0x1
 909 0027 06       		.byte	0x6
 910 0028 39020000 		.4byte	.LASF0
 911 002c 02       		.uleb128 0x2
 912 002d 01       		.byte	0x1
 913 002e 08       		.byte	0x8
 914 002f E6000000 		.4byte	.LASF1
 915 0033 02       		.uleb128 0x2
 916 0034 02       		.byte	0x2
 917 0035 05       		.byte	0x5
 918 0036 0D020000 		.4byte	.LASF2
 919 003a 02       		.uleb128 0x2
 920 003b 02       		.byte	0x2
 921 003c 07       		.byte	0x7
 922 003d 02010000 		.4byte	.LASF3
 923 0041 03       		.uleb128 0x3
 924 0042 A6000000 		.4byte	.LASF9
 925 0046 02       		.byte	0x2
 926 0047 3F       		.byte	0x3f
 927 0048 4C000000 		.4byte	0x4c
 928 004c 02       		.uleb128 0x2
 929 004d 04       		.byte	0x4
 930 004e 05       		.byte	0x5
 931 004f 24020000 		.4byte	.LASF4
 932 0053 02       		.uleb128 0x2
 933 0054 04       		.byte	0x4
 934 0055 07       		.byte	0x7
 935 0056 22010000 		.4byte	.LASF5
 936 005a 02       		.uleb128 0x2
 937 005b 08       		.byte	0x8
 938 005c 05       		.byte	0x5
 939 005d ED010000 		.4byte	.LASF6
 940 0061 02       		.uleb128 0x2
 941 0062 08       		.byte	0x8
 942 0063 07       		.byte	0x7
 943 0064 71010000 		.4byte	.LASF7
 944 0068 04       		.uleb128 0x4
 945 0069 04       		.byte	0x4
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccnHOtIU.s 			page 25


 946 006a 05       		.byte	0x5
 947 006b 696E7400 		.ascii	"int\000"
 948 006f 02       		.uleb128 0x2
 949 0070 04       		.byte	0x4
 950 0071 07       		.byte	0x7
 951 0072 64010000 		.4byte	.LASF8
 952 0076 03       		.uleb128 0x3
 953 0077 CA010000 		.4byte	.LASF10
 954 007b 03       		.byte	0x3
 955 007c 2C       		.byte	0x2c
 956 007d 41000000 		.4byte	0x41
 957 0081 05       		.uleb128 0x5
 958 0082 1E020000 		.4byte	.LASF11
 959 0086 04       		.byte	0x4
 960 0087 9201     		.2byte	0x192
 961 0089 2C000000 		.4byte	0x2c
 962 008d 05       		.uleb128 0x5
 963 008e 4B010000 		.4byte	.LASF12
 964 0092 04       		.byte	0x4
 965 0093 9301     		.2byte	0x193
 966 0095 3A000000 		.4byte	0x3a
 967 0099 02       		.uleb128 0x2
 968 009a 04       		.byte	0x4
 969 009b 04       		.byte	0x4
 970 009c DB000000 		.4byte	.LASF13
 971 00a0 02       		.uleb128 0x2
 972 00a1 08       		.byte	0x8
 973 00a2 04       		.byte	0x4
 974 00a3 B9000000 		.4byte	.LASF14
 975 00a7 05       		.uleb128 0x5
 976 00a8 F4000000 		.4byte	.LASF15
 977 00ac 04       		.byte	0x4
 978 00ad A301     		.2byte	0x1a3
 979 00af B3000000 		.4byte	0xb3
 980 00b3 02       		.uleb128 0x2
 981 00b4 01       		.byte	0x1
 982 00b5 08       		.byte	0x8
 983 00b6 02020000 		.4byte	.LASF16
 984 00ba 02       		.uleb128 0x2
 985 00bb 08       		.byte	0x8
 986 00bc 04       		.byte	0x4
 987 00bd 2D020000 		.4byte	.LASF17
 988 00c1 02       		.uleb128 0x2
 989 00c2 04       		.byte	0x4
 990 00c3 07       		.byte	0x7
 991 00c4 D2010000 		.4byte	.LASF18
 992 00c8 06       		.uleb128 0x6
 993 00c9 5F010000 		.4byte	.LASF23
 994 00cd 01       		.byte	0x1
 995 00ce 5E       		.byte	0x5e
 996 00cf 68000000 		.4byte	0x68
 997 00d3 00000000 		.4byte	.LFB64
 998 00d7 C0000000 		.4byte	.LFE64-.LFB64
 999 00db 01       		.uleb128 0x1
 1000 00dc 9C       		.byte	0x9c
 1001 00dd FE000000 		.4byte	0xfe
 1002 00e1 07       		.uleb128 0x7
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccnHOtIU.s 			page 26


 1003 00e2 34010000 		.4byte	.LASF19
 1004 00e6 01       		.byte	0x1
 1005 00e7 60       		.byte	0x60
 1006 00e8 68000000 		.4byte	0x68
 1007 00ec 02       		.uleb128 0x2
 1008 00ed 91       		.byte	0x91
 1009 00ee 74       		.sleb128 -12
 1010 00ef 07       		.uleb128 0x7
 1011 00f0 DB010000 		.4byte	.LASF20
 1012 00f4 01       		.byte	0x1
 1013 00f5 61       		.byte	0x61
 1014 00f6 68000000 		.4byte	0x68
 1015 00fa 02       		.uleb128 0x2
 1016 00fb 91       		.byte	0x91
 1017 00fc 70       		.sleb128 -16
 1018 00fd 00       		.byte	0
 1019 00fe 08       		.uleb128 0x8
 1020 00ff 42010000 		.4byte	.LASF21
 1021 0103 01       		.byte	0x1
 1022 0104 9C       		.byte	0x9c
 1023 0105 68000000 		.4byte	0x68
 1024 0109 00000000 		.4byte	.LFB65
 1025 010d 5C010000 		.4byte	.LFE65-.LFB65
 1026 0111 01       		.uleb128 0x1
 1027 0112 9C       		.byte	0x9c
 1028 0113 26010000 		.4byte	0x126
 1029 0117 07       		.uleb128 0x7
 1030 0118 34010000 		.4byte	.LASF19
 1031 011c 01       		.byte	0x1
 1032 011d 9E       		.byte	0x9e
 1033 011e 8D000000 		.4byte	0x8d
 1034 0122 02       		.uleb128 0x2
 1035 0123 91       		.byte	0x91
 1036 0124 6E       		.sleb128 -18
 1037 0125 00       		.byte	0
 1038 0126 09       		.uleb128 0x9
 1039 0127 97000000 		.4byte	.LASF22
 1040 012b 01       		.byte	0x1
 1041 012c 0801     		.2byte	0x108
 1042 012e 68000000 		.4byte	0x68
 1043 0132 00000000 		.4byte	.LFB66
 1044 0136 74010000 		.4byte	.LFE66-.LFB66
 1045 013a 01       		.uleb128 0x1
 1046 013b 9C       		.byte	0x9c
 1047 013c 50010000 		.4byte	0x150
 1048 0140 0A       		.uleb128 0xa
 1049 0141 34010000 		.4byte	.LASF19
 1050 0145 01       		.byte	0x1
 1051 0146 0A01     		.2byte	0x10a
 1052 0148 68000000 		.4byte	0x68
 1053 014c 02       		.uleb128 0x2
 1054 014d 91       		.byte	0x91
 1055 014e 74       		.sleb128 -12
 1056 014f 00       		.byte	0
 1057 0150 0B       		.uleb128 0xb
 1058 0151 52010000 		.4byte	.LASF24
 1059 0155 01       		.byte	0x1
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccnHOtIU.s 			page 27


 1060 0156 5701     		.2byte	0x157
 1061 0158 00000000 		.4byte	.LFB67
 1062 015c 44000000 		.4byte	.LFE67-.LFB67
 1063 0160 01       		.uleb128 0x1
 1064 0161 9C       		.byte	0x9c
 1065 0162 76010000 		.4byte	0x176
 1066 0166 0C       		.uleb128 0xc
 1067 0167 34010000 		.4byte	.LASF19
 1068 016b 01       		.byte	0x1
 1069 016c 5701     		.2byte	0x157
 1070 016e 68000000 		.4byte	0x68
 1071 0172 02       		.uleb128 0x2
 1072 0173 91       		.byte	0x91
 1073 0174 74       		.sleb128 -12
 1074 0175 00       		.byte	0
 1075 0176 0D       		.uleb128 0xd
 1076 0177 4C020000 		.4byte	.LASF41
 1077 017b 01       		.byte	0x1
 1078 017c 7001     		.2byte	0x170
 1079 017e 00000000 		.4byte	.LFB68
 1080 0182 74000000 		.4byte	.LFE68-.LFB68
 1081 0186 01       		.uleb128 0x1
 1082 0187 9C       		.byte	0x9c
 1083 0188 0E       		.uleb128 0xe
 1084 0189 15010000 		.4byte	.LASF25
 1085 018d 05       		.byte	0x5
 1086 018e 1207     		.2byte	0x712
 1087 0190 94010000 		.4byte	0x194
 1088 0194 0F       		.uleb128 0xf
 1089 0195 76000000 		.4byte	0x76
 1090 0199 10       		.uleb128 0x10
 1091 019a 45020000 		.4byte	.LASF26
 1092 019e 01       		.byte	0x1
 1093 019f 4B       		.byte	0x4b
 1094 01a0 68000000 		.4byte	0x68
 1095 01a4 05       		.uleb128 0x5
 1096 01a5 03       		.byte	0x3
 1097 01a6 00000000 		.4byte	prompt
 1098 01aa 10       		.uleb128 0x10
 1099 01ab 3A010000 		.4byte	.LASF27
 1100 01af 01       		.byte	0x1
 1101 01b0 4C       		.byte	0x4c
 1102 01b1 68000000 		.4byte	0x68
 1103 01b5 05       		.uleb128 0x5
 1104 01b6 03       		.byte	0x3
 1105 01b7 00000000 		.4byte	endFlag
 1106 01bb 10       		.uleb128 0x10
 1107 01bc 8E000000 		.4byte	.LASF28
 1108 01c0 01       		.byte	0x1
 1109 01c1 4D       		.byte	0x4d
 1110 01c2 68000000 		.4byte	0x68
 1111 01c6 05       		.uleb128 0x5
 1112 01c7 03       		.byte	0x3
 1113 01c8 00000000 		.4byte	oneDigit
 1114 01cc 10       		.uleb128 0x10
 1115 01cd B0000000 		.4byte	.LASF29
 1116 01d1 01       		.byte	0x1
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccnHOtIU.s 			page 28


 1117 01d2 4E       		.byte	0x4e
 1118 01d3 68000000 		.4byte	0x68
 1119 01d7 05       		.uleb128 0x5
 1120 01d8 03       		.byte	0x3
 1121 01d9 00000000 		.4byte	twoDigit
 1122 01dd 10       		.uleb128 0x10
 1123 01de E7010000 		.4byte	.LASF30
 1124 01e2 01       		.byte	0x1
 1125 01e3 4F       		.byte	0x4f
 1126 01e4 68000000 		.4byte	0x68
 1127 01e8 05       		.uleb128 0x5
 1128 01e9 03       		.byte	0x3
 1129 01ea 00000000 		.4byte	error
 1130 01ee 11       		.uleb128 0x11
 1131 01ef 6900     		.ascii	"i\000"
 1132 01f1 01       		.byte	0x1
 1133 01f2 50       		.byte	0x50
 1134 01f3 68000000 		.4byte	0x68
 1135 01f7 05       		.uleb128 0x5
 1136 01f8 03       		.byte	0x3
 1137 01f9 00000000 		.4byte	i
 1138 01fd 10       		.uleb128 0x10
 1139 01fe C0000000 		.4byte	.LASF31
 1140 0202 01       		.byte	0x1
 1141 0203 51       		.byte	0x51
 1142 0204 68000000 		.4byte	0x68
 1143 0208 05       		.uleb128 0x5
 1144 0209 03       		.byte	0x3
 1145 020a 00000000 		.4byte	dataDone
 1146 020e 10       		.uleb128 0x10
 1147 020f D1000000 		.4byte	.LASF32
 1148 0213 01       		.byte	0x1
 1149 0214 52       		.byte	0x52
 1150 0215 68000000 		.4byte	0x68
 1151 0219 05       		.uleb128 0x5
 1152 021a 03       		.byte	0x3
 1153 021b 00000000 		.4byte	sendReady
 1154 021f 10       		.uleb128 0x10
 1155 0220 07020000 		.4byte	.LASF33
 1156 0224 01       		.byte	0x1
 1157 0225 53       		.byte	0x53
 1158 0226 8D000000 		.4byte	0x8d
 1159 022a 05       		.uleb128 0x5
 1160 022b 03       		.byte	0x3
 1161 022c 00000000 		.4byte	count
 1162 0230 10       		.uleb128 0x10
 1163 0231 FA000000 		.4byte	.LASF34
 1164 0235 01       		.byte	0x1
 1165 0236 54       		.byte	0x54
 1166 0237 8D000000 		.4byte	0x8d
 1167 023b 05       		.uleb128 0x5
 1168 023c 03       		.byte	0x3
 1169 023d 00000000 		.4byte	countTx
 1170 0241 12       		.uleb128 0x12
 1171 0242 A7000000 		.4byte	0xa7
 1172 0246 51020000 		.4byte	0x251
 1173 024a 13       		.uleb128 0x13
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccnHOtIU.s 			page 29


 1174 024b C1000000 		.4byte	0xc1
 1175 024f 13       		.byte	0x13
 1176 0250 00       		.byte	0
 1177 0251 10       		.uleb128 0x10
 1178 0252 C9000000 		.4byte	.LASF35
 1179 0256 01       		.byte	0x1
 1180 0257 55       		.byte	0x55
 1181 0258 41020000 		.4byte	0x241
 1182 025c 05       		.uleb128 0x5
 1183 025d 03       		.byte	0x3
 1184 025e 00000000 		.4byte	lineStr
 1185 0262 12       		.uleb128 0x12
 1186 0263 81000000 		.4byte	0x81
 1187 0267 72020000 		.4byte	0x272
 1188 026b 13       		.uleb128 0x13
 1189 026c C1000000 		.4byte	0xc1
 1190 0270 3F       		.byte	0x3f
 1191 0271 00       		.byte	0
 1192 0272 10       		.uleb128 0x10
 1193 0273 17020000 		.4byte	.LASF36
 1194 0277 01       		.byte	0x1
 1195 0278 56       		.byte	0x56
 1196 0279 62020000 		.4byte	0x262
 1197 027d 05       		.uleb128 0x5
 1198 027e 03       		.byte	0x3
 1199 027f 00000000 		.4byte	buffer
 1200 0283 12       		.uleb128 0x12
 1201 0284 81000000 		.4byte	0x81
 1202 0288 93020000 		.4byte	0x293
 1203 028c 13       		.uleb128 0x13
 1204 028d C1000000 		.4byte	0xc1
 1205 0291 02       		.byte	0x2
 1206 0292 00       		.byte	0
 1207 0293 10       		.uleb128 0x10
 1208 0294 E1000000 		.4byte	.LASF37
 1209 0298 01       		.byte	0x1
 1210 0299 57       		.byte	0x57
 1211 029a 83020000 		.4byte	0x283
 1212 029e 05       		.uleb128 0x5
 1213 029f 03       		.byte	0x3
 1214 02a0 00000000 		.4byte	data
 1215 02a4 00       		.byte	0
 1216              		.section	.debug_abbrev,"",%progbits
 1217              	.Ldebug_abbrev0:
 1218 0000 01       		.uleb128 0x1
 1219 0001 11       		.uleb128 0x11
 1220 0002 01       		.byte	0x1
 1221 0003 25       		.uleb128 0x25
 1222 0004 0E       		.uleb128 0xe
 1223 0005 13       		.uleb128 0x13
 1224 0006 0B       		.uleb128 0xb
 1225 0007 03       		.uleb128 0x3
 1226 0008 0E       		.uleb128 0xe
 1227 0009 1B       		.uleb128 0x1b
 1228 000a 0E       		.uleb128 0xe
 1229 000b 55       		.uleb128 0x55
 1230 000c 17       		.uleb128 0x17
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccnHOtIU.s 			page 30


 1231 000d 11       		.uleb128 0x11
 1232 000e 01       		.uleb128 0x1
 1233 000f 10       		.uleb128 0x10
 1234 0010 17       		.uleb128 0x17
 1235 0011 00       		.byte	0
 1236 0012 00       		.byte	0
 1237 0013 02       		.uleb128 0x2
 1238 0014 24       		.uleb128 0x24
 1239 0015 00       		.byte	0
 1240 0016 0B       		.uleb128 0xb
 1241 0017 0B       		.uleb128 0xb
 1242 0018 3E       		.uleb128 0x3e
 1243 0019 0B       		.uleb128 0xb
 1244 001a 03       		.uleb128 0x3
 1245 001b 0E       		.uleb128 0xe
 1246 001c 00       		.byte	0
 1247 001d 00       		.byte	0
 1248 001e 03       		.uleb128 0x3
 1249 001f 16       		.uleb128 0x16
 1250 0020 00       		.byte	0
 1251 0021 03       		.uleb128 0x3
 1252 0022 0E       		.uleb128 0xe
 1253 0023 3A       		.uleb128 0x3a
 1254 0024 0B       		.uleb128 0xb
 1255 0025 3B       		.uleb128 0x3b
 1256 0026 0B       		.uleb128 0xb
 1257 0027 49       		.uleb128 0x49
 1258 0028 13       		.uleb128 0x13
 1259 0029 00       		.byte	0
 1260 002a 00       		.byte	0
 1261 002b 04       		.uleb128 0x4
 1262 002c 24       		.uleb128 0x24
 1263 002d 00       		.byte	0
 1264 002e 0B       		.uleb128 0xb
 1265 002f 0B       		.uleb128 0xb
 1266 0030 3E       		.uleb128 0x3e
 1267 0031 0B       		.uleb128 0xb
 1268 0032 03       		.uleb128 0x3
 1269 0033 08       		.uleb128 0x8
 1270 0034 00       		.byte	0
 1271 0035 00       		.byte	0
 1272 0036 05       		.uleb128 0x5
 1273 0037 16       		.uleb128 0x16
 1274 0038 00       		.byte	0
 1275 0039 03       		.uleb128 0x3
 1276 003a 0E       		.uleb128 0xe
 1277 003b 3A       		.uleb128 0x3a
 1278 003c 0B       		.uleb128 0xb
 1279 003d 3B       		.uleb128 0x3b
 1280 003e 05       		.uleb128 0x5
 1281 003f 49       		.uleb128 0x49
 1282 0040 13       		.uleb128 0x13
 1283 0041 00       		.byte	0
 1284 0042 00       		.byte	0
 1285 0043 06       		.uleb128 0x6
 1286 0044 2E       		.uleb128 0x2e
 1287 0045 01       		.byte	0x1
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccnHOtIU.s 			page 31


 1288 0046 3F       		.uleb128 0x3f
 1289 0047 19       		.uleb128 0x19
 1290 0048 03       		.uleb128 0x3
 1291 0049 0E       		.uleb128 0xe
 1292 004a 3A       		.uleb128 0x3a
 1293 004b 0B       		.uleb128 0xb
 1294 004c 3B       		.uleb128 0x3b
 1295 004d 0B       		.uleb128 0xb
 1296 004e 49       		.uleb128 0x49
 1297 004f 13       		.uleb128 0x13
 1298 0050 11       		.uleb128 0x11
 1299 0051 01       		.uleb128 0x1
 1300 0052 12       		.uleb128 0x12
 1301 0053 06       		.uleb128 0x6
 1302 0054 40       		.uleb128 0x40
 1303 0055 18       		.uleb128 0x18
 1304 0056 9642     		.uleb128 0x2116
 1305 0058 19       		.uleb128 0x19
 1306 0059 01       		.uleb128 0x1
 1307 005a 13       		.uleb128 0x13
 1308 005b 00       		.byte	0
 1309 005c 00       		.byte	0
 1310 005d 07       		.uleb128 0x7
 1311 005e 34       		.uleb128 0x34
 1312 005f 00       		.byte	0
 1313 0060 03       		.uleb128 0x3
 1314 0061 0E       		.uleb128 0xe
 1315 0062 3A       		.uleb128 0x3a
 1316 0063 0B       		.uleb128 0xb
 1317 0064 3B       		.uleb128 0x3b
 1318 0065 0B       		.uleb128 0xb
 1319 0066 49       		.uleb128 0x49
 1320 0067 13       		.uleb128 0x13
 1321 0068 02       		.uleb128 0x2
 1322 0069 18       		.uleb128 0x18
 1323 006a 00       		.byte	0
 1324 006b 00       		.byte	0
 1325 006c 08       		.uleb128 0x8
 1326 006d 2E       		.uleb128 0x2e
 1327 006e 01       		.byte	0x1
 1328 006f 3F       		.uleb128 0x3f
 1329 0070 19       		.uleb128 0x19
 1330 0071 03       		.uleb128 0x3
 1331 0072 0E       		.uleb128 0xe
 1332 0073 3A       		.uleb128 0x3a
 1333 0074 0B       		.uleb128 0xb
 1334 0075 3B       		.uleb128 0x3b
 1335 0076 0B       		.uleb128 0xb
 1336 0077 27       		.uleb128 0x27
 1337 0078 19       		.uleb128 0x19
 1338 0079 49       		.uleb128 0x49
 1339 007a 13       		.uleb128 0x13
 1340 007b 11       		.uleb128 0x11
 1341 007c 01       		.uleb128 0x1
 1342 007d 12       		.uleb128 0x12
 1343 007e 06       		.uleb128 0x6
 1344 007f 40       		.uleb128 0x40
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccnHOtIU.s 			page 32


 1345 0080 18       		.uleb128 0x18
 1346 0081 9642     		.uleb128 0x2116
 1347 0083 19       		.uleb128 0x19
 1348 0084 01       		.uleb128 0x1
 1349 0085 13       		.uleb128 0x13
 1350 0086 00       		.byte	0
 1351 0087 00       		.byte	0
 1352 0088 09       		.uleb128 0x9
 1353 0089 2E       		.uleb128 0x2e
 1354 008a 01       		.byte	0x1
 1355 008b 3F       		.uleb128 0x3f
 1356 008c 19       		.uleb128 0x19
 1357 008d 03       		.uleb128 0x3
 1358 008e 0E       		.uleb128 0xe
 1359 008f 3A       		.uleb128 0x3a
 1360 0090 0B       		.uleb128 0xb
 1361 0091 3B       		.uleb128 0x3b
 1362 0092 05       		.uleb128 0x5
 1363 0093 27       		.uleb128 0x27
 1364 0094 19       		.uleb128 0x19
 1365 0095 49       		.uleb128 0x49
 1366 0096 13       		.uleb128 0x13
 1367 0097 11       		.uleb128 0x11
 1368 0098 01       		.uleb128 0x1
 1369 0099 12       		.uleb128 0x12
 1370 009a 06       		.uleb128 0x6
 1371 009b 40       		.uleb128 0x40
 1372 009c 18       		.uleb128 0x18
 1373 009d 9642     		.uleb128 0x2116
 1374 009f 19       		.uleb128 0x19
 1375 00a0 01       		.uleb128 0x1
 1376 00a1 13       		.uleb128 0x13
 1377 00a2 00       		.byte	0
 1378 00a3 00       		.byte	0
 1379 00a4 0A       		.uleb128 0xa
 1380 00a5 34       		.uleb128 0x34
 1381 00a6 00       		.byte	0
 1382 00a7 03       		.uleb128 0x3
 1383 00a8 0E       		.uleb128 0xe
 1384 00a9 3A       		.uleb128 0x3a
 1385 00aa 0B       		.uleb128 0xb
 1386 00ab 3B       		.uleb128 0x3b
 1387 00ac 05       		.uleb128 0x5
 1388 00ad 49       		.uleb128 0x49
 1389 00ae 13       		.uleb128 0x13
 1390 00af 02       		.uleb128 0x2
 1391 00b0 18       		.uleb128 0x18
 1392 00b1 00       		.byte	0
 1393 00b2 00       		.byte	0
 1394 00b3 0B       		.uleb128 0xb
 1395 00b4 2E       		.uleb128 0x2e
 1396 00b5 01       		.byte	0x1
 1397 00b6 3F       		.uleb128 0x3f
 1398 00b7 19       		.uleb128 0x19
 1399 00b8 03       		.uleb128 0x3
 1400 00b9 0E       		.uleb128 0xe
 1401 00ba 3A       		.uleb128 0x3a
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccnHOtIU.s 			page 33


 1402 00bb 0B       		.uleb128 0xb
 1403 00bc 3B       		.uleb128 0x3b
 1404 00bd 05       		.uleb128 0x5
 1405 00be 27       		.uleb128 0x27
 1406 00bf 19       		.uleb128 0x19
 1407 00c0 11       		.uleb128 0x11
 1408 00c1 01       		.uleb128 0x1
 1409 00c2 12       		.uleb128 0x12
 1410 00c3 06       		.uleb128 0x6
 1411 00c4 40       		.uleb128 0x40
 1412 00c5 18       		.uleb128 0x18
 1413 00c6 9642     		.uleb128 0x2116
 1414 00c8 19       		.uleb128 0x19
 1415 00c9 01       		.uleb128 0x1
 1416 00ca 13       		.uleb128 0x13
 1417 00cb 00       		.byte	0
 1418 00cc 00       		.byte	0
 1419 00cd 0C       		.uleb128 0xc
 1420 00ce 05       		.uleb128 0x5
 1421 00cf 00       		.byte	0
 1422 00d0 03       		.uleb128 0x3
 1423 00d1 0E       		.uleb128 0xe
 1424 00d2 3A       		.uleb128 0x3a
 1425 00d3 0B       		.uleb128 0xb
 1426 00d4 3B       		.uleb128 0x3b
 1427 00d5 05       		.uleb128 0x5
 1428 00d6 49       		.uleb128 0x49
 1429 00d7 13       		.uleb128 0x13
 1430 00d8 02       		.uleb128 0x2
 1431 00d9 18       		.uleb128 0x18
 1432 00da 00       		.byte	0
 1433 00db 00       		.byte	0
 1434 00dc 0D       		.uleb128 0xd
 1435 00dd 2E       		.uleb128 0x2e
 1436 00de 00       		.byte	0
 1437 00df 3F       		.uleb128 0x3f
 1438 00e0 19       		.uleb128 0x19
 1439 00e1 03       		.uleb128 0x3
 1440 00e2 0E       		.uleb128 0xe
 1441 00e3 3A       		.uleb128 0x3a
 1442 00e4 0B       		.uleb128 0xb
 1443 00e5 3B       		.uleb128 0x3b
 1444 00e6 05       		.uleb128 0x5
 1445 00e7 27       		.uleb128 0x27
 1446 00e8 19       		.uleb128 0x19
 1447 00e9 11       		.uleb128 0x11
 1448 00ea 01       		.uleb128 0x1
 1449 00eb 12       		.uleb128 0x12
 1450 00ec 06       		.uleb128 0x6
 1451 00ed 40       		.uleb128 0x40
 1452 00ee 18       		.uleb128 0x18
 1453 00ef 9642     		.uleb128 0x2116
 1454 00f1 19       		.uleb128 0x19
 1455 00f2 00       		.byte	0
 1456 00f3 00       		.byte	0
 1457 00f4 0E       		.uleb128 0xe
 1458 00f5 34       		.uleb128 0x34
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccnHOtIU.s 			page 34


 1459 00f6 00       		.byte	0
 1460 00f7 03       		.uleb128 0x3
 1461 00f8 0E       		.uleb128 0xe
 1462 00f9 3A       		.uleb128 0x3a
 1463 00fa 0B       		.uleb128 0xb
 1464 00fb 3B       		.uleb128 0x3b
 1465 00fc 05       		.uleb128 0x5
 1466 00fd 49       		.uleb128 0x49
 1467 00fe 13       		.uleb128 0x13
 1468 00ff 3F       		.uleb128 0x3f
 1469 0100 19       		.uleb128 0x19
 1470 0101 3C       		.uleb128 0x3c
 1471 0102 19       		.uleb128 0x19
 1472 0103 00       		.byte	0
 1473 0104 00       		.byte	0
 1474 0105 0F       		.uleb128 0xf
 1475 0106 35       		.uleb128 0x35
 1476 0107 00       		.byte	0
 1477 0108 49       		.uleb128 0x49
 1478 0109 13       		.uleb128 0x13
 1479 010a 00       		.byte	0
 1480 010b 00       		.byte	0
 1481 010c 10       		.uleb128 0x10
 1482 010d 34       		.uleb128 0x34
 1483 010e 00       		.byte	0
 1484 010f 03       		.uleb128 0x3
 1485 0110 0E       		.uleb128 0xe
 1486 0111 3A       		.uleb128 0x3a
 1487 0112 0B       		.uleb128 0xb
 1488 0113 3B       		.uleb128 0x3b
 1489 0114 0B       		.uleb128 0xb
 1490 0115 49       		.uleb128 0x49
 1491 0116 13       		.uleb128 0x13
 1492 0117 3F       		.uleb128 0x3f
 1493 0118 19       		.uleb128 0x19
 1494 0119 02       		.uleb128 0x2
 1495 011a 18       		.uleb128 0x18
 1496 011b 00       		.byte	0
 1497 011c 00       		.byte	0
 1498 011d 11       		.uleb128 0x11
 1499 011e 34       		.uleb128 0x34
 1500 011f 00       		.byte	0
 1501 0120 03       		.uleb128 0x3
 1502 0121 08       		.uleb128 0x8
 1503 0122 3A       		.uleb128 0x3a
 1504 0123 0B       		.uleb128 0xb
 1505 0124 3B       		.uleb128 0x3b
 1506 0125 0B       		.uleb128 0xb
 1507 0126 49       		.uleb128 0x49
 1508 0127 13       		.uleb128 0x13
 1509 0128 3F       		.uleb128 0x3f
 1510 0129 19       		.uleb128 0x19
 1511 012a 02       		.uleb128 0x2
 1512 012b 18       		.uleb128 0x18
 1513 012c 00       		.byte	0
 1514 012d 00       		.byte	0
 1515 012e 12       		.uleb128 0x12
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccnHOtIU.s 			page 35


 1516 012f 01       		.uleb128 0x1
 1517 0130 01       		.byte	0x1
 1518 0131 49       		.uleb128 0x49
 1519 0132 13       		.uleb128 0x13
 1520 0133 01       		.uleb128 0x1
 1521 0134 13       		.uleb128 0x13
 1522 0135 00       		.byte	0
 1523 0136 00       		.byte	0
 1524 0137 13       		.uleb128 0x13
 1525 0138 21       		.uleb128 0x21
 1526 0139 00       		.byte	0
 1527 013a 49       		.uleb128 0x49
 1528 013b 13       		.uleb128 0x13
 1529 013c 2F       		.uleb128 0x2f
 1530 013d 0B       		.uleb128 0xb
 1531 013e 00       		.byte	0
 1532 013f 00       		.byte	0
 1533 0140 00       		.byte	0
 1534              		.section	.debug_aranges,"",%progbits
 1535 0000 3C000000 		.4byte	0x3c
 1536 0004 0200     		.2byte	0x2
 1537 0006 00000000 		.4byte	.Ldebug_info0
 1538 000a 04       		.byte	0x4
 1539 000b 00       		.byte	0
 1540 000c 0000     		.2byte	0
 1541 000e 0000     		.2byte	0
 1542 0010 00000000 		.4byte	.LFB64
 1543 0014 C0000000 		.4byte	.LFE64-.LFB64
 1544 0018 00000000 		.4byte	.LFB65
 1545 001c 5C010000 		.4byte	.LFE65-.LFB65
 1546 0020 00000000 		.4byte	.LFB66
 1547 0024 74010000 		.4byte	.LFE66-.LFB66
 1548 0028 00000000 		.4byte	.LFB67
 1549 002c 44000000 		.4byte	.LFE67-.LFB67
 1550 0030 00000000 		.4byte	.LFB68
 1551 0034 74000000 		.4byte	.LFE68-.LFB68
 1552 0038 00000000 		.4byte	0
 1553 003c 00000000 		.4byte	0
 1554              		.section	.debug_ranges,"",%progbits
 1555              	.Ldebug_ranges0:
 1556 0000 00000000 		.4byte	.LFB64
 1557 0004 C0000000 		.4byte	.LFE64
 1558 0008 00000000 		.4byte	.LFB65
 1559 000c 5C010000 		.4byte	.LFE65
 1560 0010 00000000 		.4byte	.LFB66
 1561 0014 74010000 		.4byte	.LFE66
 1562 0018 00000000 		.4byte	.LFB67
 1563 001c 44000000 		.4byte	.LFE67
 1564 0020 00000000 		.4byte	.LFB68
 1565 0024 74000000 		.4byte	.LFE68
 1566 0028 00000000 		.4byte	0
 1567 002c 00000000 		.4byte	0
 1568              		.section	.debug_line,"",%progbits
 1569              	.Ldebug_line0:
 1570 0000 81020000 		.section	.debug_str,"MS",%progbits,1
 1570      02004C01 
 1570      00000201 
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccnHOtIU.s 			page 36


 1570      FB0E0D00 
 1570      01010101 
 1571              	.LASF38:
 1572 0000 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1572      43313120 
 1572      352E342E 
 1572      31203230 
 1572      31363036 
 1573 0033 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1573      20726576 
 1573      6973696F 
 1573      6E203233 
 1573      37373135 
 1574 0066 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1574      66756E63 
 1574      74696F6E 
 1574      2D736563 
 1574      74696F6E 
 1575              	.LASF28:
 1576 008e 6F6E6544 		.ascii	"oneDigit\000"
 1576      69676974 
 1576      00
 1577              	.LASF22:
 1578 0097 43616C63 		.ascii	"CalculateCrabs\000"
 1578      756C6174 
 1578      65437261 
 1578      627300
 1579              	.LASF9:
 1580 00a6 5F5F696E 		.ascii	"__int32_t\000"
 1580      7433325F 
 1580      7400
 1581              	.LASF29:
 1582 00b0 74776F44 		.ascii	"twoDigit\000"
 1582      69676974 
 1582      00
 1583              	.LASF14:
 1584 00b9 646F7562 		.ascii	"double\000"
 1584      6C6500
 1585              	.LASF31:
 1586 00c0 64617461 		.ascii	"dataDone\000"
 1586      446F6E65 
 1586      00
 1587              	.LASF35:
 1588 00c9 6C696E65 		.ascii	"lineStr\000"
 1588      53747200 
 1589              	.LASF32:
 1590 00d1 73656E64 		.ascii	"sendReady\000"
 1590      52656164 
 1590      7900
 1591              	.LASF13:
 1592 00db 666C6F61 		.ascii	"float\000"
 1592      7400
 1593              	.LASF37:
 1594 00e1 64617461 		.ascii	"data\000"
 1594      00
 1595              	.LASF1:
 1596 00e6 756E7369 		.ascii	"unsigned char\000"
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccnHOtIU.s 			page 37


 1596      676E6564 
 1596      20636861 
 1596      7200
 1597              	.LASF15:
 1598 00f4 63686172 		.ascii	"char8\000"
 1598      3800
 1599              	.LASF34:
 1600 00fa 636F756E 		.ascii	"countTx\000"
 1600      74547800 
 1601              	.LASF3:
 1602 0102 73686F72 		.ascii	"short unsigned int\000"
 1602      7420756E 
 1602      7369676E 
 1602      65642069 
 1602      6E7400
 1603              	.LASF25:
 1604 0115 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1604      52784275 
 1604      66666572 
 1604      00
 1605              	.LASF5:
 1606 0122 6C6F6E67 		.ascii	"long unsigned int\000"
 1606      20756E73 
 1606      69676E65 
 1606      6420696E 
 1606      7400
 1607              	.LASF19:
 1608 0134 63726162 		.ascii	"crabs\000"
 1608      7300
 1609              	.LASF27:
 1610 013a 656E6446 		.ascii	"endFlag\000"
 1610      6C616700 
 1611              	.LASF21:
 1612 0142 47657443 		.ascii	"GetCrabs\000"
 1612      72616273 
 1612      00
 1613              	.LASF12:
 1614 014b 75696E74 		.ascii	"uint16\000"
 1614      313600
 1615              	.LASF24:
 1616 0152 44697370 		.ascii	"DisplayCrabs\000"
 1616      6C617943 
 1616      72616273 
 1616      00
 1617              	.LASF23:
 1618 015f 6D61696E 		.ascii	"main\000"
 1618      00
 1619              	.LASF8:
 1620 0164 756E7369 		.ascii	"unsigned int\000"
 1620      676E6564 
 1620      20696E74 
 1620      00
 1621              	.LASF7:
 1622 0171 6C6F6E67 		.ascii	"long long unsigned int\000"
 1622      206C6F6E 
 1622      6720756E 
 1622      7369676E 
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccnHOtIU.s 			page 38


 1622      65642069 
 1623              	.LASF40:
 1624 0188 433A5C55 		.ascii	"C:\\Users\\sdysart\\Documents\\UACS\\UACS\\HighFreq"
 1624      73657273 
 1624      5C736479 
 1624      73617274 
 1624      5C446F63 
 1625 01b5 46534B5C 		.ascii	"FSK\\USBFS_UART.cydsn\000"
 1625      55534246 
 1625      535F5541 
 1625      52542E63 
 1625      7964736E 
 1626              	.LASF10:
 1627 01ca 696E7433 		.ascii	"int32_t\000"
 1627      325F7400 
 1628              	.LASF18:
 1629 01d2 73697A65 		.ascii	"sizetype\000"
 1629      74797065 
 1629      00
 1630              	.LASF20:
 1631 01db 67657474 		.ascii	"gettingData\000"
 1631      696E6744 
 1631      61746100 
 1632              	.LASF30:
 1633 01e7 6572726F 		.ascii	"error\000"
 1633      7200
 1634              	.LASF6:
 1635 01ed 6C6F6E67 		.ascii	"long long int\000"
 1635      206C6F6E 
 1635      6720696E 
 1635      7400
 1636              	.LASF39:
 1637 01fb 6D61696E 		.ascii	"main.c\000"
 1637      2E6300
 1638              	.LASF16:
 1639 0202 63686172 		.ascii	"char\000"
 1639      00
 1640              	.LASF33:
 1641 0207 636F756E 		.ascii	"count\000"
 1641      7400
 1642              	.LASF2:
 1643 020d 73686F72 		.ascii	"short int\000"
 1643      7420696E 
 1643      7400
 1644              	.LASF36:
 1645 0217 62756666 		.ascii	"buffer\000"
 1645      657200
 1646              	.LASF11:
 1647 021e 75696E74 		.ascii	"uint8\000"
 1647      3800
 1648              	.LASF4:
 1649 0224 6C6F6E67 		.ascii	"long int\000"
 1649      20696E74 
 1649      00
 1650              	.LASF17:
 1651 022d 6C6F6E67 		.ascii	"long double\000"
 1651      20646F75 
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccnHOtIU.s 			page 39


 1651      626C6500 
 1652              	.LASF0:
 1653 0239 7369676E 		.ascii	"signed char\000"
 1653      65642063 
 1653      68617200 
 1654              	.LASF26:
 1655 0245 70726F6D 		.ascii	"prompt\000"
 1655      707400
 1656              	.LASF41:
 1657 024c 74785F64 		.ascii	"tx_done\000"
 1657      6F6E6500 
 1658              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
