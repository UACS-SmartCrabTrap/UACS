ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLOetsU.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.syntax unified
  20              		.global _printf_float
  21              		.thumb
  22              		.syntax unified
  23              		.global	parity
  24              		.section	.rodata
  25              		.align	2
  26              	.LC0:
  27 0000 4E6F6E65 		.ascii	"None\000"
  27      00
  28 0005 000000   		.align	2
  29              	.LC1:
  30 0008 4F646400 		.ascii	"Odd\000"
  31              		.align	2
  32              	.LC2:
  33 000c 4576656E 		.ascii	"Even\000"
  33      00
  34 0011 000000   		.align	2
  35              	.LC3:
  36 0014 4D61726B 		.ascii	"Mark\000"
  36      00
  37 0019 000000   		.align	2
  38              	.LC4:
  39 001c 53706163 		.ascii	"Space\000"
  39      6500
  40              		.data
  41              		.align	2
  42              		.type	parity, %object
  43              		.size	parity, 20
  44              	parity:
  45 0000 00000000 		.word	.LC0
  46 0004 08000000 		.word	.LC1
  47 0008 0C000000 		.word	.LC2
  48 000c 14000000 		.word	.LC3
  49 0010 1C000000 		.word	.LC4
  50              		.global	stop
  51              		.section	.rodata
  52 0022 0000     		.align	2
  53              	.LC5:
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLOetsU.s 			page 2


  54 0024 3100     		.ascii	"1\000"
  55 0026 0000     		.align	2
  56              	.LC6:
  57 0028 312E3500 		.ascii	"1.5\000"
  58              		.align	2
  59              	.LC7:
  60 002c 3200     		.ascii	"2\000"
  61              		.data
  62              		.align	2
  63              		.type	stop, %object
  64              		.size	stop, 12
  65              	stop:
  66 0014 24000000 		.word	.LC5
  67 0018 28000000 		.word	.LC6
  68 001c 2C000000 		.word	.LC7
  69              		.global	prompt
  70              		.align	2
  71              		.type	prompt, %object
  72              		.size	prompt, 4
  73              	prompt:
  74 0020 01000000 		.word	1
  75              		.global	endFlag
  76              		.bss
  77              		.align	2
  78              		.type	endFlag, %object
  79              		.size	endFlag, 4
  80              	endFlag:
  81 0000 00000000 		.space	4
  82              		.global	oneDigit
  83              		.align	2
  84              		.type	oneDigit, %object
  85              		.size	oneDigit, 4
  86              	oneDigit:
  87 0004 00000000 		.space	4
  88              		.global	twoDigit
  89              		.align	2
  90              		.type	twoDigit, %object
  91              		.size	twoDigit, 4
  92              	twoDigit:
  93 0008 00000000 		.space	4
  94              		.section	.rodata
  95 002e 0000     		.align	2
  96              	.LC8:
  97 0030 48656C6C 		.ascii	"Hello\000"
  97      6F00
  98 0036 0000     		.align	2
  99              	.LC9:
 100 0038 20202020 		.ascii	"                    \000"
 100      20202020 
 100      20202020 
 100      20202020 
 100      20202020 
 101 004d 000000   		.align	2
 102              	.LC10:
 103 0050 48656C6C 		.ascii	"Hello. Please enter amount of crabs (up to 127). Te"
 103      6F2E2050 
 103      6C656173 
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLOetsU.s 			page 3


 103      6520656E 
 103      74657220 
 104 0083 726D696E 		.ascii	"rminates with carriage return or third character. A"
 104      61746573 
 104      20776974 
 104      68206361 
 104      72726961 
 105 00b6 6E79206E 		.ascii	"ny non-integer will be interpreted as a 0.\000"
 105      6F6E2D69 
 105      6E746567 
 105      65722077 
 105      696C6C20 
 106 00e1 000000   		.align	2
 107              	.LC11:
 108 00e4 3000     		.ascii	"0\000"
 109 00e6 0000     		.align	2
 110              	.LC12:
 111 00e8 54727565 		.ascii	"True Zero\000"
 111      205A6572 
 111      6F00
 112 00f2 0000     		.align	2
 113              	.LC13:
 114 00f4 0D00     		.ascii	"\015\000"
 115 00f6 0000     		.align	2
 116              	.LC14:
 117 00f8 6F6E6520 		.ascii	"one digit\000"
 117      64696769 
 117      7400
 118 0102 0000     		.align	2
 119              	.LC15:
 120 0104 74776F20 		.ascii	"two digits\000"
 120      64696769 
 120      747300
 121 010f 00       		.align	2
 122              	.LC16:
 123 0110 20202020 		.ascii	"           \000"
 123      20202020 
 123      20202000 
 124              		.align	2
 125              	.LC17:
 126 011c 256400   		.ascii	"%d\000"
 127              		.section	.text.main,"ax",%progbits
 128              		.align	2
 129              		.global	main
 130              		.thumb
 131              		.thumb_func
 132              		.type	main, %function
 133              	main:
 134              	.LFB64:
 135              		.file 1 "main.c"
   1:main.c        **** /*******************************************************************************
   2:main.c        **** * File Name: main.c
   3:main.c        **** * Editer: Stephanie Salazar
   4:main.c        **** * Revision: 5/14/18
   5:main.c        **** *
   6:main.c        **** * Version: 2.0
   7:main.c        **** *
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLOetsU.s 			page 4


   8:main.c        **** * Description:
   9:main.c        **** *   The component is enumerated as a Virtual Com port. Receives data from the 
  10:main.c        **** *   hyper terminal, then sends back the received data.
  11:main.c        **** *   For PSoC3/PSoC5LP, the LCD shows the line settings.
  12:main.c        **** *
  13:main.c        **** * Related Document:
  14:main.c        **** *  Universal Serial Bus Specification Revision 2.0
  15:main.c        **** *  Universal Serial Bus Class Definitions for Communications Devices
  16:main.c        **** *  Revision 1.2
  17:main.c        **** *
  18:main.c        **** ********************************************************************************
  19:main.c        **** * Copyright 2015, Cypress Semiconductor Corporation. All rights reserved.
  20:main.c        **** * This software is owned by Cypress Semiconductor Corporation and is protected
  21:main.c        **** * by and subject to worldwide patent and copyright laws and treaties.
  22:main.c        **** * Therefore, you may use this software only as provided in the license agreement
  23:main.c        **** * accompanying the software package from which you obtained this software.
  24:main.c        **** * CYPRESS AND ITS SUPPLIERS MAKE NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  25:main.c        **** * WITH REGARD TO THIS SOFTWARE, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
  26:main.c        **** * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  27:main.c        **** *******************************************************************************/
  28:main.c        **** 
  29:main.c        **** #include <project.h>
  30:main.c        **** #include "stdio.h"
  31:main.c        **** #include "stdlib.h"
  32:main.c        **** 
  33:main.c        **** #if defined (__GNUC__)
  34:main.c        ****     /* Add an explicit reference to the floating point printf library */
  35:main.c        ****     /* to allow usage of the floating point conversion specifiers. */
  36:main.c        ****     /* This is not linked in by default with the newlib-nano library. */
  37:main.c        ****     asm (".global _printf_float");
  38:main.c        **** #endif
  39:main.c        **** 
  40:main.c        **** #define USBFS_DEVICE    (0u)
  41:main.c        **** 
  42:main.c        **** /* The buffer size is equal to the maximum packet size of the IN and OUT bulk
  43:main.c        **** * endpoints.
  44:main.c        **** */
  45:main.c        **** #define USBUART_BUFFER_SIZE (64u)
  46:main.c        **** #define LINE_STR_LENGTH     (20u)
  47:main.c        **** #define DATA_SIZE           (7u)
  48:main.c        **** 
  49:main.c        **** char8* parity[] = {"None", "Odd", "Even", "Mark", "Space"};
  50:main.c        **** char8* stop[]   = {"1", "1.5", "2"};
  51:main.c        **** int prompt = 1;
  52:main.c        **** int endFlag = 0;
  53:main.c        **** int oneDigit = 0;
  54:main.c        **** int twoDigit = 0;
  55:main.c        **** 
  56:main.c        **** /*******************************************************************************
  57:main.c        **** * Function Name: main
  58:main.c        **** ********************************************************************************
  59:main.c        **** *
  60:main.c        **** * Summary:
  61:main.c        **** *  The main function performs the following actions:
  62:main.c        **** *   1. Waits until VBUS becomes valid and starts the USBFS component which is
  63:main.c        **** *      enumerated as virtual Com port.
  64:main.c        **** *   2. Waits until the device is enumerated by the host.
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLOetsU.s 			page 5


  65:main.c        **** *   3. Waits for data coming from the hyper terminal and sends it back.
  66:main.c        **** *   4. PSoC3/PSoC5LP: the LCD shows the line settings.
  67:main.c        **** *
  68:main.c        **** * Parameters:
  69:main.c        **** *  None.
  70:main.c        **** *
  71:main.c        **** * Return:
  72:main.c        **** *  None.
  73:main.c        **** *
  74:main.c        **** *******************************************************************************/
  75:main.c        **** int main()
  76:main.c        **** {
 136              		.loc 1 76 0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 104
 139              		@ frame_needed = 1, uses_anonymous_args = 0
 140 0000 80B5     		push	{r7, lr}
 141              		.cfi_def_cfa_offset 8
 142              		.cfi_offset 7, -8
 143              		.cfi_offset 14, -4
 144 0002 9AB0     		sub	sp, sp, #104
 145              		.cfi_def_cfa_offset 112
 146 0004 00AF     		add	r7, sp, #0
 147              		.cfi_def_cfa_register 7
  77:main.c        ****     uint16 count;
  78:main.c        ****     char8 lineStr[LINE_STR_LENGTH];
  79:main.c        ****     uint8 buffer[USBUART_BUFFER_SIZE];
  80:main.c        ****     uint8 data[3] = {0};
 148              		.loc 1 80 0
 149 0006 3B1D     		adds	r3, r7, #4
 150 0008 0021     		movs	r1, #0
 151 000a 0A46     		mov	r2, r1	@ movhi
 152 000c 1A80     		strh	r2, [r3]	@ movhi
 153 000e 0A46     		mov	r2, r1
 154 0010 9A70     		strb	r2, [r3, #2]
  81:main.c        ****     uint8 crabs = 0;
 155              		.loc 1 81 0
 156 0012 0023     		movs	r3, #0
 157 0014 87F86730 		strb	r3, [r7, #103]
  82:main.c        ****     int i = 2; // to iterate through data array
 158              		.loc 1 82 0
 159 0018 0223     		movs	r3, #2
 160 001a 3B66     		str	r3, [r7, #96]
  83:main.c        ****     
  84:main.c        ****     /* Initialize LCD Screen */
  85:main.c        ****     LCD_Start();
 161              		.loc 1 85 0
 162 001c FFF7FEFF 		bl	LCD_Start
  86:main.c        **** 
  87:main.c        ****     
  88:main.c        ****     CyGlobalIntEnable;
 163              		.loc 1 88 0
 164              		.syntax unified
 165              	@ 88 "main.c" 1
 166 0020 62B6     		CPSIE   i
 167              	@ 0 "" 2
  89:main.c        **** 
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLOetsU.s 			page 6


  90:main.c        ****     /* Start USBFS operation with 5-V operation. */
  91:main.c        ****     USBUART_Start(USBFS_DEVICE, USBUART_5V_OPERATION);
 168              		.loc 1 91 0
 169              		.thumb
 170              		.syntax unified
 171 0022 0121     		movs	r1, #1
 172 0024 0020     		movs	r0, #0
 173 0026 FFF7FEFF 		bl	USBUART_Start
  92:main.c        ****     
  93:main.c        ****     /* Get string to output. */
  94:main.c        ****     sprintf(lineStr,"Hello");
 174              		.loc 1 94 0
 175 002a 07F14803 		add	r3, r7, #72
 176 002e A14A     		ldr	r2, .L26
 177 0030 92E80300 		ldmia	r2, {r0, r1}
 178 0034 1860     		str	r0, [r3]
 179 0036 0433     		adds	r3, r3, #4
 180 0038 1980     		strh	r1, [r3]	@ movhi
  95:main.c        **** 
  96:main.c        ****     /* Clear LCD line. */
  97:main.c        ****     LCD_Position(0u, 0u);
 181              		.loc 1 97 0
 182 003a 0021     		movs	r1, #0
 183 003c 0020     		movs	r0, #0
 184 003e FFF7FEFF 		bl	LCD_Position
  98:main.c        ****     LCD_PrintString("                    ");
 185              		.loc 1 98 0
 186 0042 9D48     		ldr	r0, .L26+4
 187 0044 FFF7FEFF 		bl	LCD_PrintString
  99:main.c        **** 
 100:main.c        ****     /* Output string on LCD. */
 101:main.c        ****     LCD_Position(0u, 0u);
 188              		.loc 1 101 0
 189 0048 0021     		movs	r1, #0
 190 004a 0020     		movs	r0, #0
 191 004c FFF7FEFF 		bl	LCD_Position
 102:main.c        ****     LCD_PrintString(lineStr);
 192              		.loc 1 102 0
 193 0050 07F14803 		add	r3, r7, #72
 194 0054 1846     		mov	r0, r3
 195 0056 FFF7FEFF 		bl	LCD_PrintString
 196              	.L23:
 103:main.c        ****     
 104:main.c        ****    
 105:main.c        ****     for(;;)
 106:main.c        ****     {
 107:main.c        ****         /* Host can send double SET_INTERFACE request. */
 108:main.c        ****         if (0u != USBUART_IsConfigurationChanged())
 197              		.loc 1 108 0
 198 005a FFF7FEFF 		bl	USBUART_IsConfigurationChanged
 199 005e 0346     		mov	r3, r0
 200 0060 002B     		cmp	r3, #0
 201 0062 06D0     		beq	.L2
 109:main.c        ****         {
 110:main.c        ****             /* Initialize IN endpoints when device is configured. */
 111:main.c        ****             if (0u != USBUART_GetConfiguration())
 202              		.loc 1 111 0
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLOetsU.s 			page 7


 203 0064 FFF7FEFF 		bl	USBUART_GetConfiguration
 204 0068 0346     		mov	r3, r0
 205 006a 002B     		cmp	r3, #0
 206 006c 01D0     		beq	.L2
 112:main.c        ****             {
 113:main.c        ****                 /* Enumeration is done, enable OUT endpoint to receive data 
 114:main.c        ****                 * from host. */
 115:main.c        ****                 USBUART_CDC_Init();
 207              		.loc 1 115 0
 208 006e FFF7FEFF 		bl	USBUART_CDC_Init
 209              	.L2:
 116:main.c        ****             }
 117:main.c        ****         }
 118:main.c        ****         
 119:main.c        ****         /* Service USB CDC when device is configured. */
 120:main.c        ****         if (0u != USBUART_GetConfiguration())
 210              		.loc 1 120 0
 211 0072 FFF7FEFF 		bl	USBUART_GetConfiguration
 212 0076 0346     		mov	r3, r0
 213 0078 002B     		cmp	r3, #0
 214 007a EED0     		beq	.L23
 121:main.c        ****         {
 122:main.c        ****             /* Wait until component is ready to send data to host. */
 123:main.c        ****             while (0u == USBUART_CDCIsReady())
 215              		.loc 1 123 0
 216 007c 00BF     		nop
 217              	.L4:
 218              		.loc 1 123 0 is_stmt 0 discriminator 1
 219 007e FFF7FEFF 		bl	USBUART_CDCIsReady
 220 0082 0346     		mov	r3, r0
 221 0084 002B     		cmp	r3, #0
 222 0086 FAD0     		beq	.L4
 124:main.c        ****                 {
 125:main.c        ****                 }
 126:main.c        ****                 if(prompt == 1){
 223              		.loc 1 126 0 is_stmt 1
 224 0088 8C4B     		ldr	r3, .L26+8
 225 008a 1B68     		ldr	r3, [r3]
 226 008c 012B     		cmp	r3, #1
 227 008e 02D1     		bne	.L24
 127:main.c        ****                     USBUART_PutString("Hello. Please enter amount of crabs (up to 127). Terminates 
 228              		.loc 1 127 0
 229 0090 8B48     		ldr	r0, .L26+12
 230 0092 FFF7FEFF 		bl	USBUART_PutString
 231              	.L24:
 128:main.c        ****                 }
 129:main.c        ****             /* Wait until component is ready to send data to host. */
 130:main.c        ****             while (0u == USBUART_CDCIsReady())
 232              		.loc 1 130 0
 233 0096 00BF     		nop
 234              	.L6:
 235              		.loc 1 130 0 is_stmt 0 discriminator 1
 236 0098 FFF7FEFF 		bl	USBUART_CDCIsReady
 237 009c 0346     		mov	r3, r0
 238 009e 002B     		cmp	r3, #0
 239 00a0 FAD0     		beq	.L6
 131:main.c        ****                 {
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLOetsU.s 			page 8


 132:main.c        ****                 }
 133:main.c        ****                 if(prompt == 1){
 240              		.loc 1 133 0 is_stmt 1
 241 00a2 864B     		ldr	r3, .L26+8
 242 00a4 1B68     		ldr	r3, [r3]
 243 00a6 012B     		cmp	r3, #1
 244 00a8 04D1     		bne	.L7
 134:main.c        ****                     USBUART_PutCRLF();
 245              		.loc 1 134 0
 246 00aa FFF7FEFF 		bl	USBUART_PutCRLF
 135:main.c        ****                     prompt = 0;
 247              		.loc 1 135 0
 248 00ae 834B     		ldr	r3, .L26+8
 249 00b0 0022     		movs	r2, #0
 250 00b2 1A60     		str	r2, [r3]
 251              	.L7:
 136:main.c        ****                 }
 137:main.c        ****                 
 138:main.c        ****             /* Check for input data from host. */
 139:main.c        ****             if (0u != USBUART_DataIsReady())
 252              		.loc 1 139 0
 253 00b4 FFF7FEFF 		bl	USBUART_DataIsReady
 254 00b8 0346     		mov	r3, r0
 255 00ba 002B     		cmp	r3, #0
 256 00bc CDD0     		beq	.L23
 140:main.c        ****             {
 141:main.c        ****                 /* Read received data and re-enable OUT endpoint. */
 142:main.c        ****                 count = USBUART_GetAll(buffer);
 257              		.loc 1 142 0
 258 00be 07F10803 		add	r3, r7, #8
 259 00c2 1846     		mov	r0, r3
 260 00c4 FFF7FEFF 		bl	USBUART_GetAll
 261 00c8 0346     		mov	r3, r0
 262 00ca A7F85E30 		strh	r3, [r7, #94]	@ movhi
 143:main.c        ****     
 144:main.c        ****                 sprintf(lineStr,buffer);
 263              		.loc 1 144 0
 264 00ce 07F10802 		add	r2, r7, #8
 265 00d2 07F14803 		add	r3, r7, #72
 266 00d6 1146     		mov	r1, r2
 267 00d8 1846     		mov	r0, r3
 268 00da FFF7FEFF 		bl	sprintf
 145:main.c        ****                 if (strncmp (buffer,"0",1) == 0){
 269              		.loc 1 145 0
 270 00de 07F10803 		add	r3, r7, #8
 271 00e2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 272 00e4 774B     		ldr	r3, .L26+16
 273 00e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 274 00e8 9A42     		cmp	r2, r3
 275 00ea 02D1     		bne	.L8
 146:main.c        ****                     USBUART_PutString("True Zero");
 276              		.loc 1 146 0
 277 00ec 7648     		ldr	r0, .L26+20
 278 00ee FFF7FEFF 		bl	USBUART_PutString
 279              	.L8:
 147:main.c        ****                 }
 148:main.c        ****                 if (strncmp (buffer,"\r",1) == 0){
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLOetsU.s 			page 9


 280              		.loc 1 148 0
 281 00f2 07F10803 		add	r3, r7, #8
 282 00f6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 283 00f8 744B     		ldr	r3, .L26+24
 284 00fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 285 00fc 9A42     		cmp	r2, r3
 286 00fe 10D1     		bne	.L9
 149:main.c        ****                     //USBUART_PutString("Carriage Return");
 150:main.c        ****                     if(i == 1){
 287              		.loc 1 150 0
 288 0100 3B6E     		ldr	r3, [r7, #96]
 289 0102 012B     		cmp	r3, #1
 290 0104 03D1     		bne	.L10
 151:main.c        ****                         oneDigit = 1;
 291              		.loc 1 151 0
 292 0106 724B     		ldr	r3, .L26+28
 293 0108 0122     		movs	r2, #1
 294 010a 1A60     		str	r2, [r3]
 295 010c 05E0     		b	.L11
 296              	.L10:
 152:main.c        ****                     }else if(i == 0){
 297              		.loc 1 152 0
 298 010e 3B6E     		ldr	r3, [r7, #96]
 299 0110 002B     		cmp	r3, #0
 300 0112 02D1     		bne	.L11
 153:main.c        ****                         twoDigit = 1;
 301              		.loc 1 153 0
 302 0114 6F4B     		ldr	r3, .L26+32
 303 0116 0122     		movs	r2, #1
 304 0118 1A60     		str	r2, [r3]
 305              	.L11:
 154:main.c        ****                     }
 155:main.c        ****                     endFlag = 1; // set flag to add numbers
 306              		.loc 1 155 0
 307 011a 6F4B     		ldr	r3, .L26+36
 308 011c 0122     		movs	r2, #1
 309 011e 1A60     		str	r2, [r3]
 310 0120 0BE0     		b	.L12
 311              	.L9:
 156:main.c        ****                 }else{
 157:main.c        ****                     // Convert string to int
 158:main.c        ****                     data[i] = (uint8)atoi(buffer);
 312              		.loc 1 158 0
 313 0122 07F10803 		add	r3, r7, #8
 314 0126 1846     		mov	r0, r3
 315 0128 FFF7FEFF 		bl	atoi
 316 012c 0346     		mov	r3, r0
 317 012e D9B2     		uxtb	r1, r3
 318 0130 3A1D     		adds	r2, r7, #4
 319 0132 3B6E     		ldr	r3, [r7, #96]
 320 0134 1344     		add	r3, r3, r2
 321 0136 0A46     		mov	r2, r1
 322 0138 1A70     		strb	r2, [r3]
 323              	.L12:
 159:main.c        ****                 }
 160:main.c        ****                 
 161:main.c        ****                 /* Make sure data array stays in bounds (size = 3) */
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLOetsU.s 			page 10


 162:main.c        ****                 if(i == 0){
 324              		.loc 1 162 0
 325 013a 3B6E     		ldr	r3, [r7, #96]
 326 013c 002B     		cmp	r3, #0
 327 013e 05D1     		bne	.L13
 163:main.c        ****                     i = 2;
 328              		.loc 1 163 0
 329 0140 0223     		movs	r3, #2
 330 0142 3B66     		str	r3, [r7, #96]
 164:main.c        ****                     endFlag = 1; // 3 characters have been entered
 331              		.loc 1 164 0
 332 0144 644B     		ldr	r3, .L26+36
 333 0146 0122     		movs	r2, #1
 334 0148 1A60     		str	r2, [r3]
 335 014a 02E0     		b	.L14
 336              	.L13:
 165:main.c        ****                 }else{
 166:main.c        ****                     i--;
 337              		.loc 1 166 0
 338 014c 3B6E     		ldr	r3, [r7, #96]
 339 014e 013B     		subs	r3, r3, #1
 340 0150 3B66     		str	r3, [r7, #96]
 341              	.L14:
 167:main.c        ****                 }
 168:main.c        ****                
 169:main.c        ****                 /* 3 characters or carriage return, begin processing data */
 170:main.c        ****                 if(endFlag == 1){
 342              		.loc 1 170 0
 343 0152 614B     		ldr	r3, .L26+36
 344 0154 1B68     		ldr	r3, [r3]
 345 0156 012B     		cmp	r3, #1
 346 0158 64D1     		bne	.L15
 171:main.c        ****                     /* Shift data if carriage return was pressed */
 172:main.c        ****                     if(oneDigit == 1){
 347              		.loc 1 172 0
 348 015a 5D4B     		ldr	r3, .L26+28
 349 015c 1B68     		ldr	r3, [r3]
 350 015e 012B     		cmp	r3, #1
 351 0160 0AD1     		bne	.L16
 173:main.c        ****                         USBUART_PutString("one digit");
 352              		.loc 1 173 0
 353 0162 5E48     		ldr	r0, .L26+40
 354 0164 FFF7FEFF 		bl	USBUART_PutString
 174:main.c        ****                         data[0] = data[2];
 355              		.loc 1 174 0
 356 0168 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 357 016a 3B71     		strb	r3, [r7, #4]
 175:main.c        ****                         data[2] = 0;
 358              		.loc 1 175 0
 359 016c 0023     		movs	r3, #0
 360 016e BB71     		strb	r3, [r7, #6]
 176:main.c        ****                         oneDigit = 0;
 361              		.loc 1 176 0
 362 0170 574B     		ldr	r3, .L26+28
 363 0172 0022     		movs	r2, #0
 364 0174 1A60     		str	r2, [r3]
 365 0176 0FE0     		b	.L17
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLOetsU.s 			page 11


 366              	.L16:
 177:main.c        ****                     }else if(twoDigit == 1){
 367              		.loc 1 177 0
 368 0178 564B     		ldr	r3, .L26+32
 369 017a 1B68     		ldr	r3, [r3]
 370 017c 012B     		cmp	r3, #1
 371 017e 0BD1     		bne	.L17
 178:main.c        ****                         USBUART_PutString("two digits");
 372              		.loc 1 178 0
 373 0180 5748     		ldr	r0, .L26+44
 374 0182 FFF7FEFF 		bl	USBUART_PutString
 179:main.c        ****                         data[0] = data[1];
 375              		.loc 1 179 0
 376 0186 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 377 0188 3B71     		strb	r3, [r7, #4]
 180:main.c        ****                         data[1] = data[2];
 378              		.loc 1 180 0
 379 018a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 380 018c 7B71     		strb	r3, [r7, #5]
 181:main.c        ****                         data[2] = 0;
 381              		.loc 1 181 0
 382 018e 0023     		movs	r3, #0
 383 0190 BB71     		strb	r3, [r7, #6]
 182:main.c        ****                         twoDigit = 0;
 384              		.loc 1 182 0
 385 0192 504B     		ldr	r3, .L26+32
 386 0194 0022     		movs	r2, #0
 387 0196 1A60     		str	r2, [r3]
 388              	.L17:
 183:main.c        ****                     }
 184:main.c        ****                     /* Apply digit place to integer */
 185:main.c        ****                     data[0] = data[0] * 1;
 389              		.loc 1 185 0
 390 0198 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 391 019a 3B71     		strb	r3, [r7, #4]
 186:main.c        ****                     data[1] = data[1] * 10;
 392              		.loc 1 186 0
 393 019c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 394 019e 1A46     		mov	r2, r3
 395 01a0 9200     		lsls	r2, r2, #2
 396 01a2 1344     		add	r3, r3, r2
 397 01a4 5B00     		lsls	r3, r3, #1
 398 01a6 DBB2     		uxtb	r3, r3
 399 01a8 7B71     		strb	r3, [r7, #5]
 187:main.c        ****                     data[2] = data[2] * 100;
 400              		.loc 1 187 0
 401 01aa BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 402 01ac 1A46     		mov	r2, r3
 403 01ae 9200     		lsls	r2, r2, #2
 404 01b0 1344     		add	r3, r3, r2
 405 01b2 1A46     		mov	r2, r3
 406 01b4 9100     		lsls	r1, r2, #2
 407 01b6 1A46     		mov	r2, r3
 408 01b8 0B46     		mov	r3, r1
 409 01ba 1344     		add	r3, r3, r2
 410 01bc 9B00     		lsls	r3, r3, #2
 411 01be DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLOetsU.s 			page 12


 412 01c0 BB71     		strb	r3, [r7, #6]
 188:main.c        ****                     crabs = data[0] + data[1] + data[2];
 413              		.loc 1 188 0
 414 01c2 3A79     		ldrb	r2, [r7, #4]	@ zero_extendqisi2
 415 01c4 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 416 01c6 1344     		add	r3, r3, r2
 417 01c8 DAB2     		uxtb	r2, r3
 418 01ca BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 419 01cc 1344     		add	r3, r3, r2
 420 01ce 87F86730 		strb	r3, [r7, #103]
 189:main.c        ****                     /* reset array */
 190:main.c        ****                     data[0] = 0; 
 421              		.loc 1 190 0
 422 01d2 0023     		movs	r3, #0
 423 01d4 3B71     		strb	r3, [r7, #4]
 191:main.c        ****                     data[1] = 0;
 424              		.loc 1 191 0
 425 01d6 0023     		movs	r3, #0
 426 01d8 7B71     		strb	r3, [r7, #5]
 192:main.c        ****                     data[2] = 0;
 427              		.loc 1 192 0
 428 01da 0023     		movs	r3, #0
 429 01dc BB71     		strb	r3, [r7, #6]
 193:main.c        ****                     i = 2;
 430              		.loc 1 193 0
 431 01de 0223     		movs	r3, #2
 432 01e0 3B66     		str	r3, [r7, #96]
 194:main.c        ****                     endFlag = 0;
 433              		.loc 1 194 0
 434 01e2 3D4B     		ldr	r3, .L26+36
 435 01e4 0022     		movs	r2, #0
 436 01e6 1A60     		str	r2, [r3]
 195:main.c        ****                     
 196:main.c        ****                     /* Wait until component is ready to send data to host. */
 197:main.c        ****                     while (0u == USBUART_CDCIsReady())
 437              		.loc 1 197 0
 438 01e8 00BF     		nop
 439              	.L18:
 440              		.loc 1 197 0 is_stmt 0 discriminator 1
 441 01ea FFF7FEFF 		bl	USBUART_CDCIsReady
 442 01ee 0346     		mov	r3, r0
 443 01f0 002B     		cmp	r3, #0
 444 01f2 FAD0     		beq	.L18
 198:main.c        ****                     {
 199:main.c        ****                     }
 200:main.c        ****                         /* Clear LCD line. */
 201:main.c        ****                         LCD_Position(0u, 0u);
 445              		.loc 1 201 0 is_stmt 1
 446 01f4 0021     		movs	r1, #0
 447 01f6 0020     		movs	r0, #0
 448 01f8 FFF7FEFF 		bl	LCD_Position
 202:main.c        ****                         LCD_PrintString("           ");
 449              		.loc 1 202 0
 450 01fc 3948     		ldr	r0, .L26+48
 451 01fe FFF7FEFF 		bl	LCD_PrintString
 203:main.c        ****                         LCD_Position(0u, 0u);
 452              		.loc 1 203 0
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLOetsU.s 			page 13


 453 0202 0021     		movs	r1, #0
 454 0204 0020     		movs	r0, #0
 455 0206 FFF7FEFF 		bl	LCD_Position
 204:main.c        ****                         sprintf(lineStr,"%d", crabs);
 456              		.loc 1 204 0
 457 020a 97F86720 		ldrb	r2, [r7, #103]	@ zero_extendqisi2
 458 020e 07F14803 		add	r3, r7, #72
 459 0212 3549     		ldr	r1, .L26+52
 460 0214 1846     		mov	r0, r3
 461 0216 FFF7FEFF 		bl	sprintf
 205:main.c        ****                         LCD_PrintString(lineStr);
 462              		.loc 1 205 0
 463 021a 07F14803 		add	r3, r7, #72
 464 021e 1846     		mov	r0, r3
 465 0220 FFF7FEFF 		bl	LCD_PrintString
 466              	.L15:
 206:main.c        ****                 }
 207:main.c        ****                 
 208:main.c        **** 
 209:main.c        ****                 if (0u != count)
 467              		.loc 1 209 0
 468 0224 B7F85E30 		ldrh	r3, [r7, #94]
 469 0228 002B     		cmp	r3, #0
 470 022a 2FD0     		beq	.L25
 210:main.c        ****                 {
 211:main.c        ****                     /* Wait until component is ready to send data to host. */
 212:main.c        ****                     while (0u == USBUART_CDCIsReady())
 471              		.loc 1 212 0
 472 022c 00BF     		nop
 473              	.L20:
 474              		.loc 1 212 0 is_stmt 0 discriminator 1
 475 022e FFF7FEFF 		bl	USBUART_CDCIsReady
 476 0232 0346     		mov	r3, r0
 477 0234 002B     		cmp	r3, #0
 478 0236 FAD0     		beq	.L20
 213:main.c        ****                     {
 214:main.c        ****                     }
 215:main.c        **** 
 216:main.c        ****                     /* Send data back to host. */
 217:main.c        ****                     USBUART_PutData(buffer, count);
 479              		.loc 1 217 0 is_stmt 1
 480 0238 B7F85E20 		ldrh	r2, [r7, #94]
 481 023c 07F10803 		add	r3, r7, #8
 482 0240 1146     		mov	r1, r2
 483 0242 1846     		mov	r0, r3
 484 0244 FFF7FEFF 		bl	USBUART_PutData
 218:main.c        **** 
 219:main.c        **** 
 220:main.c        ****                     /* If the last sent packet is exactly the maximum packet 
 221:main.c        ****                     *  size, it is followed by a zero-length packet to assure
 222:main.c        ****                     *  that the end of the segment is properly identified by 
 223:main.c        ****                     *  the terminal.
 224:main.c        ****                     */
 225:main.c        ****                     if (USBUART_BUFFER_SIZE == count)
 485              		.loc 1 225 0
 486 0248 B7F85E30 		ldrh	r3, [r7, #94]
 487 024c 402B     		cmp	r3, #64
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLOetsU.s 			page 14


 488 024e 1DD1     		bne	.L25
 226:main.c        ****                     {
 227:main.c        ****                         /* Wait until component is ready to send data to PC. */
 228:main.c        ****                         while (0u == USBUART_CDCIsReady())
 489              		.loc 1 228 0
 490 0250 00BF     		nop
 491              	.L21:
 492              		.loc 1 228 0 is_stmt 0 discriminator 1
 493 0252 FFF7FEFF 		bl	USBUART_CDCIsReady
 494 0256 0346     		mov	r3, r0
 495 0258 002B     		cmp	r3, #0
 496 025a FAD0     		beq	.L21
 229:main.c        ****                         {
 230:main.c        ****                         }
 231:main.c        ****                         
 232:main.c        ****                         /* Clear LCD line. */
 233:main.c        ****                         LCD_Position(0u, 0u);
 497              		.loc 1 233 0 is_stmt 1
 498 025c 0021     		movs	r1, #0
 499 025e 0020     		movs	r0, #0
 500 0260 FFF7FEFF 		bl	LCD_Position
 234:main.c        ****                         LCD_PrintString("           ");
 501              		.loc 1 234 0
 502 0264 1F48     		ldr	r0, .L26+48
 503 0266 FFF7FEFF 		bl	LCD_PrintString
 235:main.c        ****                         sprintf(lineStr,"%d", crabs);
 504              		.loc 1 235 0
 505 026a 97F86720 		ldrb	r2, [r7, #103]	@ zero_extendqisi2
 506 026e 07F14803 		add	r3, r7, #72
 507 0272 1D49     		ldr	r1, .L26+52
 508 0274 1846     		mov	r0, r3
 509 0276 FFF7FEFF 		bl	sprintf
 236:main.c        ****                         LCD_PrintString(lineStr);
 510              		.loc 1 236 0
 511 027a 07F14803 		add	r3, r7, #72
 512 027e 1846     		mov	r0, r3
 513 0280 FFF7FEFF 		bl	LCD_PrintString
 237:main.c        **** 
 238:main.c        ****                         /* Send zero-length packet to PC. */
 239:main.c        ****                         USBUART_PutData(NULL, 0u);
 514              		.loc 1 239 0
 515 0284 0021     		movs	r1, #0
 516 0286 0020     		movs	r0, #0
 517 0288 FFF7FEFF 		bl	USBUART_PutData
 518              	.L25:
 240:main.c        ****                     }
 241:main.c        ****                 }
 242:main.c        ****                      /* Wait until component is ready to send data to host. */
 243:main.c        ****                     while (0u == USBUART_CDCIsReady())
 519              		.loc 1 243 0
 520 028c 00BF     		nop
 521              	.L22:
 522              		.loc 1 243 0 is_stmt 0 discriminator 1
 523 028e FFF7FEFF 		bl	USBUART_CDCIsReady
 524 0292 0346     		mov	r3, r0
 525 0294 002B     		cmp	r3, #0
 526 0296 FAD0     		beq	.L22
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLOetsU.s 			page 15


 244:main.c        ****                     {
 245:main.c        ****                     }
 246:main.c        ****                     sprintf(lineStr,"%d", data[2]);
 527              		.loc 1 246 0 is_stmt 1
 528 0298 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 529 029a 1A46     		mov	r2, r3
 530 029c 07F14803 		add	r3, r7, #72
 531 02a0 1149     		ldr	r1, .L26+52
 532 02a2 1846     		mov	r0, r3
 533 02a4 FFF7FEFF 		bl	sprintf
 247:main.c        ****                     USBUART_PutString(lineStr);
 534              		.loc 1 247 0
 535 02a8 07F14803 		add	r3, r7, #72
 536 02ac 1846     		mov	r0, r3
 537 02ae FFF7FEFF 		bl	USBUART_PutString
 248:main.c        ****                    
 249:main.c        ****             } // end (0u != USBUART_DataIsReady())
 250:main.c        ****         } // end (0u != USBUART_GetConfiguration())
 251:main.c        ****     } // end for(;;)
 538              		.loc 1 251 0
 539 02b2 D2E6     		b	.L23
 540              	.L27:
 541              		.align	2
 542              	.L26:
 543 02b4 30000000 		.word	.LC8
 544 02b8 38000000 		.word	.LC9
 545 02bc 00000000 		.word	prompt
 546 02c0 50000000 		.word	.LC10
 547 02c4 E4000000 		.word	.LC11
 548 02c8 E8000000 		.word	.LC12
 549 02cc F4000000 		.word	.LC13
 550 02d0 00000000 		.word	oneDigit
 551 02d4 00000000 		.word	twoDigit
 552 02d8 00000000 		.word	endFlag
 553 02dc F8000000 		.word	.LC14
 554 02e0 04010000 		.word	.LC15
 555 02e4 10010000 		.word	.LC16
 556 02e8 1C010000 		.word	.LC17
 557              		.cfi_endproc
 558              	.LFE64:
 559              		.size	main, .-main
 560              		.text
 561              	.Letext0:
 562              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 563              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 564              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 565              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 566              		.section	.debug_info,"",%progbits
 567              	.Ldebug_info0:
 568 0000 00020000 		.4byte	0x200
 569 0004 0400     		.2byte	0x4
 570 0006 00000000 		.4byte	.Ldebug_abbrev0
 571 000a 04       		.byte	0x4
 572 000b 01       		.uleb128 0x1
 573 000c 00000000 		.4byte	.LASF31
 574 0010 0C       		.byte	0xc
 575 0011 AF010000 		.4byte	.LASF32
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLOetsU.s 			page 16


 576 0015 45010000 		.4byte	.LASF33
 577 0019 00000000 		.4byte	.Ldebug_ranges0+0
 578 001d 00000000 		.4byte	0
 579 0021 00000000 		.4byte	.Ldebug_line0
 580 0025 02       		.uleb128 0x2
 581 0026 01       		.byte	0x1
 582 0027 06       		.byte	0x6
 583 0028 ED010000 		.4byte	.LASF0
 584 002c 02       		.uleb128 0x2
 585 002d 01       		.byte	0x1
 586 002e 08       		.byte	0x8
 587 002f B5000000 		.4byte	.LASF1
 588 0033 02       		.uleb128 0x2
 589 0034 02       		.byte	0x2
 590 0035 05       		.byte	0x5
 591 0036 C1010000 		.4byte	.LASF2
 592 003a 02       		.uleb128 0x2
 593 003b 02       		.byte	0x2
 594 003c 07       		.byte	0x7
 595 003d DB000000 		.4byte	.LASF3
 596 0041 03       		.uleb128 0x3
 597 0042 97000000 		.4byte	.LASF9
 598 0046 02       		.byte	0x2
 599 0047 3F       		.byte	0x3f
 600 0048 4C000000 		.4byte	0x4c
 601 004c 02       		.uleb128 0x2
 602 004d 04       		.byte	0x4
 603 004e 05       		.byte	0x5
 604 004f D8010000 		.4byte	.LASF4
 605 0053 02       		.uleb128 0x2
 606 0054 04       		.byte	0x4
 607 0055 07       		.byte	0x7
 608 0056 C9000000 		.4byte	.LASF5
 609 005a 02       		.uleb128 0x2
 610 005b 08       		.byte	0x8
 611 005c 05       		.byte	0x5
 612 005d A1010000 		.4byte	.LASF6
 613 0061 02       		.uleb128 0x2
 614 0062 08       		.byte	0x8
 615 0063 07       		.byte	0x7
 616 0064 2E010000 		.4byte	.LASF7
 617 0068 04       		.uleb128 0x4
 618 0069 04       		.byte	0x4
 619 006a 05       		.byte	0x5
 620 006b 696E7400 		.ascii	"int\000"
 621 006f 02       		.uleb128 0x2
 622 0070 04       		.byte	0x4
 623 0071 07       		.byte	0x7
 624 0072 21010000 		.4byte	.LASF8
 625 0076 03       		.uleb128 0x3
 626 0077 89010000 		.4byte	.LASF10
 627 007b 03       		.byte	0x3
 628 007c 2C       		.byte	0x2c
 629 007d 41000000 		.4byte	0x41
 630 0081 05       		.uleb128 0x5
 631 0082 D2010000 		.4byte	.LASF11
 632 0086 04       		.byte	0x4
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLOetsU.s 			page 17


 633 0087 9201     		.2byte	0x192
 634 0089 2C000000 		.4byte	0x2c
 635 008d 05       		.uleb128 0x5
 636 008e 15010000 		.4byte	.LASF12
 637 0092 04       		.byte	0x4
 638 0093 9301     		.2byte	0x193
 639 0095 3A000000 		.4byte	0x3a
 640 0099 02       		.uleb128 0x2
 641 009a 04       		.byte	0x4
 642 009b 04       		.byte	0x4
 643 009c AA000000 		.4byte	.LASF13
 644 00a0 02       		.uleb128 0x2
 645 00a1 08       		.byte	0x8
 646 00a2 04       		.byte	0x4
 647 00a3 00010000 		.4byte	.LASF14
 648 00a7 05       		.uleb128 0x5
 649 00a8 C3000000 		.4byte	.LASF15
 650 00ac 04       		.byte	0x4
 651 00ad A301     		.2byte	0x1a3
 652 00af B3000000 		.4byte	0xb3
 653 00b3 02       		.uleb128 0x2
 654 00b4 01       		.byte	0x1
 655 00b5 08       		.byte	0x8
 656 00b6 B6010000 		.4byte	.LASF16
 657 00ba 02       		.uleb128 0x2
 658 00bb 08       		.byte	0x8
 659 00bc 04       		.byte	0x4
 660 00bd E1010000 		.4byte	.LASF17
 661 00c1 02       		.uleb128 0x2
 662 00c2 04       		.byte	0x4
 663 00c3 07       		.byte	0x7
 664 00c4 91010000 		.4byte	.LASF18
 665 00c8 06       		.uleb128 0x6
 666 00c9 1C010000 		.4byte	.LASF34
 667 00cd 01       		.byte	0x1
 668 00ce 4B       		.byte	0x4b
 669 00cf 68000000 		.4byte	0x68
 670 00d3 00000000 		.4byte	.LFB64
 671 00d7 EC020000 		.4byte	.LFE64-.LFB64
 672 00db 01       		.uleb128 0x1
 673 00dc 9C       		.byte	0x9c
 674 00dd 36010000 		.4byte	0x136
 675 00e1 07       		.uleb128 0x7
 676 00e2 BB010000 		.4byte	.LASF19
 677 00e6 01       		.byte	0x1
 678 00e7 4D       		.byte	0x4d
 679 00e8 8D000000 		.4byte	0x8d
 680 00ec 02       		.uleb128 0x2
 681 00ed 91       		.byte	0x91
 682 00ee 6E       		.sleb128 -18
 683 00ef 07       		.uleb128 0x7
 684 00f0 00020000 		.4byte	.LASF20
 685 00f4 01       		.byte	0x1
 686 00f5 4E       		.byte	0x4e
 687 00f6 36010000 		.4byte	0x136
 688 00fa 02       		.uleb128 0x2
 689 00fb 91       		.byte	0x91
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLOetsU.s 			page 18


 690 00fc 58       		.sleb128 -40
 691 00fd 07       		.uleb128 0x7
 692 00fe CB010000 		.4byte	.LASF21
 693 0102 01       		.byte	0x1
 694 0103 4F       		.byte	0x4f
 695 0104 46010000 		.4byte	0x146
 696 0108 03       		.uleb128 0x3
 697 0109 91       		.byte	0x91
 698 010a 987F     		.sleb128 -104
 699 010c 07       		.uleb128 0x7
 700 010d B0000000 		.4byte	.LASF22
 701 0111 01       		.byte	0x1
 702 0112 50       		.byte	0x50
 703 0113 56010000 		.4byte	0x156
 704 0117 03       		.uleb128 0x3
 705 0118 91       		.byte	0x91
 706 0119 947F     		.sleb128 -108
 707 011b 07       		.uleb128 0x7
 708 011c 07010000 		.4byte	.LASF23
 709 0120 01       		.byte	0x1
 710 0121 51       		.byte	0x51
 711 0122 81000000 		.4byte	0x81
 712 0126 02       		.uleb128 0x2
 713 0127 91       		.byte	0x91
 714 0128 77       		.sleb128 -9
 715 0129 08       		.uleb128 0x8
 716 012a 6900     		.ascii	"i\000"
 717 012c 01       		.byte	0x1
 718 012d 52       		.byte	0x52
 719 012e 68000000 		.4byte	0x68
 720 0132 02       		.uleb128 0x2
 721 0133 91       		.byte	0x91
 722 0134 70       		.sleb128 -16
 723 0135 00       		.byte	0
 724 0136 09       		.uleb128 0x9
 725 0137 A7000000 		.4byte	0xa7
 726 013b 46010000 		.4byte	0x146
 727 013f 0A       		.uleb128 0xa
 728 0140 C1000000 		.4byte	0xc1
 729 0144 13       		.byte	0x13
 730 0145 00       		.byte	0
 731 0146 09       		.uleb128 0x9
 732 0147 81000000 		.4byte	0x81
 733 014b 56010000 		.4byte	0x156
 734 014f 0A       		.uleb128 0xa
 735 0150 C1000000 		.4byte	0xc1
 736 0154 3F       		.byte	0x3f
 737 0155 00       		.byte	0
 738 0156 09       		.uleb128 0x9
 739 0157 81000000 		.4byte	0x81
 740 015b 66010000 		.4byte	0x166
 741 015f 0A       		.uleb128 0xa
 742 0160 C1000000 		.4byte	0xc1
 743 0164 02       		.byte	0x2
 744 0165 00       		.byte	0
 745 0166 0B       		.uleb128 0xb
 746 0167 F3000000 		.4byte	.LASF24
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLOetsU.s 			page 19


 747 016b 05       		.byte	0x5
 748 016c 1207     		.2byte	0x712
 749 016e 72010000 		.4byte	0x172
 750 0172 0C       		.uleb128 0xc
 751 0173 76000000 		.4byte	0x76
 752 0177 09       		.uleb128 0x9
 753 0178 87010000 		.4byte	0x187
 754 017c 87010000 		.4byte	0x187
 755 0180 0A       		.uleb128 0xa
 756 0181 C1000000 		.4byte	0xc1
 757 0185 04       		.byte	0x4
 758 0186 00       		.byte	0
 759 0187 0D       		.uleb128 0xd
 760 0188 04       		.byte	0x4
 761 0189 A7000000 		.4byte	0xa7
 762 018d 0E       		.uleb128 0xe
 763 018e F9010000 		.4byte	.LASF25
 764 0192 01       		.byte	0x1
 765 0193 31       		.byte	0x31
 766 0194 77010000 		.4byte	0x177
 767 0198 05       		.uleb128 0x5
 768 0199 03       		.byte	0x3
 769 019a 00000000 		.4byte	parity
 770 019e 09       		.uleb128 0x9
 771 019f 87010000 		.4byte	0x187
 772 01a3 AE010000 		.4byte	0x1ae
 773 01a7 0A       		.uleb128 0xa
 774 01a8 C1000000 		.4byte	0xc1
 775 01ac 02       		.byte	0x2
 776 01ad 00       		.byte	0
 777 01ae 0E       		.uleb128 0xe
 778 01af EE000000 		.4byte	.LASF26
 779 01b3 01       		.byte	0x1
 780 01b4 32       		.byte	0x32
 781 01b5 9E010000 		.4byte	0x19e
 782 01b9 05       		.uleb128 0x5
 783 01ba 03       		.byte	0x3
 784 01bb 00000000 		.4byte	stop
 785 01bf 0E       		.uleb128 0xe
 786 01c0 9A010000 		.4byte	.LASF27
 787 01c4 01       		.byte	0x1
 788 01c5 33       		.byte	0x33
 789 01c6 68000000 		.4byte	0x68
 790 01ca 05       		.uleb128 0x5
 791 01cb 03       		.byte	0x3
 792 01cc 00000000 		.4byte	prompt
 793 01d0 0E       		.uleb128 0xe
 794 01d1 0D010000 		.4byte	.LASF28
 795 01d5 01       		.byte	0x1
 796 01d6 34       		.byte	0x34
 797 01d7 68000000 		.4byte	0x68
 798 01db 05       		.uleb128 0x5
 799 01dc 03       		.byte	0x3
 800 01dd 00000000 		.4byte	endFlag
 801 01e1 0E       		.uleb128 0xe
 802 01e2 8E000000 		.4byte	.LASF29
 803 01e6 01       		.byte	0x1
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLOetsU.s 			page 20


 804 01e7 35       		.byte	0x35
 805 01e8 68000000 		.4byte	0x68
 806 01ec 05       		.uleb128 0x5
 807 01ed 03       		.byte	0x3
 808 01ee 00000000 		.4byte	oneDigit
 809 01f2 0E       		.uleb128 0xe
 810 01f3 A1000000 		.4byte	.LASF30
 811 01f7 01       		.byte	0x1
 812 01f8 36       		.byte	0x36
 813 01f9 68000000 		.4byte	0x68
 814 01fd 05       		.uleb128 0x5
 815 01fe 03       		.byte	0x3
 816 01ff 00000000 		.4byte	twoDigit
 817 0203 00       		.byte	0
 818              		.section	.debug_abbrev,"",%progbits
 819              	.Ldebug_abbrev0:
 820 0000 01       		.uleb128 0x1
 821 0001 11       		.uleb128 0x11
 822 0002 01       		.byte	0x1
 823 0003 25       		.uleb128 0x25
 824 0004 0E       		.uleb128 0xe
 825 0005 13       		.uleb128 0x13
 826 0006 0B       		.uleb128 0xb
 827 0007 03       		.uleb128 0x3
 828 0008 0E       		.uleb128 0xe
 829 0009 1B       		.uleb128 0x1b
 830 000a 0E       		.uleb128 0xe
 831 000b 55       		.uleb128 0x55
 832 000c 17       		.uleb128 0x17
 833 000d 11       		.uleb128 0x11
 834 000e 01       		.uleb128 0x1
 835 000f 10       		.uleb128 0x10
 836 0010 17       		.uleb128 0x17
 837 0011 00       		.byte	0
 838 0012 00       		.byte	0
 839 0013 02       		.uleb128 0x2
 840 0014 24       		.uleb128 0x24
 841 0015 00       		.byte	0
 842 0016 0B       		.uleb128 0xb
 843 0017 0B       		.uleb128 0xb
 844 0018 3E       		.uleb128 0x3e
 845 0019 0B       		.uleb128 0xb
 846 001a 03       		.uleb128 0x3
 847 001b 0E       		.uleb128 0xe
 848 001c 00       		.byte	0
 849 001d 00       		.byte	0
 850 001e 03       		.uleb128 0x3
 851 001f 16       		.uleb128 0x16
 852 0020 00       		.byte	0
 853 0021 03       		.uleb128 0x3
 854 0022 0E       		.uleb128 0xe
 855 0023 3A       		.uleb128 0x3a
 856 0024 0B       		.uleb128 0xb
 857 0025 3B       		.uleb128 0x3b
 858 0026 0B       		.uleb128 0xb
 859 0027 49       		.uleb128 0x49
 860 0028 13       		.uleb128 0x13
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLOetsU.s 			page 21


 861 0029 00       		.byte	0
 862 002a 00       		.byte	0
 863 002b 04       		.uleb128 0x4
 864 002c 24       		.uleb128 0x24
 865 002d 00       		.byte	0
 866 002e 0B       		.uleb128 0xb
 867 002f 0B       		.uleb128 0xb
 868 0030 3E       		.uleb128 0x3e
 869 0031 0B       		.uleb128 0xb
 870 0032 03       		.uleb128 0x3
 871 0033 08       		.uleb128 0x8
 872 0034 00       		.byte	0
 873 0035 00       		.byte	0
 874 0036 05       		.uleb128 0x5
 875 0037 16       		.uleb128 0x16
 876 0038 00       		.byte	0
 877 0039 03       		.uleb128 0x3
 878 003a 0E       		.uleb128 0xe
 879 003b 3A       		.uleb128 0x3a
 880 003c 0B       		.uleb128 0xb
 881 003d 3B       		.uleb128 0x3b
 882 003e 05       		.uleb128 0x5
 883 003f 49       		.uleb128 0x49
 884 0040 13       		.uleb128 0x13
 885 0041 00       		.byte	0
 886 0042 00       		.byte	0
 887 0043 06       		.uleb128 0x6
 888 0044 2E       		.uleb128 0x2e
 889 0045 01       		.byte	0x1
 890 0046 3F       		.uleb128 0x3f
 891 0047 19       		.uleb128 0x19
 892 0048 03       		.uleb128 0x3
 893 0049 0E       		.uleb128 0xe
 894 004a 3A       		.uleb128 0x3a
 895 004b 0B       		.uleb128 0xb
 896 004c 3B       		.uleb128 0x3b
 897 004d 0B       		.uleb128 0xb
 898 004e 49       		.uleb128 0x49
 899 004f 13       		.uleb128 0x13
 900 0050 11       		.uleb128 0x11
 901 0051 01       		.uleb128 0x1
 902 0052 12       		.uleb128 0x12
 903 0053 06       		.uleb128 0x6
 904 0054 40       		.uleb128 0x40
 905 0055 18       		.uleb128 0x18
 906 0056 9642     		.uleb128 0x2116
 907 0058 19       		.uleb128 0x19
 908 0059 01       		.uleb128 0x1
 909 005a 13       		.uleb128 0x13
 910 005b 00       		.byte	0
 911 005c 00       		.byte	0
 912 005d 07       		.uleb128 0x7
 913 005e 34       		.uleb128 0x34
 914 005f 00       		.byte	0
 915 0060 03       		.uleb128 0x3
 916 0061 0E       		.uleb128 0xe
 917 0062 3A       		.uleb128 0x3a
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLOetsU.s 			page 22


 918 0063 0B       		.uleb128 0xb
 919 0064 3B       		.uleb128 0x3b
 920 0065 0B       		.uleb128 0xb
 921 0066 49       		.uleb128 0x49
 922 0067 13       		.uleb128 0x13
 923 0068 02       		.uleb128 0x2
 924 0069 18       		.uleb128 0x18
 925 006a 00       		.byte	0
 926 006b 00       		.byte	0
 927 006c 08       		.uleb128 0x8
 928 006d 34       		.uleb128 0x34
 929 006e 00       		.byte	0
 930 006f 03       		.uleb128 0x3
 931 0070 08       		.uleb128 0x8
 932 0071 3A       		.uleb128 0x3a
 933 0072 0B       		.uleb128 0xb
 934 0073 3B       		.uleb128 0x3b
 935 0074 0B       		.uleb128 0xb
 936 0075 49       		.uleb128 0x49
 937 0076 13       		.uleb128 0x13
 938 0077 02       		.uleb128 0x2
 939 0078 18       		.uleb128 0x18
 940 0079 00       		.byte	0
 941 007a 00       		.byte	0
 942 007b 09       		.uleb128 0x9
 943 007c 01       		.uleb128 0x1
 944 007d 01       		.byte	0x1
 945 007e 49       		.uleb128 0x49
 946 007f 13       		.uleb128 0x13
 947 0080 01       		.uleb128 0x1
 948 0081 13       		.uleb128 0x13
 949 0082 00       		.byte	0
 950 0083 00       		.byte	0
 951 0084 0A       		.uleb128 0xa
 952 0085 21       		.uleb128 0x21
 953 0086 00       		.byte	0
 954 0087 49       		.uleb128 0x49
 955 0088 13       		.uleb128 0x13
 956 0089 2F       		.uleb128 0x2f
 957 008a 0B       		.uleb128 0xb
 958 008b 00       		.byte	0
 959 008c 00       		.byte	0
 960 008d 0B       		.uleb128 0xb
 961 008e 34       		.uleb128 0x34
 962 008f 00       		.byte	0
 963 0090 03       		.uleb128 0x3
 964 0091 0E       		.uleb128 0xe
 965 0092 3A       		.uleb128 0x3a
 966 0093 0B       		.uleb128 0xb
 967 0094 3B       		.uleb128 0x3b
 968 0095 05       		.uleb128 0x5
 969 0096 49       		.uleb128 0x49
 970 0097 13       		.uleb128 0x13
 971 0098 3F       		.uleb128 0x3f
 972 0099 19       		.uleb128 0x19
 973 009a 3C       		.uleb128 0x3c
 974 009b 19       		.uleb128 0x19
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLOetsU.s 			page 23


 975 009c 00       		.byte	0
 976 009d 00       		.byte	0
 977 009e 0C       		.uleb128 0xc
 978 009f 35       		.uleb128 0x35
 979 00a0 00       		.byte	0
 980 00a1 49       		.uleb128 0x49
 981 00a2 13       		.uleb128 0x13
 982 00a3 00       		.byte	0
 983 00a4 00       		.byte	0
 984 00a5 0D       		.uleb128 0xd
 985 00a6 0F       		.uleb128 0xf
 986 00a7 00       		.byte	0
 987 00a8 0B       		.uleb128 0xb
 988 00a9 0B       		.uleb128 0xb
 989 00aa 49       		.uleb128 0x49
 990 00ab 13       		.uleb128 0x13
 991 00ac 00       		.byte	0
 992 00ad 00       		.byte	0
 993 00ae 0E       		.uleb128 0xe
 994 00af 34       		.uleb128 0x34
 995 00b0 00       		.byte	0
 996 00b1 03       		.uleb128 0x3
 997 00b2 0E       		.uleb128 0xe
 998 00b3 3A       		.uleb128 0x3a
 999 00b4 0B       		.uleb128 0xb
 1000 00b5 3B       		.uleb128 0x3b
 1001 00b6 0B       		.uleb128 0xb
 1002 00b7 49       		.uleb128 0x49
 1003 00b8 13       		.uleb128 0x13
 1004 00b9 3F       		.uleb128 0x3f
 1005 00ba 19       		.uleb128 0x19
 1006 00bb 02       		.uleb128 0x2
 1007 00bc 18       		.uleb128 0x18
 1008 00bd 00       		.byte	0
 1009 00be 00       		.byte	0
 1010 00bf 00       		.byte	0
 1011              		.section	.debug_aranges,"",%progbits
 1012 0000 1C000000 		.4byte	0x1c
 1013 0004 0200     		.2byte	0x2
 1014 0006 00000000 		.4byte	.Ldebug_info0
 1015 000a 04       		.byte	0x4
 1016 000b 00       		.byte	0
 1017 000c 0000     		.2byte	0
 1018 000e 0000     		.2byte	0
 1019 0010 00000000 		.4byte	.LFB64
 1020 0014 EC020000 		.4byte	.LFE64-.LFB64
 1021 0018 00000000 		.4byte	0
 1022 001c 00000000 		.4byte	0
 1023              		.section	.debug_ranges,"",%progbits
 1024              	.Ldebug_ranges0:
 1025 0000 00000000 		.4byte	.LFB64
 1026 0004 EC020000 		.4byte	.LFE64
 1027 0008 00000000 		.4byte	0
 1028 000c 00000000 		.4byte	0
 1029              		.section	.debug_line,"",%progbits
 1030              	.Ldebug_line0:
 1031 0000 DB010000 		.section	.debug_str,"MS",%progbits,1
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLOetsU.s 			page 24


 1031      02004C01 
 1031      00000201 
 1031      FB0E0D00 
 1031      01010101 
 1032              	.LASF31:
 1033 0000 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1033      43313120 
 1033      352E342E 
 1033      31203230 
 1033      31363036 
 1034 0033 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1034      20726576 
 1034      6973696F 
 1034      6E203233 
 1034      37373135 
 1035 0066 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1035      66756E63 
 1035      74696F6E 
 1035      2D736563 
 1035      74696F6E 
 1036              	.LASF29:
 1037 008e 6F6E6544 		.ascii	"oneDigit\000"
 1037      69676974 
 1037      00
 1038              	.LASF9:
 1039 0097 5F5F696E 		.ascii	"__int32_t\000"
 1039      7433325F 
 1039      7400
 1040              	.LASF30:
 1041 00a1 74776F44 		.ascii	"twoDigit\000"
 1041      69676974 
 1041      00
 1042              	.LASF13:
 1043 00aa 666C6F61 		.ascii	"float\000"
 1043      7400
 1044              	.LASF22:
 1045 00b0 64617461 		.ascii	"data\000"
 1045      00
 1046              	.LASF1:
 1047 00b5 756E7369 		.ascii	"unsigned char\000"
 1047      676E6564 
 1047      20636861 
 1047      7200
 1048              	.LASF15:
 1049 00c3 63686172 		.ascii	"char8\000"
 1049      3800
 1050              	.LASF5:
 1051 00c9 6C6F6E67 		.ascii	"long unsigned int\000"
 1051      20756E73 
 1051      69676E65 
 1051      6420696E 
 1051      7400
 1052              	.LASF3:
 1053 00db 73686F72 		.ascii	"short unsigned int\000"
 1053      7420756E 
 1053      7369676E 
 1053      65642069 
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLOetsU.s 			page 25


 1053      6E7400
 1054              	.LASF26:
 1055 00ee 73746F70 		.ascii	"stop\000"
 1055      00
 1056              	.LASF24:
 1057 00f3 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1057      52784275 
 1057      66666572 
 1057      00
 1058              	.LASF14:
 1059 0100 646F7562 		.ascii	"double\000"
 1059      6C6500
 1060              	.LASF23:
 1061 0107 63726162 		.ascii	"crabs\000"
 1061      7300
 1062              	.LASF28:
 1063 010d 656E6446 		.ascii	"endFlag\000"
 1063      6C616700 
 1064              	.LASF12:
 1065 0115 75696E74 		.ascii	"uint16\000"
 1065      313600
 1066              	.LASF34:
 1067 011c 6D61696E 		.ascii	"main\000"
 1067      00
 1068              	.LASF8:
 1069 0121 756E7369 		.ascii	"unsigned int\000"
 1069      676E6564 
 1069      20696E74 
 1069      00
 1070              	.LASF7:
 1071 012e 6C6F6E67 		.ascii	"long long unsigned int\000"
 1071      206C6F6E 
 1071      6720756E 
 1071      7369676E 
 1071      65642069 
 1072              	.LASF33:
 1073 0145 433A5C55 		.ascii	"C:\\Users\\sdysart\\Documents\\UACS\\UACS\\HighFreq"
 1073      73657273 
 1073      5C736479 
 1073      73617274 
 1073      5C446F63 
 1074 0172 46534B5C 		.ascii	"FSK\\USBFS_UART01.cydsn\000"
 1074      55534246 
 1074      535F5541 
 1074      52543031 
 1074      2E637964 
 1075              	.LASF10:
 1076 0189 696E7433 		.ascii	"int32_t\000"
 1076      325F7400 
 1077              	.LASF18:
 1078 0191 73697A65 		.ascii	"sizetype\000"
 1078      74797065 
 1078      00
 1079              	.LASF27:
 1080 019a 70726F6D 		.ascii	"prompt\000"
 1080      707400
 1081              	.LASF6:
ARM GAS  C:\Users\sdysart\AppData\Local\Temp\ccLOetsU.s 			page 26


 1082 01a1 6C6F6E67 		.ascii	"long long int\000"
 1082      206C6F6E 
 1082      6720696E 
 1082      7400
 1083              	.LASF32:
 1084 01af 6D61696E 		.ascii	"main.c\000"
 1084      2E6300
 1085              	.LASF16:
 1086 01b6 63686172 		.ascii	"char\000"
 1086      00
 1087              	.LASF19:
 1088 01bb 636F756E 		.ascii	"count\000"
 1088      7400
 1089              	.LASF2:
 1090 01c1 73686F72 		.ascii	"short int\000"
 1090      7420696E 
 1090      7400
 1091              	.LASF21:
 1092 01cb 62756666 		.ascii	"buffer\000"
 1092      657200
 1093              	.LASF11:
 1094 01d2 75696E74 		.ascii	"uint8\000"
 1094      3800
 1095              	.LASF4:
 1096 01d8 6C6F6E67 		.ascii	"long int\000"
 1096      20696E74 
 1096      00
 1097              	.LASF17:
 1098 01e1 6C6F6E67 		.ascii	"long double\000"
 1098      20646F75 
 1098      626C6500 
 1099              	.LASF0:
 1100 01ed 7369676E 		.ascii	"signed char\000"
 1100      65642063 
 1100      68617200 
 1101              	.LASF25:
 1102 01f9 70617269 		.ascii	"parity\000"
 1102      747900
 1103              	.LASF20:
 1104 0200 6C696E65 		.ascii	"lineStr\000"
 1104      53747200 
 1105              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
